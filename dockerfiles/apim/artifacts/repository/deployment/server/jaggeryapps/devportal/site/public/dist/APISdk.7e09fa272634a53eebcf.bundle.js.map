{"version":3,"sources":["webpack:///./node_modules/js-file-download/file-download.js","webpack:///./source/src/app/components/Apis/Details/Sdk.jsx"],"names":["module","exports","data","filename","mime","bom","blob","Blob","type","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","Sdk","React","Component","constructor","props","super","_event","item","apiId","this","api_uuid","language","getSdkForApi","event","sdkLanguages","state","updatedList","filter","toLowerCase","search","target","value","setState","items","ev","src","app","context","match","params","apiUuid","filter_threshold","bind","handleClick","handleChange","addDefaultSrc","componentDidMount","api","Api","AuthManager","getUser","getSdkLanguages","then","response","obj","length","catch","error","console","log","Alert","getSdk","sdkZipName","headers","sdkZip","JSFileDownload","render","languageList","onlyIcons","intl","classes","theme","custom","apiDetailPages","onlyShowSdks","filteredLanguageList","lang","includes","map","index","xs","key","onClick","onKeyDown","cursor","alt","String","width","height","margin","className","titleWrappper","variant","component","titleSub","id","defaultMessage","label","formatMessage","name","onChange","container","spacing","gridRoot","sm","md","lg","xl","justify","textAlign","cardRoot","toString","toUpperCase","title","root","cardTitle","onError","color","aria-label","genericMessageWrapper","dialogContainer","propTypes","PropTypes","instanceOf","Object","isRequired","injectIntl","withStyles","marginLeft","paddingTop","paddingBottom","palette","getContrastText","background","default","alignItems","marginRight","grey","sdkBackground","withTheme"],"mappings":"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","file":"APISdk.7e09fa272634a53eebcf.bundle.js","sourcesContent":["module.exports = function(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // Fixes \"webkit blob resource error 1\"\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 200)\n    }\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Icon from '@material-ui/core/Icon';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport JSFileDownload from 'js-file-download';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Alert from 'AppComponents/Shared/Alert';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport AuthManager from 'AppData/AuthManager';\nimport { app } from 'Settings';\nimport Api from '../../../data/api';\n\nconst styles = (theme) => ({\n    genericMessageWrapper: {\n        margin: theme.spacing(2),\n    },\n    titleSub: {\n        marginLeft: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    gridRoot: {\n        marginLeft: theme.spacing(2),\n    },\n    titleWrappper: {\n        display: 'flex',\n        alignItems: 'center',\n        '& h4': {\n            marginRight: theme.spacing(1),\n        },\n    },\n    cardTitle: {\n        background: theme.palette.grey[50],\n    },\n    cardRoot: {\n        background: theme.custom.apiDetailPages.sdkBackground,\n    },\n});\n\n/**\n * @class Sdk\n * @extends {React.Component}\n */\nclass Sdk extends React.Component {\n    /**\n     * Create instance of Sdk\n     * @param {JSON} props props passed from parent\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            sdkLanguages: null,\n            items: null,\n        };\n        const { match, apiId } = this.props;\n        this.api_uuid = match ? match.params.apiUuid : apiId;\n        this.filter_threshold = 5;\n        this.getSdkForApi = this.getSdkForApi.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.addDefaultSrc = this.addDefaultSrc.bind(this);\n    }\n\n    /**\n     * @memberof Sdk\n     */\n    componentDidMount() {\n        const api = new Api();\n        const user = AuthManager.getUser();\n        if (user != null) {\n            const promisedLanguages = api.getSdkLanguages();\n\n            promisedLanguages\n                .then((response) => {\n                    if (response.obj.length === 0) {\n                        this.setState({ sdkLanguages: false });\n                        return;\n                    }\n                    this.setState({ sdkLanguages: response.obj });\n                    this.setState({ items: response.obj });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    Alert.error(error);\n                });\n        }\n    }\n\n    /**\n     * Call the REST API to generate the SDK\n     *\n     * @param {string} apiId api id\n     * @param {string} language language selected\n     * @memberof Sdk\n     */\n    getSdkForApi(apiId, language) {\n        const api = new Api();\n        const promisedSdk = api.getSdk(apiId, language);\n\n        promisedSdk\n            .then((response) => {\n                const sdkZipName = response.headers['content-disposition'].match(/filename=\"(.+)\"/)[1];\n                const sdkZip = response.data;\n                // Prompt to download zip file for the SDK\n                JSFileDownload(sdkZip, sdkZipName);\n            })\n            .catch((error) => {\n                console.log(error);\n                Alert.error(error);\n            });\n    }\n\n    /**\n     * Handle the click event of the download button\n     * @param {event} _event click event\n     * @param {string} item selected language\n     * @memberof Sdk\n     */\n    handleClick = (_event, item) => {\n        const apiId = this.api_uuid;\n        const language = item;\n        this.getSdkForApi(apiId, language);\n    };\n\n    /**\n     * Handle the change event of the Search input field\n     * @param {event} event click event\n     * @memberof Sdk\n     */\n    handleChange = (event) => {\n        const { sdkLanguages } = this.state;\n        let updatedList = sdkLanguages;\n        updatedList = updatedList.filter((item) => {\n            return item.toLowerCase().search(event.target.value.toLowerCase()) !== -1;\n        });\n        this.setState({ items: updatedList });\n    };\n\n    /**\n     * Handle sdk image not found issue. Point to a default image\n     * @param {event} ev click event\n     * @memberof Sdk\n     */\n    addDefaultSrc = (ev) => {\n        const evLocal = ev;\n        evLocal.target.src = app.context + '/site/public/images/sdks/default.svg';\n    };\n\n    /**\n     * @returns  {JSX} rendered sdk ui\n     * @memberof Sdk\n     */\n    render() {\n        const languageList = this.state.items;\n        const {\n            onlyIcons, intl, classes, theme,\n        } = this.props;\n        const {\n            custom: {\n                apiDetailPages: { onlyShowSdks },\n            },\n        } = theme;\n        const filteredLanguageList = languageList && languageList.length > 0 && onlyShowSdks && onlyShowSdks.length > 0\n            ? languageList.filter((lang) => onlyShowSdks.includes(lang.toLowerCase()))\n            : languageList;\n        if (onlyIcons) {\n            return (\n                filteredLanguageList && (\n                    <>\n                        {filteredLanguageList.map((language, index) => index < 3 && (\n                            <Grid item xs={4} key={language}>\n                                <a\n                                    onClick={(event) => this.handleClick(event, language)}\n                                    onKeyDown={(event) => this.handleClick(event, language)}\n                                    style={{ cursor: 'pointer' }}\n                                >\n                                    <img\n                                        alt={language}\n                                        src={\n                                            app.context\n                                                    + '/site/public/images/sdks/'\n                                                    + String(language)\n                                                    + '.svg'\n                                        }\n                                        style={{\n                                            width: 80,\n                                            height: 80,\n                                            margin: 10,\n                                        }}\n                                    />\n                                </a>\n                            </Grid>\n                        ))}\n                    </>\n                )\n            );\n        }\n        return (\n            <>\n                <div className={classes.titleWrappper}>\n                    <Typography variant='h4' component='h2' className={classes.titleSub}>\n                        <FormattedMessage id='Apis.Details.Sdk.title' defaultMessage='Software Development Kits (SDKs)' />\n                    </Typography>\n                    {filteredLanguageList && this.state.sdkLanguages.length >= this.filter_threshold && (\n                        <TextField\n                            variant='outlined'\n                            id='search'\n                            label={intl.formatMessage({\n                                defaultMessage: 'Search SDK',\n                                id: 'Apis.Details.Sdk.search.sdk',\n                            })}\n                            type='text'\n                            margin='normal'\n                            name='searchSdk'\n                            onChange={this.handleChange}\n                        />\n                    )}\n                </div>\n                {filteredLanguageList ? (\n                    <Grid container spacing={0} className={classes.gridRoot}>\n                        <Grid item xs={12} sm={6} md={9} lg={9} xl={10}>\n                            <Grid container justify='flex-start' spacing={4}>\n                                {filteredLanguageList.map((language) => (\n                                    <Grid key={language} item>\n                                        <div style={{ width: 'auto', textAlign: 'center', margin: '10px' }}>\n                                            <Card className={classes.cardRoot}>\n                                                <div>{language.toString().toUpperCase()}</div>\n                                                <Divider />\n                                                <CardMedia\n                                                    title={language.toString().toUpperCase()}\n                                                    src={\n                                                        app.context + '/site/public/images/sdks/'\n                                                        + String(language)\n                                                        + '.svg'\n                                                    }\n                                                    classes={{ root: classes.cardTitle }}\n                                                >\n                                                    <img\n                                                        alt={language}\n                                                        onError={this.addDefaultSrc}\n                                                        src={`${app.context}/site/public/images/sdks/${language}.svg`}\n                                                        style={{ width: '100px', height: '100px', margin: '30px' }}\n                                                    />\n                                                </CardMedia>\n                                                <CardActions>\n                                                    <Grid container justify='center'>\n                                                        <Button\n                                                            color='secondary'\n                                                            onClick={(event) => this.handleClick(event, language)}\n                                                            aria-label={'Download ' + language + ' SDK'}\n                                                        >\n                                                            <Icon>arrow_downward</Icon>\n                                                            Download\n                                                        </Button>\n                                                    </Grid>\n                                                </CardActions>\n                                            </Card>\n                                        </div>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                ) : (\n                    <div className={classes.genericMessageWrapper}>\n                        <InlineMessage type='info' className={classes.dialogContainer}>\n                            <Typography variant='h5' component='h3'>\n                                <FormattedMessage id='Apis.Details.Sdk.no.sdks' defaultMessage='No SDKs' />\n                            </Typography>\n                            <Typography component='p'>\n                                <FormattedMessage\n                                    id='Apis.Details.Sdk.no.sdks.content'\n                                    defaultMessage='No SDKs available for this API'\n                                />\n                            </Typography>\n                        </InlineMessage>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSdk.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(Sdk));\n"],"sourceRoot":""}