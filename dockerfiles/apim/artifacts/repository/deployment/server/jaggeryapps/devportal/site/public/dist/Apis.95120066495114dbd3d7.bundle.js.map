{"version":3,"sources":["webpack:///./source/src/app/components/Shared/InlineMessage.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewToken.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewSecret.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/Tokens.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTagThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/TagCloudListingTags.jsx","webpack:///./source/src/app/components/Apis/Listing/NoApi.jsx","webpack:///./source/src/app/components/Shared/LeftMenuItem.jsx","webpack:///./source/src/app/components/Apis/Listing/TagCloudListing.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/SubscribeToApi.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiBreadcrumbs.jsx","webpack:///./source/src/app/components/Shared/withSettingsContext.jsx","webpack:///./source/src/app/components/Apis/Listing/APICards/DocThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTableView.jsx","webpack:///./source/src/app/components/Apis/Listing/APICategoryThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/CategoryListingCategories.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTagCloud.jsx","webpack:///./source/src/app/components/Apis/Listing/RecommendedApiThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/Recommendations.jsx","webpack:///./source/src/app/components/Apis/Listing/CommonListing.jsx","webpack:///./source/src/app/components/Apis/Details/Breadcrumb.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/ButtonPanel.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/CreateAppStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/SubscribeToAppStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateKeysStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateAccessTokenStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/CopyAccessTokenStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/Wizard.jsx","webpack:///./source/src/app/components/Apis/Details/index.jsx","webpack:///./source/src/app/components/Apis/Apis.jsx"],"names":["InlineMessage","props","type","title","messageType","severity","children","propTypes","classes","PropTypes","shape","isRequired","string","ViewToken","React","Component","tokenCopied","name","this","setState","that","elementName","setTimeout","getTokeScopesString","tokenScopes","join","render","token","consumerSecret","state","className","root","secretWrapper","secret","variant","component","isOauth","id","defaultMessage","epWrapper","for","prodLabel","defaultValue","accessToken","multiline","fullWidth","rows","InputProps","disableUnderline","bootstrapRoot","input","bootstrapInput","InputLabelProps","shrink","bootstrapFormLabel","placement","text","onCopy","aria-label","color","validityTime","defaultProps","number","array","withStyles","theme","padding","marginTop","spacing","flex","marginRight","borderRadius","backgroundColor","custom","apiDetailPages","tokenTextBoxBackground","palette","getContrastText","border","height","width","transition","transitions","create","fontFamily","borderColor","boxShadow","display","marginBottom","lineHeight","whiteSpace","contentWrapper","maxWidth","contentAreaWidth","leftMenu","background","paper","ViewSecret","secretCopied","common","white","MenuProps","PaperProps","style","maxHeight","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","tokens","handleChange","field","event","accessTokenRequest","updateAccessTokenRequest","newRequest","target","currentTarget","scopesSelected","value","keyType","subscriptionScopes","margin","FormControlOdd","disabled","length","htmlFor","quotaHelp","multiple","onChange","e","renderValue","selected","chips","map","key","label","chip","scope","contextTypes","intl","FormControl","position","flexWrap","ApiTagThumb","tag","path","mainPage","tagLink","tagWise","thumbnail","image","split","thumbWrapper","to","imageWrapper","src","app","context","alt","classNames","thumbContent","textWrapper","Typography","thumbHeader","gutterBottom","ListItem","button","ListItemIcon","Icon","ListItemText","primary","imageOverlap","func","thumbLeft","alignSelf","thumbRight","thumbInfo","overflow","textOverflow","cursor","justifyContent","contextBox","parseInt","paddingTop","deleteIcon","fill","tagCloud","secondary","alignItems","bottom","contentBackgroundColor","withTheme","useStyles","makeStyles","mainTitle","mainTitleWrapper","flexGrow","listContentWrapper","linkTextWrapper","main","tagWiseThumbWrapper","filterTitle","fontWeight","paddingLeft","titleBackground","infoBar","mainPageList","mainPageAllApis","TagCloudListingTags","useTheme","active","showAllApis","allTags","apisTagCloudGroup","count","filter","item","List","Object","keys","keyInner","Divider","align","messageWrapper","textAlign","NoApi","container","xs","noApiImage","useStylesBootstrap","arrow","black","tooltip","BootstrapTooltip","LeftMenuItem","setSelected","useState","history","route","submenu","open","routeToCheck","strokeColor","iconSize","ditectCurrentMenu","location","window","pathname","test1","RegExp","test2","match","useEffect","listen","activeBackground","leftMenuActive","leftMenuActiveSubmenu","leftLInk","leftLink_IconLeft","cloneElement","leftLink_Icon","noIcon","icon","iconText","leftLInkText","leftLInkText_IconLeft","leftLInkText_NoText","leftLInkText_NoTextWhenSmall","element","oneOfType","bool","withRouter","textTransform","LeftMenu","typography","left","top","paddingBottom","breakpoints","down","paddingRight","fontSize","caption","textDecoration","grey","appBar","borderBottom","A200","mainIconWrapper","content","iconDefault","TagCloudListing","setAllTags","API","getAllTags","then","response","body","list","catch","error","console","log","strokeColorMain","subscribeToApi","appSelected","setAppSelected","policySelected","setPolicySelected","applicationsList","setApplicationsList","throttlingPolicyList","applicationsAvailable","subscriptionRequest","updateSubscriptionRequest","renderSmall","tierName","applicationId","throttlingPolicy","subscribeRoot","subscribeRootSmall","md","smallDisplay","aria-describedby","options","getOptionLabel","option","renderInput","params","smallDisplayFix","displayEmpty","selectEmpty","policy","appDropDown","tierPlan","Fragment","selectMenuRoot","monetizationAttributes","pricePerRequest","currencyType","fixedPrice","billingCycle","index","arrayOf","titleBar","borderBottomWidth","borderBottomStyle","buttonLeft","buttonRight","marginLeft","buttonsWrapper","legend","inputText","buttonRightLink","link","linkNotActive","selectedTagText","textIndent","apiGroup","ApiBreadcrumbs","selectedTag","Paper","elevation","Breadcrumbs","Link","CustomIcon","withSettings","WrappedComponent","windowURL","URL","webkitURL","DocThumb","constructor","super","category","MaterialIcons","categories","selectedIcon","backgroundIndex","imageObj","componentWillUnmount","revokeObjectURL","doc","sourceType","apiName","apiVersion","apiUUID","detailsLink","imageWidth","defaultImage","defaultApiImage","ImageView","ImageGenerator","api","fixedIcon","contentPictureOverlap","onClick","handleRedirectToAPIOverview","contextType","ApiContext","minHeight","flexDirection","ApiTableView","gridView","themeAdditions","muiTheme","overrides","MUIDataTable","tableRoot","listView","tableBodyEvenBackgrund","tableBodyOddBackgrund","tableHeadBackground","MUIDataTablePagination","default","MuiMenuItem","MUIDataTableToolbar","MUIDataTableBodyCell","systemTheme","merge","DefaultConfigurations","Configurations","cloneDeep","dataTableTheme","createMuiTheme","loading","xhrRequest","data","pagination","total","setTenantDomain","code","Alert","formatMessage","finally","query","page","rowsPerPage","searchQuery","URLSearchParams","get","composeQuery","queryString","parse","limit","offset","search","getAllAPIs","localStorage","getItem","pageType","componentDidMount","apiType","getData","componentDidUpdate","prevProps","social","showRating","columns","customBodyRender","tableMeta","updateValue","tableViewObj","rowData","artifact","rowIndex","sort","apiId","apiNameLink","businessOwner","avgRating","StarRatingBar","apiRating","isEditable","showSummary","filterType","responsive","serverSide","onTableChange","action","tableState","changePage","selectableRows","onChangeRowsPerPage","numberOfRows","pageInner","countInner","setItem","textLabels","customRowRender","_data","dataIndex","ApiThumb","customHeight","customWidth","print","download","viewColumns","customToolbar","Loading","getMuiTheme","injectIntl","iconColor","listViewIconSize","APICategoryThumb","categoryLink","categoryDesc","description","substring","Tooltip","listItemText","CategoryListingCategories","allCategories","clickablePointer","ApiTagCloud","colorOptions","useHistory","apisTagWithoutGroups","minSize","maxSize","tags","shuffle","tagSearchURL","push","handleOnClick","RecommendedApiThumb","isHover","toggleMouseOver","bind","Api","getAPIThumbnail","headers","iconJson","JSON","size","url","createObjectURL","getPathPrefix","showInfo","imageHeight","media","Card","onMouseOver","onFocus","onMouseOut","onBlur","raised","card","CardMedia","suppressLinkStyles","CardContent","apiDetails","ratingWrapper","chipWrapper","transportType","Chip","undefined","unit","row","thumbBy","objectFit","Recommendations","assign","getApiRecommendations","rowsPerPageOptions","rowImageOverride","CommonListing","listType","prevState","showLeftMenu","enabled","settings","monetizationEnabled","isMonetizationEnabled","recommendationEnabled","isRecommendationEnabled","defaultApiView","showToggle","restApiClient","apiCategories","user","AuthManager","getUser","tagCloudActive","splits","splitTagArray","tagPaneVisible","categoryPaneVisible","sliderButton","toggleLeftMenu","onKeyDown","LeftMenuForSlider","rotatedText","contentWithoutTags","contentWithTagsHidden","contentWithTags","IconButton","setListType","iconSelected","Provider","Settings","rightIcon","ListingWrapper","listGridSelectedColor","sliderWidth","overflowY","sliderBackground","right","transform","recommendationsBar","mainBack","Breadcrumb","useContext","pages","detectCurrentMenu","locationLocal","i","Box","VerticalDivider","separator","styles","mt","mr","pl","ButtonPanel","currentStep","handleCurrentStep","handleReset","nextActive","updateSubscriptionData","stepsLength","Button","appCreateFormWrapper","warningIcon","APPLICATION_STATES","setThrottlingPolicyList","applicationRequest","setApplicationRequest","tokenType","groups","attributes","isNameValid","setIsNameValid","allAppAttributes","setAllAppAttributes","hasValidKM","setHasValidKM","setCreatedApp","incrementStep","setStepStatus","stepStatuses","apiObject","promiseTiers","getAllTiers","promisedAttributes","getAllApplicationAttributes","promisedKeyManagers","getKeyManagers","Promise","all","tierResponse","allAttributes","keyManagers","throttlingPolicyListLocal","allAppAttr","hidden","responseKeyManagerList","hasValidKMInner","x","status","px","Grid","ApplicationCreateForm","updateApplicationRequest","validateName","trim","resolve","reject","Error","handleAttributesChange","newApplicationRequest","isRequiredAttribute","attribute","required","getAttributeValue","handleDeleteChip","appGroups","values","v","handleAddChip","slice","createApplication","appCreated","PROCEED","BLOCKED","message","mb","ml","SUBSCRIPTION_STATES","newApp","setNewApp","tiers","createdApp","newSubscriptionRequest","tierData","SubscribeToApi","subscribe","subscriptionId","info","keyConfigWrapper","radioWrapper","subTitle","tabPanel","hr","muiFormGroupRoot","table","minWidth","leftCol","iconAligner","TabPanel","other","role","aria-labelledby","node","generateKeysStep","useIntl","keyStates","setNextActive","keyManager","setKeyManager","keyRequest","setKeyRequest","supportedGrantTypes","callbackUrl","additionalProperties","setCreatedKeyType","setCreatedSelectedTab","selectedKeyManager","responseKeyManagerListDefault","newKeyRequest","availableGrantTypes","includes","process","lg","FormHelperText","Table","TableBody","TableRow","TableCell","displayName","tokenEndpoint","revokeEndpoint","userInfoEndpoint","gt","grantTypes","m","Application","application","generateKeys","keyState","tokenWrapper","generateAccessTokenStep","setKeyType","selectedTab","setSelectedTab","setSubscriptionScopes","setAccessTokenRequest","timeout","setCreatedToken","createdKeyType","createdSelectedTab","getKeys","subscriptionScopesList","messages","defineMessages","dataInfo","Tokens","generateToken","stepComponents","CreateAppStep","SubscribeToAppStep","GenerateKeysStep","GenerateAccessTokenStep","createdToken","my","mx","Wizard","stepStatus","steps","redirect","CurrentStepComponent","titleSub","py","Stepper","activeStep","Step","StepLabel","boxWrapper","handleNext","pt","toolbar","subscribeTitle","plainContent","instructions","wizardContent","ApiConsole","lazy","GraphQLConsole","AsyncApiConsole","Overview","Documents","Credentials","Comments","Sdk","AsyncApiDefinition","LoadableSwitch","apiUuid","advertised","advertiseInfo","redirectURL","tryoutRoute","CONSTANTS","API_TYPES","WS","WEBSUB","SSE","fallback","Progress","exact","from","ResourceNotFound","Details","callback","existingSubscriptions","promisedApplications","restApi","getAPIById","api_uuid","notFound","user1","User","isSideBarOpen","getSubscriptions","subscriptionLimit","subscribeApplicationLimit","getAllApplications","subscriptions","applications","obj","subscribedApplications","applicationInfo","subscribedAppIds","sub","appInner","filteredApp","overviewHiden","xo","setDetailsAPI","handleDrawerClose","handleDrawerOpen","prevApiUuid","newApiUuid","setUser","isAsyncAPI","rootIconSize","rootIconTextVisible","rootIconVisible","showCredentials","showComments","showTryout","showDocuments","showSdks","showAsyncSpecification","prefix","sufix","globalStyle","pathPrefix","isWidget","searchParams","isAsyncApi","Helmet","leftMenuHorizontal","leftMenuVerticalLeft","leftMenuVerticalLeftMinView","leftMenuVerticalRight","leftLInkMain","leftLInkMainText","contentExpandView","contentLoader","contentLoaderRightMenu","shiftToLeft","shiftToRight","shiftToLeftMinView","shiftToRightMinView","leftMenuPaddingLeft","backgroundImage","overflowX","borderRight","rootBackground","detailsContent","shiftLeft"],"mappings":"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","file":"Apis.95120066495114dbd3d7.bundle.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Icon from '@material-ui/core/Icon';\nimport VerticalDivider from './VerticalDivider';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\n/**\n * Main style object\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n});\n/**\n *  Renders a inline massage\n *\n * @class InlineMessage\n * @extends {React.Component}\n */\nfunction InlineMessage(props) {\n    const { type, title } = props;\n    const messageType = type || 'info';\n    return (\n        <Alert severity={messageType}>\n            {title && (<AlertTitle>{title}</AlertTitle>)}\n            {props.children}\n        </Alert>\n\n    );\n}\n\nInlineMessage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n};\n\nexport default InlineMessage;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport IconButton from '@material-ui/core/IconButton';\nimport { FormattedMessage } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\nimport ViewSecret from './ViewSecret';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => ({\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n        flex: 1,\n        marginRight: theme.spacing(1),\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.custom.apiDetailPages.tokenTextBoxBackground,\n        color: theme.palette.getContrastText(theme.custom.apiDetailPages.tokenTextBoxBackground),\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        height: 100,\n        width: '100%',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    epWrapper: {\n        display: 'flex',\n        marginTop: 20,\n    },\n    secretWrapper: {\n        display: 'flex',\n        marginBottom: 20,\n    },\n    prodLabel: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n        whiteSpace: 'nowrap',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n    root: {\n        marginTop: 20,\n        '& span, & h5, & label, & td, & li, & div, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n\n    },\n});\n/**\n *\n *\n * @class ViewToken\n * @extends {React.Component}\n */\nclass ViewToken extends React.Component {\n    state = {\n        tokenCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewToken\n     */\n    onCopy = (name) => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewToken\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewToken\n     */\n    render() {\n        const {\n            classes, token, consumerSecret,\n        } = this.props;\n        const { tokenCopied } = this.state;\n        return (\n            <div className={classes.root}>\n                {consumerSecret && (\n                    <div className={classes.secretWrapper}>\n                        <ViewSecret secret={{ consumerSecret }} />\n                    </div>\n                )}\n                <InlineMessage type='warn'>\n                    <Typography variant='h5' component='h3'>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy'\n                                defaultMessage='Please Copy the Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy.apikey'\n                                defaultMessage='Please Copy the API Key'\n                            />\n                        )}\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.please.copy.help'\n                            defaultMessage={'If the token type is JWT or API Key, please copy this generated token value as it will be displayed only for'\n                            + ' the current browser session. '\n                            + '( The token will not be visible in the UI after the page is refreshed. )'}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <label for='access-token' className={classes.prodLabel}>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.access.token'\n                                defaultMessage='Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.apikey'\n                                defaultMessage='API Key'\n                            />\n                        )}\n                    </label>\n                    <TextField\n                        defaultValue={token.accessToken}\n                        id='access-token'\n                        multiline\n                        fullWidth\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip title={tokenCopied ? 'Copied' : 'Copy to clipboard'} placement='right'>\n                        <CopyToClipboard text={token.accessToken} onCopy={this.onCopy('tokenCopied')}>\n                            <IconButton aria-label='Copy to clipboard'>\n                                <FileCopy color='secondary'>file_copy</FileCopy>\n                            </IconButton>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n                <FormHelperText>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.first'\n                        defaultMessage='Above token has a validity period of '\n                    />\n                    {token.validityTime}\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.second'\n                        defaultMessage=' seconds'\n                    />\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.third'\n                            defaultMessage=' and the token has ('\n                        />\n                    )}\n                    {this.getTokeScopesString(token.tokenScopes)}\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.fourth'\n                            defaultMessage=') scopes'\n                        />\n                    )}\n.\n                </FormHelperText>\n            </div>\n        );\n    }\n}\n\nViewToken.defaultProps = {\n    consumerSecret: null,\n};\n\nViewToken.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    token: PropTypes.shape({\n        accessToken: PropTypes.string.isRequired,\n        validityTime: PropTypes.number.isRequired,\n        tokenScopes: PropTypes.array.isRequired,\n    }).isRequired,\n    consumerSecret: PropTypes.string,\n};\n\nexport default withStyles(styles)(ViewToken);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        width: 350,\n        height: 100,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    epWrapper: {\n        display: 'flex',\n        marginTop: 20,\n    },\n    prodLabel: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n    root: {\n        marginBottom: 20,\n    },\n});\n/**\n *\n *\n * @class ViewSecret\n * @extends {React.Component}\n */\nclass ViewSecret extends React.Component {\n    state = {\n        secretCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewSecret\n     */\n    onCopy = name => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     *\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewSecret\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewSecret\n     */\n    render() {\n        const { classes, secret } = this.props;\n        const { secretCopied } = this.state;\n        return (\n            <div className={classes.root}>\n                <InlineMessage type='warn'>\n                    <Typography variant='h5' component='h3'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret'\n                            defaultMessage='Please Copy the Consumer Secret'\n                        />\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret.help'\n                            defaultMessage={`Please make a note of the regenerated consumer \n                            secret value as it will be displayed only once.`}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <Typography className={classes.prodLabel}>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.consumer.secret'\n                            defaultMessage='Consumer Secret'\n                        />\n                    </Typography>\n                    <TextField\n                        defaultValue={secret.consumerSecret}\n                        id='bootstrap-input'\n                        multiline\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip title={secretCopied ? 'Copied' : 'Copy to clipboard'} placement='right'>\n                        <CopyToClipboard text={secret.consumerSecret} onCopy={this.onCopy('secretCopied')}>\n                            <FileCopy color='secondary'>file_copy</FileCopy>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nViewSecret.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    secret: PropTypes.shape({\n        consumerSecret: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default withStyles(styles)(ViewSecret);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n// Styles for Grid and Paper elements\nconst styles = theme => ({\n    FormControl: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    FormControlOdd: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: theme.spacing(0.25),\n    },\n});\n\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: 224,\n            width: 250,\n        },\n    },\n    anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n    },\n    transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n    },\n    getContentAnchorEl: null,\n};\n\n/**\n * Used to display generate acctoken UI\n */\nconst tokens = (props) => {\n    /**\n    * This method is used to handle the updating of create application\n    * request object.\n    * @param {*} field field that should be updated in appliction request\n    * @param {*} event event fired\n    */\n    const handleChange = (field, event) => {\n        const { accessTokenRequest, updateAccessTokenRequest } = props;\n        const newRequest = { ...accessTokenRequest };\n\n        const { target: currentTarget } = event;\n\n        switch (field) {\n            case 'scopesSelected':\n                newRequest.scopesSelected = currentTarget.value;\n                break;\n            case 'keyType':\n                newRequest.keyType = currentTarget.value;\n                break;\n            default:\n                break;\n        }\n        updateAccessTokenRequest(newRequest);\n    };\n    const {\n        classes, accessTokenRequest, subscriptionScopes,\n    } = props;\n\n    return (\n        <>\n            <FormControl\n                margin='normal'\n                className={classes.FormControlOdd}\n                disabled={subscriptionScopes.length === 0}\n            >\n                <InputLabel htmlFor='quota-helper' className={classes.quotaHelp}>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.Tokens.when.you.generate.scopes'\n                        defaultMessage='Scopes'\n                    />\n\n                </InputLabel>\n                <Select\n                    name='scopesSelected'\n                    multiple\n                    value={accessTokenRequest.scopesSelected}\n                    onChange={e => handleChange('scopesSelected', e)}\n                    input={<Input id='select-multiple-chip' />}\n                    renderValue={selected => (\n                        <div className={classes.chips}>\n                            {selected.map(value => (\n                                <Chip key={value} label={value} className={classes.chip} />\n                            ))}\n                        </div>\n                    )}\n                    MenuProps={MenuProps}\n                >\n                    {subscriptionScopes.map(scope => (\n                        <MenuItem\n                            key={scope}\n                            value={scope}\n                        >\n                            {scope}\n                        </MenuItem>\n                    ))}\n                </Select>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.Tokens.when.you.generate'\n                        defaultMessage={'When you generate access tokens to APIs protected by scope/s,'\n                            + ' you can select the scope/s and then generate the token for it. Scopes enable '\n                            + 'fine-grained access control to API resources based on user roles. You define scopes to '\n                            + 'an API resource. When a user invokes the API, his/her OAuth 2 bearer token cannot grant '\n                            + 'access to any API resource beyond its associated scopes.'}\n                    />\n                </Typography>\n            </FormControl>\n        </>\n    );\n};\ntokens.contextTypes = {\n    intl: PropTypes.shape({}).isRequired,\n};\nexport default withStyles(styles)(tokens);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { app } from 'Settings';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = (theme) => ({\n    thumbContent: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        justifyContent: 'center',\n        margin: 0,\n    },\n    contextBox: {\n        // eslint-disable-next-line radix\n        width: parseInt(150 - theme.spacing(0.5)),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    image: {\n        width: theme.custom.tagWise.thumbnail.width,\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.tagWise.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n\n/**\n * Get ApiTagThumb\n * @param {*} props properties\n * @returns {*}\n */\nfunction ApiTagThumb(props) {\n    const {\n        tag, path, classes, theme, style, mainPage,\n    } = props;\n    const tagLink = path + ':' + tag.value;\n    const {\n        tagWise: {\n            thumbnail: { image },\n        },\n    } = theme.custom;\n    const name = tag.value.split(theme.custom.tagWise.key)[0];\n    if (style === 'fixed-left' || !mainPage) {\n        return (\n            <Link to={tagLink} className={classes.textWrapper}>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Icon>label</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={name} />\n                </ListItem>\n            </Link>\n        );\n    }\n\n    return (\n        <div className={classes.thumbWrapper}>\n            <Link to={tagLink} className={classes.imageWrapper}>\n                <img src={app.context + image} className={classes.image} alt='' />\n            </Link>\n            <div className={classNames(classes.thumbContent)}>\n                <Link to={tagLink} className={classes.textWrapper}>\n                    <Typography className={classes.thumbHeader} variant='h4' gutterBottom title={name}>\n                        {name}\n                    </Typography>\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nApiTagThumb.propTypes = {\n    classes: PropTypes.shape({\n        thumbWrapper: PropTypes.shape({}).isRequired,\n        imageWrapper: PropTypes.shape({}).isRequired,\n        thumbContent: PropTypes.shape({}).isRequired,\n        imageOverlap: PropTypes.shape({}).isRequired,\n        textWrapper: PropTypes.shape({}).isRequired,\n        thumbHeader: PropTypes.shape({}).isRequired,\n        image: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            tagWise: PropTypes.shape({}).isRequired,\n        }).isRequired,\n    }).isRequired,\n    tag: PropTypes.shape({\n        value: PropTypes.shape({\n            split: PropTypes.func,\n        }).isRequired,\n    }).isRequired,\n    path: PropTypes.shape({}).isRequired,\n    style: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ApiTagThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport ApiTagThumb from './ApiTagThumb';\n\nconst useStyles = makeStyles((theme) => ({\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    linkTextWrapper: {\n        color: theme.palette.primary.main,\n    },\n    tagWiseThumbWrapper: {\n        display: 'flex',\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n    mainPageList: {\n        display: 'flex',\n    },\n    mainPageAllApis: {\n        width: '100%',\n    },\n}));\n\n/**\n * Tag cloud listing tags\n * @param {JSON} props properties passed from parent.\n * @returns {void}\n */\nfunction TagCloudListingTags(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: {\n                key, active, style, showAllApis,\n            },\n        },\n    } = theme;\n\n\n    const tagWiseURL = '/apis?offset=0&query=tag';\n    const { allTags, mainPage } = props;\n    let apisTagCloudGroup = null;\n\n    if (allTags.count !== 0) {\n        if (allTags !== null) {\n            apisTagCloudGroup = allTags.filter((item) => active === true && item.value.split(key).length > 1);\n        }\n        if (apisTagCloudGroup && apisTagCloudGroup.length > 0) {\n            // const tagLink = tagWiseURL + ':' + apisTagCloudGroup[0].value;\n            // if (style === 'fixed-left') history.push(tagLink);\n        }\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n    return apisTagCloudGroup && apisTagCloudGroup.length > 0 ? (\n        <>\n            {!mainPage && (\n                <Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                    <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.TagCloudListingTags.title' />\n                </Typography>\n            )}\n            <List component='nav' aria-label='main mailbox folders' className={classNames({ [classes.mainPageList]: mainPage })}>\n                {Object.keys(apisTagCloudGroup).map((keyInner) => {\n                    return (\n                        <ApiTagThumb\n                            key={keyInner}\n                            tag={apisTagCloudGroup[keyInner]}\n                            path={tagWiseURL}\n                            style={style}\n                            mainPage={mainPage}\n                        />\n                    );\n                })}\n            </List>\n            {showAllApis && (\n                <div className={classNames({ [classes.mainPageAllApis]: mainPage })}>\n                    <Divider />\n\n                    <Link to='apis/' className={classes.textWrapper}>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <Icon>label</Icon>\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={(\n                                    <FormattedMessage\n                                        defaultMessage='All Apis'\n                                        id='Apis.Listing.TagCloudListingTags.allApis'\n                                    />\n                                )}\n                            />\n                        </ListItem>\n                    </Link>\n                </div>\n            )}\n        </>\n\n    ) : (\n        <>\n            {!mainPage && (\n                <Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                    <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.TagCloudListingTags.title' />\n                </Typography>\n            )}\n            <div className={classes.mainTitle}>\n                <Typography variant='subtitle1' gutterBottom align='center'>\n                    <FormattedMessage\n                        defaultMessage='API groups cannot be found'\n                        id='Apis.Listing.TagCloudListingTags.tagsNotFound'\n                    />\n                </Typography>\n                <Link to='apis/' className={classes.linkTextWrapper}>\n                    <Typography variant='subtitle1' gutterBottom align='center'>\n                        <FormattedMessage\n                            defaultMessage='All Apis'\n                            id='Apis.Listing.TagCloudListingTags.allApis'\n                        />\n                    </Typography>\n                </Link>\n            </div>\n        </>\n    );\n}\n\nTagCloudListingTags.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default TagCloudListingTags;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { app } from 'Settings';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    messageWrapper: {\n        marginTop: theme.spacing(4),\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\n/**\n * Render no api section\n * @returns {void}\n */\nexport default function NoApi() {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} className={classes.messageWrapper}>\n                    <img alt='API icon' src={app.context + theme.custom.noApiImage} className={classes.messageWrapper} />\n                    <Typography id='itest-no-apis' variant='h5' gutterBottom>\n                        <FormattedMessage id='Apis.Listing.NoApi.nodata.title' defaultMessage='No APIs Available' />\n                    </Typography>\n                    <Typography variant='subtitle1' gutterBottom>\n                        <FormattedMessage\n                            id='Apis.Listing.NoApi.nodata.content'\n                            defaultMessage='There are no APIs to display right now.'\n                        />\n                    </Typography>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CustomIcon from './CustomIcon';\n\nconst useStylesBootstrap = makeStyles((theme) => ({\n    arrow: {\n        color: theme.palette.common.black,\n    },\n    tooltip: {\n        backgroundColor: theme.palette.common.black,\n    },\n}));\n\nfunction BootstrapTooltip(props) {\n    const classes = useStylesBootstrap();\n\n    return <Tooltip arrow classes={classes} {...props} />;\n}\nconst styles = (theme) => ({\n    leftLInkText: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        textTransform: 'capitalize',\n        width: '100%',\n        textAlign: 'left',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    leftLInkText_IconLeft: {\n        paddingLeft: 10,\n    },\n    LeftMenu: {\n        backgroundColor: theme.custom.leftMenu.background,\n        width: theme.custom.leftMenu.width,\n        textAlign: 'center',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        top: 0,\n    },\n    leftLInk: {\n        paddingTop: theme.spacing(0.6),\n        paddingBottom: theme.spacing(0.6),\n        paddingLeft: theme.spacing(1),\n        [theme.breakpoints.down('sm')]: {\n            paddingLeft: 0,\n        },\n        paddingRight: 0,\n        fontSize: theme.typography.caption.fontSize,\n        cursor: 'pointer',\n        textDecoration: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    leftLink_Icon: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        fontSize: theme.custom.leftMenu.iconSize + 'px',\n    },\n    leftLink_IconLeft: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    noIcon: {\n        display: 'none',\n    },\n    leftLInkText_NoText: {\n        display: 'none',\n    },\n    leftLInkText_NoTextWhenSmall: {\n        [theme.breakpoints.down('sm')]: {\n            display: 'none !important',\n        }\n    },\n    submenu: {\n        paddingLeft: 12,\n        [theme.breakpoints.down('sm')]: {\n            paddingLeft: 0,\n            color: theme.palette.grey[500],\n        }\n    },\n});\n/**\n * Renders the left menu section.\n * @param {JSON} props props passed from parent\n * @returns {JSX} Leftmenu element.\n */\nfunction LeftMenuItem(props) {\n    const [selected, setSelected] = useState(false);\n\n    const {\n        classes, theme, Icon, to, history, text, route, submenu, open\n    } = props;\n    const routeToCheck = route || text;\n    const { leftMenu } = theme.custom;\n    const strokeColor = theme.palette.getContrastText(leftMenu.background);\n    const { iconSize } = leftMenu;\n    const ditectCurrentMenu = (location = null) => {\n        if (!location) {\n            location = window.location;\n        }\n        const { pathname } = location;\n\n        const test1 = new RegExp('/' + routeToCheck + '$', 'g');\n        const test2 = new RegExp('/' + routeToCheck + '/', 'g');\n        if (pathname.match(test1) || pathname.match(test2)) {\n            setSelected(true);\n        } else {\n            setSelected(false);\n        }\n\n\n    };\n    useEffect(() => {\n        ditectCurrentMenu();\n    }, []);\n    history.listen((location) => {\n        ditectCurrentMenu(location);\n    });\n    let activeBackground = '';\n    if (selected && !submenu) {\n        activeBackground = leftMenu.leftMenuActive;\n    } else if (selected && submenu) {\n        activeBackground = leftMenu.leftMenuActiveSubmenu;\n    }\n    return (\n        <BootstrapTooltip title={props.text} placement=\"right\">\n            <Link\n                className={classNames(\n                    classes.leftLInk,\n                    {\n                        [classes.leftLink_IconLeft]: leftMenu === 'icon left',\n                        [classes.submenu]: submenu,\n                    },\n                    'leftLInk',\n                )}\n                to={to}\n                style={{ backgroundColor: activeBackground }}\n                title={text}\n            >\n                {\n                    // If the icon pro ( which is coming from the React Material library )\n                    // is coming we add css class and render.\n                    // If leftMenu='no icon' at the theme object we hide the icon. Also we add static classes to\n                    // allow customers theme\n                    // the product without compiling.\n                    Icon ? (\n                        React.cloneElement(Icon, {\n                            className: classNames(\n                                classes.leftLink_Icon,\n                                {\n                                    [classes.noIcon]: leftMenu.style === 'no icon',\n                                    [classes.submenu]: submenu,\n                                },\n                                'leftLink_Icon',\n                            ),\n                        })\n                    ) : (\n                            // We can also add custom icons\n                            <CustomIcon\n                                strokeColor={submenu ? '#cccccc' : strokeColor}\n                                width={submenu ? iconSize - 10 : iconSize}\n                                height={submenu ? iconSize - 10 : iconSize}\n                                icon={props.iconText}\n                                className={classNames(\n                                    classes.leftLInk,\n                                    {\n                                        [classes.noIcon]: leftMenu.style === 'no icon',\n                                    },\n                                    'leftLink_Icon',\n                                )}\n                            />\n\n                        )}\n                {open && (\n                    <Typography\n                        className={classNames(\n                            classes.leftLInkText,\n                            {\n                                [classes.leftLInkText_IconLeft]: leftMenu.style === 'icon left',\n                                [classes.leftLInkText_NoText]: leftMenu.style === 'no text',\n                            },\n                            classes.leftLInkText_NoTextWhenSmall,\n                            'leftLInkText',\n                        )}\n                    >\n                        {props.text}\n                    </Typography>\n                )}\n                {!open && (\n                    <Typography\n                        className={classNames(\n                            {\n                                [classes.leftLInkText_IconLeft]: leftMenu.style === 'icon left',\n                            },\n                            classes.leftLInkText_NoTextWhenSmall,\n                            'leftLInkText',\n                        )}\n                    />\n                )}\n\n\n            </Link>\n        </BootstrapTooltip>\n    );\n}\nLeftMenuItem.defaultProps = {\n    route: null,\n    iconText: null,\n    Icon: null,\n    submenu: false,\n};\nLeftMenuItem.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    Icon: PropTypes.element,\n    text: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({}),\n    ]).isRequired,\n    to: PropTypes.string.isRequired,\n    route: PropTypes.string,\n    iconText: PropTypes.string,\n    history: PropTypes.shape({\n        location: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    submenu: PropTypes.bool,\n};\nexport default withRouter(withStyles(styles, { withTheme: true })(LeftMenuItem));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CustomIcon from '../../Shared/CustomIcon';\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    mainIconWrapper: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    content: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    iconDefault: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n}));\n/**\n * Renders tag cloud.\n * @returns {JSX} Tag cloud listing.\n */\nexport default function TagCloudListing() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [allTags, setAllTags] = useState(null);\n    useEffect(() => {\n        const restApiClient = new API();\n        const promisedTags = restApiClient.getAllTags();\n        promisedTags\n            .then((response) => {\n                setAllTags(response.body.list);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, []);\n    const strokeColorMain = theme.palette.getContrastText(theme.palette.background.paper);\n\n    return (\n        <main className={classes.content}>\n            <div className={classes.appBar}>\n                <div className={classes.mainIconWrapper}>\n                    <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                </div>\n                <div className={classes.mainTitleWrapper}>\n                    <Typography variant='h4' className={classes.mainTitle}>\n                        <FormattedMessage\n                            defaultMessage='API Groups'\n                            id='Apis.Listing.TagCloudListing.apigroups.main'\n                        />\n                    </Typography>\n                </div>\n            </div>\n            <div className={classes.listContentWrapper}>\n                {allTags && <TagCloudListingTags allTags={allTags} mainPage />}\n            </div>\n        </main>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PropTypes from 'prop-types';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = theme => ({\n    titleBar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        borderBottomWidth: '1px',\n        borderBottomStyle: 'solid',\n        borderColor: theme.palette.text.secondary,\n        marginBottom: 20,\n    },\n    buttonLeft: {\n        alignSelf: 'flex-start',\n        display: 'flex',\n    },\n    buttonRight: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n        marginLeft: 20,\n    },\n    title: {\n        display: 'inline-block',\n        marginLeft: 20,\n    },\n    buttonsWrapper: {\n        marginTop: 40,\n    },\n    legend: {\n        marginBottom: 0,\n        borderBottomStyle: 'none',\n        marginTop: 20,\n        fontSize: 12,\n    },\n    inputText: {\n        marginTop: 20,\n    },\n    buttonRightLink: {\n        textDecoration: 'none',\n    },\n    FormControl: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    fullWidth: {\n        '& .MuiFormControl-root':{\n            width: '100%',\n        }\n    },\n    FormControlOdd: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    subscribeRoot: {\n        paddingLeft: theme.spacing(2),\n    },\n    subscribeRootSmall: {\n        marginLeft: `-${theme.spacing(4)}px`,\n    },\n    smallDisplay: {\n        width: 240,\n        '& .MuiInput-formControl': {\n            marginTop: 0,\n        },\n    },\n    smallDisplayFix: {\n        '& .MuiSelect-selectMenu': {\n            padding: 0,\n        },\n    },\n    selectMenuRoot: {\n        margin: 0,\n        padding: 0,\n    },\n    appDropDown: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n});\n\nconst subscribeToApi = (props) => {\n    const [appSelected, setAppSelected] = useState('');\n    const [policySelected, setPolicySelected] = useState('');\n    const [applicationsList, setApplicationsList] = useState([]);\n    const {\n        classes,\n        throttlingPolicyList,\n        applicationsAvailable,\n        subscriptionRequest,\n        updateSubscriptionRequest,\n        renderSmall,\n    } = props;\n\n    useEffect(() => {\n        if (throttlingPolicyList && throttlingPolicyList[0]) {\n            setPolicySelected(throttlingPolicyList[0].tierName);\n        }\n    }, [throttlingPolicyList]);\n\n    useEffect(() => {\n        if (applicationsAvailable && applicationsAvailable[0]) {\n            setApplicationsList(applicationsAvailable);\n            setAppSelected(applicationsAvailable[0]);\n            const newRequest = { ...subscriptionRequest };\n            newRequest.applicationId = applicationsAvailable[0].value;\n        }\n    }, [applicationsAvailable]);\n\n    /**\n     * This method is used to handle the updating of subscription\n     * request object and selected fields.\n     * @param {*} field field that should be updated in subscription request\n     * @param {*} event event fired\n     */\n    const handleChange = (field, event,value = null) => {\n        const newRequest = { ...subscriptionRequest };\n        const { target } = event;\n        switch (field) {\n            case 'application':\n                newRequest.applicationId = value.value;\n                setAppSelected(value);\n                break;\n            case 'throttlingPolicy':\n                newRequest.throttlingPolicy = target.value;\n                setPolicySelected(target.value);\n                break;\n            default:\n                break;\n        }\n        updateSubscriptionRequest(newRequest);\n    };\n\n    return (\n        <Grid container className={classNames(classes.subscribeRoot, { [classes.subscribeRootSmall]: renderSmall })}>\n            <Grid item xs={12} md={renderSmall ? 12 : 6}>\n                {appSelected && (\n                    <FormControl className={classNames(classes.FormControl, { [classes.smallDisplay]: renderSmall })}>\n                        <InputLabel shrink for='application-subscribe' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.application'\n                                defaultMessage='Application'\n                            />\n                        </InputLabel>\n                        <Autocomplete\n                           id=\"application-subscribe\"\n                           aria-describedby='application-helper-text'\n                           options={applicationsList}\n                           value={(applicationsList.length !== 0 && appSelected === '') ?\n                                applicationsList[0] : appSelected}\n                           onChange={(e, value) => handleChange('application', e, value)}\n                           getOptionLabel={(option) => option.label}\n                           classes={{root:classes.fullWidth}}\n                           renderInput={(params) => <TextField {...params} />}\n                         />\n                        <FormHelperText id='application-helper-text'>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.select.an.application.to.subscribe'\n                                defaultMessage='Select an Application to subscribe'\n                            />\n                        </FormHelperText>\n                    </FormControl>\n                )}\n                {throttlingPolicyList && (\n                    <FormControl\n                        className={classNames(classes.FormControl, classes.smallDisplayFix, {\n                            [classes.smallDisplay]: renderSmall,\n                            [classes.FormControlOdd]: !renderSmall,\n                        })}\n                    >\n                        <InputLabel shrink htmlFor='policy-label-placeholder' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.business.plan'\n                                defaultMessage='Business Plan'\n                            />\n                        </InputLabel>\n                        <Select\n                            value={policySelected}\n                            aria-describedby='policies-helper-text'\n                            onChange={e => handleChange('throttlingPolicy', e)}\n                            input={<Input name='policySelected' id='policy-label-placeholder' />}\n                            displayEmpty\n                            name='policySelected'\n                            className={classes.selectEmpty}\n                        >\n                            {throttlingPolicyList.map(policy => (\n                                <MenuItem value={policy.tierName} key={policy.tierName}  className={classes.appDropDown}>\n                                    {policy.tierPlan === 'COMMERCIAL' ? (\n                                        <React.Fragment>\n                                            <ListItemText\n                                                classes={{ root: classes.selectMenuRoot }}\n                                                primary={policy.tierName}\n                                                secondary={\n                                                    policy.monetizationAttributes.pricePerRequest ? (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.pricePerRequest}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per Request'}\n                                                        </Typography>\n                                                    ) : (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.fixedPrice}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per '}\n                                                            {policy.monetizationAttributes.billingCycle}\n                                                        </Typography>\n                                                    )\n                                                }\n                                            />\n                                        </React.Fragment>\n                                    ) : (\n                                        <ListItemText primary={policy.tierName} />\n                                    )}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        <FormHelperText id='policies-helper-text'>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.available.policies'\n                                defaultMessage='Available Policies -'\n                            />{' '}\n                            {throttlingPolicyList.map((policy, index) => (\n                                <span key={policy.tierName}>\n                                    {policy.tierName}\n                                    {index !== throttlingPolicyList.length - 1 && <span>,</span>}\n                                </span>\n                            ))}\n                        </FormHelperText>\n                    </FormControl>\n                )}\n            </Grid>\n        </Grid>\n    );\n};\nsubscribeToApi.propTypes = {\n    classes: PropTypes.shape({\n        FormControl: PropTypes.string,\n        quotaHelp: PropTypes.string,\n        selectEmpty: PropTypes.string,\n        FormControlOdd: PropTypes.string,\n        subscribeRoot: PropTypes.string,\n        subscribeRootSmall: PropTypes.string,\n        smallDisplayFix: PropTypes.string,\n        selectMenuRoot: PropTypes.string,\n        smallDisplay: PropTypes.string,\n    }).isRequired,\n    applicationsAvailable: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.string,\n        label: PropTypes.string,\n    })).isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    subscriptionRequest: PropTypes.shape({}).isRequired,\n    updateSubscriptionRequest: PropTypes.func.isRequired,\n    renderSmall: PropTypes.bool,\n};\nsubscribeToApi.defaultProps = {\n    renderSmall: false,\n};\n\nexport default withStyles(styles)(subscribeToApi);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Icon from '@material-ui/core/Icon';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1, 3),\n    },\n    link: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    linkNotActive: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'default',\n    },\n    icon: {\n        marginRight: theme.spacing(0.5),\n        width: 20,\n        height: 20,\n    },\n    selectedTagText: {\n        textIndent: 4,\n    },\n    apiGroup: {\n        color: theme.palette.grey[800],\n    },\n}));\n\n/**\n * Render no api breadcrumb section.\n * @param {JSON} props properties passed down from the parent.\n * @returns {JSX} Api breadcrumb section.\n */\nexport default function ApiBreadcrumbs(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const { selectedTag } = props;\n    return (\n        <Paper elevation={0} className={classes.root}>\n            <Breadcrumbs aria-label='breadcrumb'>\n                <RouterLink\n                    to={theme.custom.tagWise.active && theme.custom.tagWise.style === 'page' ? '/api-groups' : '/apis'}\n                    className={classes.apiGroup}\n                >\n                    <Link color='inherit' className={classes.link}>\n                        <Icon className={classes.icon}>dynamic_feed</Icon>\n                        <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.ApiBreadcrumbs.apigroups.main' />\n                    </Link>\n                </RouterLink>\n\n                {selectedTag && (\n                    <Link color='inherit' className={classes.linkNotActive}>\n                        <CustomIcon width={16} height={16} icon='api' />\n                        <span className={classes.selectedTagText}>{selectedTag}</span>\n                    </Link>\n                )}\n            </Breadcrumbs>\n        </Paper>\n    );\n}\n","import React from 'react';\nimport { SettingsConsumer } from './SettingsContext';\n\nconst withSettings = (WrappedComponent) => {\n    /**\n     * Higher order component with settings\n     * @param {*} props properties\n     * @returns {Context.Consumer}\n     */\n    function HOCWithSettings(props) {\n        return (\n            <SettingsConsumer>\n                {\n                    context => <WrappedComponent {...context} {...props} />\n                }\n            </SettingsConsumer>\n        );\n    }\n    return HOCWithSettings;\n};\n\nexport default withSettings;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport ImageGenerator from './ImageGenerator';\nimport { ApiContext } from '../../Details/ApiContext';\n\nconst styles = (theme) => ({\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n        minHeight: 130,\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing(1)) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 15,\n        marginLeft: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n\nconst windowURL = window.URL || window.webkitURL;\n/**\n *\n *\n * @class DocThumb\n * @extends {React.Component}\n */\nclass DocThumb extends React.Component {\n    /**\n     * Creates an instance of DocThumb.\n     * @param {JSON} props properties\n     * @memberof DocThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n        };\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        const { thumbnail, imageObj } = this.state;\n        if (thumbnail) {\n            windowURL.revokeObjectURL(imageObj);\n        }\n    }\n\n    /**\n     * @returns {JSX} doc thumbnail\n     * @memberof DocThumb\n     */\n    render() {\n        const {\n            selectedIcon, color, backgroundIndex, category,\n        } = this.state;\n        const { doc, classes, theme } = this.props;\n        const {\n            doc: {\n                name, sourceType, apiName, apiVersion, id, apiUUID,\n            },\n        } = this.props;\n        const detailsLink = '/apis/' + apiUUID + '/documents/' + id + '/details';\n        const { thumbnail } = theme.custom;\n        const imageWidth = thumbnail.width;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        const ImageView = (\n            <ImageGenerator\n                width={imageWidth}\n                height={140}\n                api={doc}\n                fixedIcon={{\n                    key: selectedIcon,\n                    color,\n                    backgroundIndex,\n                    category,\n                    doc,\n                }}\n            />\n        );\n\n        return (\n            <div className={classes.thumbWrapper}>\n                <Link to={detailsLink} className={classes.imageWrapper}>\n                    {!defaultImage && ImageView}\n                    {defaultImage && <img src={defaultImage} alt='document' />}\n                </Link>\n\n                <div\n                    className={classNames(classes.thumbContent, {\n                        [classes.imageOverlap]: thumbnail.contentPictureOverlap,\n                    })}\n                >\n                    <Link to={detailsLink} className={classes.textWrapper}>\n                        <Typography\n                            className={classes.thumbHeader}\n                            variant='h4'\n                            gutterBottom\n                            onClick={this.handleRedirectToAPIOverview}\n                            title={name}\n                        >\n                            {name}\n                        </Typography>\n                    </Link>\n                    <Typography variant='caption' gutterBottom align='left'>\n                        <FormattedMessage defaultMessage='Source Type:' id='Apis.Listing.DocThumb.sourceType' />\n                        {sourceType}\n                    </Typography>\n                    <div className={classes.thumbInfo}>\n                        <div className={classes.thumbLeft}>\n                            <Typography variant='subtitle1'>{apiName}</Typography>\n                            <Typography variant='caption' gutterBottom align='left'>\n                                <FormattedMessage defaultMessage='Api Name' id='Apis.Listing.DocThumb.apiName' />\n                            </Typography>\n                        </div>\n                        <div className={classes.thumbRight}>\n                            <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                                {apiVersion}\n                            </Typography>\n                            <Typography variant='caption' gutterBottom align='right' component='div'>\n                                <FormattedMessage defaultMessage='API Version' id='Apis.Listing.DocThumb.apiVersion' />\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nDocThumb.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(DocThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport merge from 'lodash.merge';\nimport cloneDeep from 'lodash.clonedeep';\nimport queryString from 'query-string';\nimport API from 'AppData/api';\nimport { withTheme } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Icon from '@material-ui/core/Icon';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport DefaultConfigurations from 'AppData/defaultTheme';\nimport ImageGenerator from './APICards/ImageGenerator';\nimport ApiThumb from './ApiThumb';\nimport DocThumb from './APICards/DocThumb';\nimport { ApiContext } from '../Details/ApiContext';\nimport NoApi from './NoApi';\n\nconst styles = (theme) => ({\n    apiNameLink: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n});\n/**\n * Table view for api listing\n *\n * @class ApiTableView\n * @extends {React.Component}\n */\nclass ApiTableView extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof ApiTableView\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n        this.page = 0;\n        this.count = 100;\n        this.rowsPerPage = localStorage.getItem('portal.numberOfRows') || 10;\n        this.pageType = null;\n    }\n\n    /**\n     * Component mount call back\n     * @returns {void}\n     */\n    componentDidMount() {\n        this.apiType = this.context.apiType;\n        this.getData();\n    }\n\n    /**\n     * Component update call back\n     * @param {JSON} prevProps properties from previous state of the component\n     * @returns {void}\n     */\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            this.apiType !== this.context.apiType\n            || query !== prevProps.query\n            || prevProps.selectedTag !== selectedTag\n        ) {\n            this.page = 0;\n            this.apiType = this.context.apiType;\n            this.getData();\n        }\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        const muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& a > div': {\n                            paddingRight: 10,\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                            lineHeight: 1,\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTablePagination: {\n                    root: {\n                        color: theme.palette.getContrastText(theme.palette.background.default),\n\n                    },\n                },\n                MuiMenuItem: {\n                    root: {\n                        color: theme.palette.getContrastText(theme.palette.background.default),\n                    },\n                },\n                MUIDataTableToolbar: {\n                    root: {\n                        '& svg': {\n                            color: theme.palette.getContrastText(theme.palette.background.default),\n                        },\n                    },\n                },\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            border: 'none',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                            '& tr:nth-child(odd),& tr:nth-child(even)': {\n                                display: 'block',\n                                marginRight: 5,\n                                marginBottom: 5,\n                                backgroundColor: 'transparent',\n                            },\n                            '& td': {\n                                display: 'block',\n                                backgroundColor: 'transparent',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                    MUIDataTableBodyCell: {\n                        root: {\n                            backgroundColor: 'transparent',\n                            width: '100%',\n                        },\n                    },\n                },\n            };\n        }\n        const systemTheme = merge({}, DefaultConfigurations, Configurations, { custom: cloneDeep(theme.custom) });\n        const dataTableTheme = merge({}, muiTheme, systemTheme, themeAdditions);\n        return createMuiTheme(dataTableTheme);\n    };\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.setState({ loading: true });\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list, pagination } = body;\n                const { total } = pagination;\n                this.count = total;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.ApiTableView.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.ApiTableView.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const { query, selectedTag } = this.props;\n        const { page, rowsPerPage } = this;\n        const api = new API();\n        const searchParam = new URLSearchParams(query);\n        const searchQuery = searchParam.get('query');\n        if (query && searchQuery !== null) {\n            const composeQuery = queryString.parse(query);\n            composeQuery.limit = this.rowsPerPage;\n            composeQuery.offset = page * rowsPerPage;\n            return api.search(composeQuery);\n        }\n\n        if (selectedTag) {\n            return api.getAllAPIs({ query: 'tag:' + selectedTag, limit: this.rowsPerPage, offset: page * rowsPerPage });\n        } else {\n            return api.getAllAPIs({ limit: this.rowsPerPage, offset: page * rowsPerPage });\n        }\n    };\n\n    changePage = (page) => {\n        const { intl } = this.props;\n        this.page = page;\n        this.setState({ loading: true });\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({\n                    data: list,\n                });\n            })\n            .catch(() => {\n                Alert.error(intl.formatMessage({\n                    defaultMessage: 'Error While Loading APIs',\n                    id: 'Apis.Listing.ApiTableView.error.loading',\n                }));\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof ApiTableView\n     */\n    render() {\n        const { intl, gridView, theme } = this.props;\n        const { custom: { social: { showRating } } } = theme;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n                            const { classes } = this.props;\n\n                            if (artifact) {\n                                if (artifact.type === 'DOC') {\n                                    return (\n                                        <Link\n                                            to={'/apis/' + artifact.apiUUID + '/documents'}\n                                            className={classes.apiNameLink}\n                                        >\n                                            <Icon>library_books</Icon>\n\n                                            <span>\n                                                {' '}\n                                                <FormattedMessage\n                                                    id='Apis.Listing.TableView.TableView.doc.flag'\n                                                    defaultMessage='[Doc] '\n                                                />\n                                                {' '}\n                                                {apiName}\n                                            </span>\n                                        </Link>\n                                    );\n                                }\n                                const strokeColor = theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund);\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor={strokeColor} />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'version',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.version',\n                    defaultMessage: 'Version',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'context',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.context',\n                    defaultMessage: 'Context',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'provider',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.provider',\n                    defaultMessage: 'Provider/Business Owner',\n                }),\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            if (\n                                tableMeta.rowData[9] && tableMeta.rowData[9].businessOwner\n                            ) {\n                                return (\n                                    <>\n                                        <div>{tableMeta.rowData[9].businessOwner}</div>\n                                        <Typography variant='caption'>\n                                            <FormattedMessage\n                                                defaultMessage='(Business Owner)'\n                                                id='Apis.Listing.ApiTableView.business.owner.caption'\n                                            />\n                                        </Typography>\n                                    </>\n                                );\n                            } else {\n                                return (\n                                    <>\n                                        {value\n                                        && (\n                                            <>\n                                                <div>{value}</div>\n                                                <Typography variant='caption'>\n                                                    <FormattedMessage\n                                                        defaultMessage='(Provider)'\n                                                        id='Apis.Listing.ApiTableView.provider.caption'\n                                                    />\n                                                </Typography>\n                                            </>\n                                        )}\n                                    </>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                },\n            },\n            {\n                name: 'type',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.type',\n                    defaultMessage: 'Type',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.rating',\n                    defaultMessage: 'Rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                }\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    display: showRating ? 'true' : 'excluded',\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'businessInformation',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { page, count, rowsPerPage } = this;\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n            count,\n            page,\n            onTableChange: (action, tableState) => {\n                switch (action) {\n                    case 'changePage':\n                        this.changePage(tableState.page);\n                        break;\n                    default:\n                        break;\n                }\n            },\n            selectableRows: 'none',\n            rowsPerPage,\n            onChangeRowsPerPage: (numberOfRows) => {\n                const { page: pageInner, count: countInner } = this;\n                if (pageInner * numberOfRows > countInner) {\n                    this.page = 0;\n                }\n                this.rowsPerPage = numberOfRows;\n                localStorage.setItem('portal.numberOfRows', numberOfRows);\n                this.getData();\n            },\n            textLabels: {\n                pagination: {\n                    rowsPerPage: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.items.per.page',\n                        defaultMessage: 'Items per page',\n                    }),\n                },\n            },\n        };\n        if (gridView) {\n            options.customRowRender = (_data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    if (artifact.type === 'DOC') {\n                        return <tr key={rowIndex}><td><DocThumb doc={artifact} /></td></tr>;\n                    } else {\n                        return (\n                            <tr key={rowIndex}>\n                                <td>\n                                    <ApiThumb\n                                        api={artifact}\n                                        customHeight={theme.custom.thumbnail.height}\n                                        customWidth={theme.custom.thumbnail.width}\n                                    />\n                                </td>\n                            </tr>\n                        );\n                    }\n                }\n                return <span />;\n            };\n            options.title = false;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n        } else {\n            options.filter = false;\n        }\n        if (page === 0 && this.count <= rowsPerPage && rowsPerPage === 10) {\n            options.pagination = false;\n        } else {\n            options.pagination = true;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return <NoApi />;\n        }\n        return (\n            <MuiThemeProvider theme={this.getMuiTheme()}>\n                <MUIDataTable title='' data={data} columns={columns} options={options} />\n            </MuiThemeProvider>\n        );\n    }\n}\n\nApiTableView.contextType = ApiContext;\n\nexport default withSettings(injectIntl(withTheme(withStyles(styles)(ApiTableView))));\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = (theme) => ({\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    listItemText: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n});\n\n/**\n * Get APICategoryThumb\n * @param {JSON} props properties\n * @returns {JSX} category link\n */\nfunction APICategoryThumb(props) {\n    const {\n        category, path, classes,\n    } = props;\n    const categoryLink = path + ':' + category.name;\n    let categoryDesc = category.description;\n    if (categoryDesc.length > 50) {\n        categoryDesc = categoryDesc.substring(0, 50) + '...';\n    }\n    return (\n        <Link to={categoryLink} className={classes.textWrapper}>\n            <Tooltip placement='right' title={category.description.length <= 50 ? '' : category.description}>\n                <ListItem button alignItems='flex-start'>\n                    <ListItemIcon>\n                        <Icon>label</Icon>\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={category.name}\n                        secondary={categoryDesc}\n                        classes={{ primary: classes.listItemText }}\n                    />\n                </ListItem>\n            </Tooltip>\n        </Link>\n    );\n}\n\nAPICategoryThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    category: PropTypes.shape({}).isRequired,\n    path: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(APICategoryThumb);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport { FormattedMessage } from 'react-intl';\nimport APICategoryThumb from './APICategoryThumb';\n\nconst useStyles = makeStyles((theme) => ({\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    tagWiseThumbWrapper: {\n        display: 'flex',\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n}));\n\n/**\n * Shared listing page\n *\n * @class CategoryListingCategories\n * @extends {Component}\n */\nfunction CategoryListingCategories(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: {\n                style,\n            },\n        },\n    } = theme;\n\n\n    const tagWiseURL = '/apis?offset=0&query=api-category';\n    const { allCategories } = props;\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n\n    return allCategories && allCategories.length > 0 ? (\n        (\n            <>\n                <Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                    <FormattedMessage defaultMessage='API Categories' id='Apis.Listing.CategoryListingCategories.title' />\n                </Typography>\n                <List component='nav' aria-label='main mailbox folders'>\n                    {Object.keys(allCategories).map((key) => {\n                        return <APICategoryThumb key={key} category={allCategories[key]} path={tagWiseURL} style={style} />;\n                    })}\n                </List>\n            </>\n        )\n    ) : (\n        <div className={classes.mainTitle}>\n            <Typography variant='subtitle1' gutterBottom align='center'>\n                <FormattedMessage\n                    defaultMessage='Categories cannot be found'\n                    id='Apis.Listing.CategoryListingCategories.categoriesNotFound'\n                />\n            </Typography>\n        </div>\n    );\n}\n\nCategoryListingCategories.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n    allCategories: PropTypes.shape({}).isRequired,\n};\n\nexport default CategoryListingCategories;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { TagCloud } from 'react-tagcloud';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    clickablePointer: {\n        cursor: 'pointer',\n        padding: theme.spacing(1),\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n}));\n\n/**\n * Component used to handle API Tag Cloud\n * @class ApiTagCloud\n * @extends {React.Component}\n * @param {JSON} props @inheritDoc\n */\nfunction ApiTagCloud(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: { key, active },\n            tagCloud: { colorOptions },\n        },\n    } = theme;\n    const history = useHistory();\n\n    const { allTags } = props;\n    let apisTagWithoutGroups = null;\n    if (allTags.count !== 0) {\n        // Remove the tags with a sufix '-group' to ignore the\n        if (active) {\n            apisTagWithoutGroups = allTags.filter((item) => item.value.search(key) === -1);\n        } else {\n            apisTagWithoutGroups = allTags;\n        }\n    }\n\n    /**\n     *\n     * @param {String} tag selected tag\n     * @memberof ApiTagCloud\n     */\n    const handleOnClick = (tag) => {\n        const tagSearchURL = `/apis?offset=0&query=tag:${tag.value}`;\n        history.push(tagSearchURL);\n    };\n\n    return (\n        apisTagWithoutGroups && (\n            <>\n                <Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                    <FormattedMessage defaultMessage='Tags' id='Apis.Listing.ApiTagCloud.title' />\n                </Typography>\n                <TagCloud\n                    minSize={14}\n                    maxSize={25}\n                    colorOptions={colorOptions}\n                    tags={apisTagWithoutGroups}\n                    shuffle={false}\n                    className={classes.clickablePointer}\n                    onClick={(tag) => handleOnClick(tag)}\n                />\n            </>\n        )\n    );\n}\n\nApiTagCloud.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    tag: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default ApiTagCloud;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MaterialIcons from 'MaterialIcons';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport classNames from 'classnames';\nimport ImageGenerator from './APICards/ImageGenerator';\nimport Api from '../../../data/api';\nimport { ApiContext } from '../Details/ApiContext';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => ({\n    card: {\n        margin: theme.spacing.unit * (3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n    apiDetails: {\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        padding: theme.spacing(),\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        '& a': {\n            color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        },\n    },\n    suppressLinkStyles: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n    row: {\n        display: 'inline-block',\n    },\n    thumbBy: {\n        'padding-left': '5px',\n    },\n    media: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(2),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing.unit,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing.unit) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing.unit * 2,\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.custom.thumbnail.iconColor,\n        width: theme.custom.thumbnail.width,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n    },\n    chipWrapper: {\n        marginTop: '15px',\n    },\n    ratingWrapper: {\n        marginTop: '20px',\n    },\n});\n\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class RecommendedApiThumb\n * @extends {Component}\n */\nclass RecommendedApiThumb extends React.Component {\n    /**\n     *Creates an instance of RecommendedApiThumb.\n     * @param {*} props\n     * @memberof RecommendedApiThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n            isHover: false,\n        };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof RecommendedApiThumb\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    this.setState({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                        backgroundIndex: iconJson.backgroundIndex,\n                    });\n                } else if (response && response.data.size > 0) {\n                    const url = windowURL.createObjectURL(response.data);\n                    this.setState({ imageObj: url });\n                }\n            }\n        });\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     * Get Path Prefix depedning on the respective API Type being rendered\n     *\n     * @returns {String} path\n     * @memberof RecommendedApiThumb\n     */\n    getPathPrefix() {\n        const path = '/apis/';\n        return path;\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof RecommendedApiThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof RecommendedApiThumb\n     */\n    render() {\n        const {\n            imageObj, selectedIcon, color, backgroundIndex, category, isHover,\n        } = this.state;\n        const path = this.getPathPrefix();\n\n        // const detailsLink = path + this.props.api.id;\n        const detailsLink = path + this.props.api.id;\n        const {\n            api, classes, theme, customWidth, customHeight, showInfo,\n        } = this.props;\n        const { thumbnail } = theme.custom;\n        const { name } = api;\n\n        // if (\n        //     api.businessInformation &&\n        //     api.businessInformation.businessOwner &&\n        //     api.businessInformation.businessOwner.trim() !== ''\n        // ) {\n        //     provider = api.businessInformation.businessOwner;\n        // }\n        // if (!api.lifeCycleStatus) {\n        //     api.lifeCycleStatus = api.status;\n        // }\n        const imageWidth = customWidth || thumbnail.width;\n        const imageHeight = customHeight || 140;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        let ImageView;\n        if (imageObj) {\n            ImageView = (\n                <img\n                    height={imageHeight}\n                    width={imageWidth}\n                    src={imageObj}\n                    alt='API Thumbnail'\n                    className={classes.media}\n                />\n            );\n        } else {\n            ImageView = (\n                <ImageGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    api={api}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color,\n                        backgroundIndex,\n                        category,\n                        api,\n                    }}\n                />\n            );\n        }\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classNames('image-thumbnail', classes.card)}\n            >\n                <CardMedia>\n                    <Link to={detailsLink} className={classes.suppressLinkStyles}>\n                        {!defaultImage && ImageView}\n                        {defaultImage && <img src={defaultImage} alt='img' />}\n                    </Link>\n                </CardMedia>\n                {showInfo && (\n                    <CardContent classes={{ root: classes.apiDetails }}>\n                        <Link to={detailsLink} className={classes.textWrapper}>\n                            <Typography\n                                className={classes.thumbHeader}\n                                variant='h5'\n                                gutterBottom\n                                onClick={this.handleRedirectToAPIOverview}\n                                title={name}\n                            >\n                                {name}\n                            </Typography>\n                        </Link>\n                        <div className={classes.thumbInfo}>\n                            <div className={classes.thumbLeft}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='left'\n                                    className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                                >\n                                    <StarRatingBar\n                                        apiRating={api.avgRating}\n                                        apiId={api.id}\n                                        isEditable={false}\n                                        showSummary={false}\n                                    />\n                                </Typography>\n                            </div>\n                            <div className={classes.thumbRight}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='right'\n                                    className={classes.chipWrapper}\n                                >\n                                    {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                                        <Chip\n                                            label={api.transportType === undefined ? api.type : api.transportType}\n                                            color='primary'\n                                        />\n                                    )}\n                                </Typography>\n                            </div>\n                        </div>\n                    </CardContent>\n                )}\n            </Card>\n        );\n    }\n}\nRecommendedApiThumb.defaultProps = {\n    customWidth: null,\n    customHeight: null,\n    showInfo: true,\n};\nRecommendedApiThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    customWidth: PropTypes.number,\n    customHeight: PropTypes.number,\n    showInfo: PropTypes.bool,\n};\n\nRecommendedApiThumb.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(RecommendedApiThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport { withTheme } from '@material-ui/styles';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport ImageGenerator from './APICards/ImageGenerator';\nimport RecommendedApiThumb from './RecommendedApiThumb';\nimport { ApiContext } from '../Details/ApiContext';\n\nconst styles = (theme) => ({\n    rowImageOverride: {\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n    apiNameLink: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n    },\n});\n/**\n * Table view for api listing\n *\n * @class Recommendations\n * @extends {React.Component}\n */\nclass Recommendations extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof Recommendations\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n    }\n\n    /**\n     * @memberof Recommendations\n    */\n    componentDidMount() {\n        this.getData();\n    }\n\n    /**\n     * @memberof Recommendations\n     * @param {JSON} prevProps previous props\n    */\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            query !== prevProps.query\n            || prevProps.selectedTag !== selectedTag\n        ) {\n            this.getData();\n        }\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& a > div': {\n                            paddingRight: 10,\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTableBodyCell: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                },\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                },\n            };\n        }\n        muiTheme = Object.assign(muiTheme, themeAdditions, Configurations);\n        return createMuiTheme(muiTheme);\n    };\n\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.Recommendations.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.Recommendations.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const api = new API();\n        return api.getApiRecommendations();\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof Recommendations\n     */\n    render() {\n        const { intl, gridView } = this.props;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.Recommendations.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (tableMeta, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n                            const { classes } = this.props;\n\n                            if (artifact) {\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor='#444444' />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    defaultMessage: 'Rating',\n                    id: 'Apis.Listing.Recommendations.rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                } else {\n                                    return (<span />);\n                                }\n                            } else {\n                                return (<span />);\n                            }\n                        } else {\n                            return (<span />);\n                        }\n                    },\n                    sort: false,\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n        };\n        if (gridView) {\n            // eslint-disable-next-line no-shadow\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    return <tr key={rowIndex}><td><RecommendedApiThumb api={artifact} /></td></tr>;\n                }\n                return <span />;\n            };\n            options.title = true;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n            options.rowsPerPageOptions = false;\n            options.pagination = false;\n        } else {\n            options.filter = false;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return null;\n        }\n        return (\n            <MuiThemeProvider theme={this.getMuiTheme()}>\n                <MUIDataTable title='Recommended APIs for you' data={data} columns={columns} options={options} />\n            </MuiThemeProvider>\n        );\n    }\n}\n\nRecommendations.contextType = ApiContext;\n\nexport default withSettings(injectIntl(withTheme(withStyles(styles)(Recommendations))));\n","/* eslint-disable prefer-destructuring */\n/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Settings from 'AppComponents/Shared/SettingsContext';\nimport API from 'AppData/api';\nimport ApiBreadcrumbs from './ApiBreadcrumbs';\nimport ApiTableView from './ApiTableView';\nimport { ApiContext } from '../Details/ApiContext';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CategoryListingCategories from './CategoryListingCategories';\nimport ApiTagCloud from './ApiTagCloud';\nimport Recommendations from './Recommendations';\nimport AuthManager from '../../../data/AuthManager';\n\nconst styles = (theme) => ({\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n    buttonRight: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n    },\n    ListingWrapper: {\n        paddingTop: 10,\n        paddingLeft: 35,\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    appBar: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    mainIconWrapper: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n        display: 'flex',\n    },\n    iconDefault: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n    iconSelected: {\n        color: theme.custom.infoBar.listGridSelectedColor,\n    },\n    content: {\n        flexGrow: 1,\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        paddingBottom: theme.spacing(3),\n    },\n    contentWithTags: {\n        marginLeft: theme.custom.tagCloud.leftMenu.width,\n    },\n    contentWithoutTags: {\n        marginLeft: -4,\n    },\n    contentWithTagsHidden: {\n        marginLeft: theme.custom.tagCloud.leftMenu.sliderWidth,\n    },\n    LeftMenu: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.width,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n    },\n    LeftMenuForSlider: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.sliderWidth,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n        display: 'flex',\n    },\n    sliderButton: {\n        fontWeight: 200,\n        background: theme.custom.tagCloud.leftMenu.sliderBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.sliderBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n        position: 'absolute',\n        right: 0,\n        cursor: 'pointer',\n    },\n    rotatedText: {\n        transform: 'rotate(270deg)',\n        transformOrigin: 'left bottom 0',\n        position: 'absolute',\n        whiteSpace: 'nowrap',\n        top: theme.custom.infoBar.height * 4,\n        marginLeft: 23,\n        cursor: 'pointer',\n    },\n    recommendationsBar: {\n        height: 60,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n\n/**\n * Shared listing page\n *\n * @class CommonListing\n * @extends {Component}\n */\nclass CommonListing extends React.Component {\n    /**\n     * Constructor\n     *\n     * @param {*} props Properties\n     */\n    constructor(props) {\n        super(props);\n        let { defaultApiView } = props.theme.custom;\n        this.showToggle = true;\n        if (typeof defaultApiView === 'object' && defaultApiView.length > 0) {\n            if (defaultApiView.length === 1) { // We will disable the other\n                this.showToggle = false;\n            }\n            defaultApiView = defaultApiView[0];\n        } else {\n            defaultApiView = localStorage.getItem('portal.listType') || defaultApiView;\n        }\n        this.state = {\n            listType: defaultApiView,\n            allTags: null,\n            showLeftMenu: false,\n            isMonetizationEnabled: false,\n            isRecommendationEnabled: false,\n        };\n    }\n\n    /**\n     *\n     * Get all tags\n     * @memberof CommonListing\n     */\n    componentDidMount() {\n        const restApiClient = new API();\n        const promisedTags = restApiClient.getAllTags();\n        promisedTags\n            .then((response) => {\n                this.setState({ allTags: response.body.list });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        const promisedCategories = restApiClient.apiCategories();\n        promisedCategories\n            .then((response) => {\n                this.setState({ allCategories: response.body.list });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        this.isMonetizationEnabled();\n        this.isRecommendationEnabled();\n    }\n\n    /**\n     *\n     * Switch the view between grid and list view\n     * @param {String} value view type\n     * @memberof CommonListing\n     */\n     setListType = (value) => {\n         localStorage.setItem('portal.listType', value);\n         this.setState({ listType: value });\n     };\n\n    toggleLeftMenu = () => {\n        this.setState((prevState) => ({ showLeftMenu: !prevState.showLeftMenu }));\n    };\n\n    /**\n     * retrieve Settings from the context and check the monetization enabled\n     */\n    isMonetizationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.monetizationEnabled;\n        this.setState({ isMonetizationEnabled: enabled });\n    }\n\n    /**\n     * retrieve Settings from the context and check whether recommendation is enabled\n     */\n    isRecommendationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.recommendationEnabled;\n        this.setState({ isRecommendationEnabled: enabled });\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof CommonListing\n     */\n    render() {\n        const {\n            theme,\n            classes,\n            location: { search },\n        } = this.props;\n        const user = AuthManager.getUser();\n        const {\n            custom: {\n                tagWise: { key, active },\n                tagCloud: { active: tagCloudActive },\n            },\n        } = theme;\n        const {\n            listType, allTags, showLeftMenu, isMonetizationEnabled, allCategories, isRecommendationEnabled,\n        } = this.state;\n        const strokeColorMain = theme.palette.getContrastText(theme.custom.infoBar.background);\n        const searchParam = new URLSearchParams(search);\n        const searchQuery = searchParam.get('query');\n        let selectedTag = null;\n        if (search && searchQuery !== null) {\n            // For the tagWise search\n            if (active && key) {\n                const splits = searchQuery.split(':');\n                if (splits.length > 1 && splits[1].search(key) !== -1) {\n                    const splitTagArray = splits[1].split(key);\n                    if (splitTagArray.length > 0) {\n                        selectedTag = splitTagArray[0];\n                    }\n                } else if (splits.length > 1 && splits[0] === 'tag') {\n                    selectedTag = splits[1];\n                }\n            }\n        }\n        const tagPaneVisible = allTags && allTags.length > 0 && (tagCloudActive || active);\n        const categoryPaneVisible = allCategories && allCategories.length > 0;\n        return (\n            <>\n                {(categoryPaneVisible || tagPaneVisible) && showLeftMenu && (\n                    <div className={classes.LeftMenu}>\n                        <div\n                            className={classes.sliderButton}\n                            onClick={this.toggleLeftMenu}\n                            onKeyDown={this.toggleLeftMenu}\n                        >\n                            <Icon>keyboard_arrow_left</Icon>\n                        </div>\n                        {categoryPaneVisible && <CategoryListingCategories allCategories={allCategories} />}\n                        {tagPaneVisible && active && <TagCloudListingTags allTags={allTags} />}\n                        {tagPaneVisible && tagCloudActive && <ApiTagCloud allTags={allTags} />}\n                    </div>\n                )}\n                {(categoryPaneVisible || tagPaneVisible) && !showLeftMenu && (\n                    <div className={classes.LeftMenuForSlider}>\n                        <div\n                            className={classes.sliderButton}\n                            onClick={this.toggleLeftMenu}\n                            onKeyDown={this.toggleLeftMenu}\n                        >\n                            <Icon>keyboard_arrow_right</Icon>\n                        </div>\n                        <div\n                            className={classes.rotatedText}\n                            onClick={this.toggleLeftMenu}\n                            onKeyDown={this.toggleLeftMenu}\n                        >\n                            <FormattedMessage\n                                defaultMessage='Tags / API Categories'\n                                id='Apis.Listing.Listing.ApiTagCloud.title'\n                            />\n                        </div>\n                    </div>\n                )}\n\n                <div\n                    className={classNames(\n                        classes.content,\n                        { [classes.contentWithoutTags]: !(tagPaneVisible || categoryPaneVisible) || !showLeftMenu },\n                        { [classes.contentWithTagsHidden]: (tagPaneVisible || categoryPaneVisible) && !showLeftMenu },\n                        { [classes.contentWithTags]: (tagPaneVisible || categoryPaneVisible) && showLeftMenu },\n                    )}\n                    id='commonListing'\n                >\n                    <div className={classes.appBar} id='commonListingAppBar'>\n                        <div className={classes.mainIconWrapper}>\n                            <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                        </div>\n                        <div className={classes.mainTitleWrapper} id='mainTitleWrapper'>\n                            <Typography variant='h4' component='h1' className={classes.mainTitle}>\n                                <FormattedMessage defaultMessage='APIs' id='Apis.Listing.Listing.apis.main' />\n                            </Typography>\n                        </div>\n                        {this.showToggle && (\n                            <div className={classes.buttonRight} id='listGridWrapper'>\n                                <IconButton\n                                    aria-label='Change to list view'\n                                    className={classes.button}\n                                    onClick={() => this.setListType('list')}\n                                    disabled={listType === 'list'}\n                                >\n                                    <Icon\n                                        className={classNames(\n                                            { [classes.iconSelected]: listType === 'list' },\n                                            { [classes.iconDefault]: listType === 'grid' },\n                                        )}\n                                    >\n                                        list\n                                    </Icon>\n                                </IconButton>\n                                <IconButton\n                                    aria-label='Change to grid view'\n                                    className={classes.button}\n                                    onClick={() => this.setListType('grid')}\n                                    disabled={listType === 'grid'}\n                                >\n                                    <Icon\n                                        className={classNames(\n                                            { [classes.iconSelected]: listType === 'grid' },\n                                            { [classes.iconDefault]: listType === 'list' },\n                                        )}\n                                    >\n                                        grid_on\n                                    </Icon>\n                                </IconButton>\n                            </div>\n                        )}\n                    </div>\n                    {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                    <div className={classes.listContentWrapper}>\n                        {listType === 'grid' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView query={search} />\n                            </ApiContext.Provider>\n                        )}\n                        {listType === 'list' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView={false} query={search} />\n                            </ApiContext.Provider>\n                        )}\n                    </div>\n                    {isRecommendationEnabled && user\n                        && (\n                            <div>\n                                {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                                <div className={classes.listContentWrapper}>\n                                    {listType === 'grid' && (\n                                        <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                            <Recommendations gridView query={search} />\n                                        </ApiContext.Provider>\n                                    )}\n                                    {listType === 'list' && (\n                                        <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                            <Recommendations gridView query={search} />\n                                        </ApiContext.Provider>\n                                    )}\n                                </div>\n                            </div>\n                        )}\n                </div>\n            </>\n        );\n    }\n}\nCommonListing.contextType = Settings;\n\nCommonListing.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    location: PropTypes.shape({\n        search: PropTypes.string,\n    }),\n};\n\nCommonListing.defaultProps = {\n    location: PropTypes.shape({\n        search: '',\n    }),\n};\n\nexport default withStyles(styles, { withTheme: true })(CommonListing);\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Typography from '@material-ui/core/Typography';\nimport { Link as MUILink } from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Box from '@material-ui/core/Box';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\n\nconst useStyles = makeStyles((theme) => {\n    const mainBack = theme.custom.infoBar.background || '#ffffff';\n    return {\n        root: {\n            paddingTop: theme.spacing(),\n            paddingBottom: theme.spacing(),\n            paddingLeft: theme.spacing(3),\n            background: mainBack,\n            color: theme.palette.getContrastText(mainBack),\n            borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n            '& > * + *': {\n                marginTop: theme.spacing(2),\n            },\n        },\n    };\n});\n\n/**\n * @returns {JSX} breadcrumb\n */\nexport default function Breadcrumb() {\n    const { api } = useContext(ApiContext);\n    const classes = useStyles();\n    const history = useHistory();\n    const pages = [\n        {\n            route: 'overview',\n            text: 'Overview',\n        },\n        {\n            route: 'credentials',\n            text: 'Subscriptions',\n        },\n        {\n            route: 'test',\n            text: 'Try Out',\n        },\n        {\n            route: 'comments',\n            text: 'Comments',\n        },\n        {\n            route: 'documents',\n            text: 'Documents',\n        },\n        {\n            route: 'sdk',\n            text: 'SDKs',\n        },\n    ];\n\n    const [selected, setSelected] = useState(pages[0]);\n\n    const detectCurrentMenu = (location = null) => {\n        let locationLocal = location;\n        if (!locationLocal) {\n            locationLocal = window.location;\n        }\n        const { pathname } = locationLocal;\n        for (let i = 0; i < pages.length; i++) {\n            const test1 = new RegExp('/' + pages[i].route + '$', 'g');\n            const test2 = new RegExp('/' + pages[i].route + '/', 'g');\n            if (pathname.match(test1) || pathname.match(test2)) {\n                setSelected(pages[i]);\n            }\n        }\n    };\n    useEffect(() => {\n        detectCurrentMenu();\n    }, []);\n    history.listen((location) => {\n        detectCurrentMenu(location);\n    });\n    return (\n        <div className={classes.root}>\n            <Box display='flex' flexDirection='row' alignItems='center'>\n                <Typography color='textPrimary' component='h1' variant='h6'>{selected.text}</Typography>\n                <VerticalDivider height={15} />\n                <Breadcrumbs separator={<NavigateNextIcon fontSize='small' />} aria-label='breadcrumb'>\n                    <MUILink color='inherit' to={'/apis/' + api.id + '/overview'} component={Link}>\n                        {api.name}\n                    </MUILink>\n                    <Typography color='textPrimary'>{selected.text}</Typography>\n                </Breadcrumbs>\n            </Box>\n\n        </div>\n    );\n}\n","import React, { useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n    button: {\n        mt: 2,\n        mr: 1,\n    },\n    wizardButtons: {\n        pl: 2,\n    },\n};\n\nconst ButtonPanel = (props) => {\n    const {\n        currentStep, handleCurrentStep, handleReset, nextActive,\n    } = props;\n    const stepsLength = 5;\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const history = useHistory();\n\n    /**\n     * Redirect  to the API console page\n     */\n    const handleTest = () => {\n        history.push(`/apis/${api.id}/test`);\n    };\n\n    /**\n     * Redirect back to credentials page\n     */\n    const handleCancel = () => {\n        updateSubscriptionData(history.push('credentials'));\n    };\n\n    return (\n        <Box display='flex' {...styles.wizardButtons}>\n            {currentStep < stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleCancel}\n                        variant='text'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.Cancel'\n                            defaultMessage='CANCEL'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleTest}\n                        {...styles.button}\n                        variant='outlined'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.test'\n                            defaultMessage='Test'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        variant='outlined'\n                        onClick={handleReset}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.rest'\n                            defaultMessage='Reset'\n                        />\n                    </Button>\n                </Box>\n            )}\n            <Box {...styles.button}>\n                <Button\n                    variant='contained'\n                    color='primary'\n                    onClick={handleCurrentStep}\n                    disabled={!nextActive}\n                >\n                    {currentStep === stepsLength - 1\n                        ? (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.finish'\n                                defaultMessage='Finish'\n                            />\n                        )\n                        : (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.next'\n                                defaultMessage='Next'\n                            />\n                        )}\n                </Button>\n            </Box>\n        </Box>\n    );\n};\n\nButtonPanel.defaultProps = {\n    nextActive: true,\n};\n\nButtonPanel.propTypes = {\n    currentStep: PropTypes.func.isRequired,\n    handleCurrentStep: PropTypes.func.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    nextActive: PropTypes.bool,\n};\n\nexport default ButtonPanel;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport ApplicationCreateForm from 'AppComponents/Shared/AppsAndKeys/ApplicationCreateForm';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport cloneDeep from 'lodash.clonedeep';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    appCreateFormWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n    warningIcon: {\n        color: '#ff9a00',\n        fontSize: 43,\n        marginRight: 10,\n    },\n}));\n\nconst createAppStep = (props) => {\n    const APPLICATION_STATES = {\n        CREATED: 'CREATED',\n        APPROVED: 'APPROVED',\n        REJECTED: 'REJECTED',\n    };\n    const [throttlingPolicyList, setThrottlingPolicyList] = useState([]);\n    const [applicationRequest, setApplicationRequest] = useState({\n        name: '',\n        throttlingPolicy: '',\n        description: '',\n        tokenType: 'JWT',\n        groups: null,\n        attributes: {},\n    });\n    const [isNameValid, setIsNameValid] = useState(true);\n    const [allAppAttributes, setAllAppAttributes] = useState(null);\n    const [hasValidKM, setHasValidKM] = useState(null);\n    const {\n        currentStep, setCreatedApp, incrementStep, intl, setStepStatus, stepStatuses,\n    } = props;\n    const { api: apiObject } = useContext(ApiContext);\n\n    const validateName = (value) => {\n        if (!value || value.trim() === '') {\n            setIsNameValid({ isNameValid: false });\n            return Promise.reject(new Error(intl.formatMessage({\n                defaultMessage: 'Application name is required',\n                id: 'Apis.Details.Credentials.Wizard.CreateAppStep.application.name.is.required',\n            })));\n        }\n        setIsNameValid({ isNameValid: true });\n        return Promise.resolve(true);\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const isRequiredAttribute = (name) => {\n        if (allAppAttributes) {\n            for (let i = 0; i < allAppAttributes.length; i++) {\n                if (allAppAttributes[i].attribute === name) {\n                    return allAppAttributes[i].required === 'true';\n                }\n            }\n        }\n        return false;\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {Object} attribute value\n     * @memberof ApplicationFormHandler\n     */\n    const getAttributeValue = (name) => {\n        return applicationRequest.attributes[name];\n    };\n\n    const createApplication = () => {\n        const api = new API();\n        if (!applicationRequest.name || applicationRequest.name.trim() === '') {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'Application name is required',\n                id: 'Apis.Details.Credentials.Wizard.CreateAppStep.application.name.is.required',\n            }));\n            return;\n        }\n        api.createApplication(applicationRequest)\n            .then((response) => {\n                const data = response.body;\n                if (data.status === APPLICATION_STATES.APPROVED) {\n                    const appCreated = { value: data.applicationId, label: data.name };\n                    console.log('Application created successfully.');\n                    setCreatedApp(appCreated);\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                const { response } = error;\n                if (response && response.body) {\n                    const message = response.body.description || intl.formatMessage({\n                        defaultMessage: 'Error while creating the application',\n                        id: 'Apis.Details.Credentials.Wizard.CreateAppStep.error.while.creating.the.application',\n                    });\n                    Alert.error(message);\n                } else {\n                    Alert.error(error.message);\n                }\n                console.error('Error while creating the application');\n            });\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const handleAttributesChange = (name) => (event) => {\n        const newApplicationRequest = cloneDeep(applicationRequest);\n        newApplicationRequest.attributes[name] = event.target.value;\n        setApplicationRequest(newApplicationRequest);\n    };\n\n    /**\n     * add a new group function\n     * @param {*} chip newly added group\n     * @param {*} appGroups already existing groups\n     */\n    const handleAddChip = (chip, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.slice();\n        values.push(chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    /**\n     * remove a group from already existing groups function\n     * @param {*} chip selected group to be removed\n     * @param {*} index selected group index to be removed\n     * @param {*} appGroups already existing groups\n     */\n    const handleDeleteChip = (chip, index, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.filter((v) => v !== chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    useEffect(() => {\n        // Get all the tiers to populate the drop down.\n        const api = new API();\n        const promiseTiers = api.getAllTiers('application');\n        const promisedAttributes = api.getAllApplicationAttributes();\n        const promisedKeyManagers = api.getKeyManagers();\n\n        Promise.all([promiseTiers, promisedAttributes, promisedKeyManagers])\n            .then((response) => {\n                const [tierResponse, allAttributes, keyManagers] = response;\n                const throttlingPolicyListLocal = tierResponse.body.list.map((item) => item.name);\n                const newRequest = { ...applicationRequest };\n                if (throttlingPolicyListLocal.length > 0) {\n                    [newRequest.throttlingPolicy] = throttlingPolicyListLocal;\n                }\n                const allAppAttr = [];\n                allAttributes.body.list.map((item) => allAppAttr.push(item));\n                if (allAttributes.length > 0) {\n                    newRequest.attributes = allAppAttr.filter((item) => !item.hidden);\n                }\n                // Selecting the resident key manager\n                const responseKeyManagerList = [];\n                keyManagers.body.list.map((item) => responseKeyManagerList.push(item));\n\n                let hasValidKMInner;\n                if (responseKeyManagerList.length > 0) {\n                    const responseKeyManagerListDefault = responseKeyManagerList.filter(\n                        (x) => x.name === 'Resident Key Manager' && x.enabled,\n                    );\n                    hasValidKMInner = responseKeyManagerListDefault.length !== 0;\n                }\n                setHasValidKM(hasValidKMInner);\n                setApplicationRequest(newRequest);\n                setThrottlingPolicyList(throttlingPolicyListLocal);\n                setAllAppAttributes(allAppAttr);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.CreateAppStep.error.404',\n                        defaultMessage: 'Resource not found',\n                    }));\n                }\n            });\n    }, []);\n\n    const classes = useStyles();\n    if (!hasValidKM) {\n        return (\n            <Box mb={1} ml={4}>\n                <InlineMessage type='warn'>\n                    <FormattedMessage\n                        id='Apis.Details.Credentials.Wizard.CreateAppStep.default.km.msg'\n                        defaultMessage={'Wizard is only accessible via the Resident Key Manager.'\n                                + 'But the Resident Key Manager is disabled at the moment.'}\n                    />\n                </InlineMessage>\n                <Box mt={2}>\n                    <Link to={`/apis/${apiObject.id}/credentials`}>\n                        <Button variant='contained'>\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.CreateAppStep.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </Link>\n                </Box>\n            </Box>\n        );\n    }\n\n    return (\n        <div className={classes.appCreateFormWrapper}>\n            <Box px={2} display='flex' justifyContent='flex-start'>\n                <Grid item xs={10} md={6}>\n                    <ApplicationCreateForm\n                        throttlingPolicyList={throttlingPolicyList}\n                        applicationRequest={applicationRequest}\n                        updateApplicationRequest={setApplicationRequest}\n                        validateName={validateName}\n                        isNameValid={isNameValid}\n                        allAppAttributes={allAppAttributes}\n                        handleAttributesChange={handleAttributesChange}\n                        isRequiredAttribute={isRequiredAttribute}\n                        getAttributeValue={getAttributeValue}\n                        handleDeleteChip={handleDeleteChip}\n                        handleAddChip={handleAddChip}\n                    />\n                </Grid>\n            </Box>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={createApplication}\n            />\n        </div>\n    );\n};\n\nexport default injectIntl(createAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport SubscribeToApi from 'AppComponents/Shared/AppsAndKeys/SubscribeToApi';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { injectIntl } from 'react-intl';\nimport ButtonPanel from './ButtonPanel';\n\nconst subscribeToAppStep = (props) => {\n    const SUBSCRIPTION_STATES = {\n        ON_HOLD: 'ON_HOLD',\n        UNBLOCKED: 'UNBLOCKED',\n        REJECTED: 'REJECTED',\n    };\n    const [subscriptionRequest, setApplicationRequest] = useState({\n        applicationId: '',\n        apiId: '',\n        throttlingPolicy: '',\n    });\n    const { api: apiObject } = useContext(ApiContext);\n    const [newApp, setNewApp] = useState(null);\n    const [throttlingPolicyList] = useState(apiObject.tiers);\n    const {\n        currentStep, createdApp, incrementStep, intl, setStepStatus,\n        stepStatuses, classes,\n    } = props;\n    const subscribeToApplication = () => {\n        const api = new API();\n        api.subscribe(\n            subscriptionRequest.apiId, subscriptionRequest.applicationId,\n            subscriptionRequest.throttlingPolicy,\n        )\n            .then((response) => {\n                if (response.body.status === SUBSCRIPTION_STATES.UNBLOCKED) {\n                    console.log('Subscription created successfully with ID : ' + response.body.subscriptionId);\n                    Alert.info(intl.formatMessage({\n                        defaultMessage: 'Subscribed successfully',\n                        id: 'Apis.Details.Credentials.Wizard.SubscribeToAppStep.subscribed.successfully',\n                    }));\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                console.log('Error while creating the subscription.');\n                console.error(error);\n            });\n    };\n\n    useEffect(() => {\n        const newSubscriptionRequest = { ...subscriptionRequest, apiId: apiObject.id };\n        if (throttlingPolicyList) {\n            const [tierData] = throttlingPolicyList;\n            newSubscriptionRequest.throttlingPolicy = tierData.tierName;\n        }\n        if (createdApp) {\n            newSubscriptionRequest.applicationId = createdApp.value;\n        }\n        setApplicationRequest(newSubscriptionRequest);\n        setNewApp(createdApp);\n    }, [createdApp]);\n\n    return (\n        <>\n            <SubscribeToApi\n                throttlingPolicyList={throttlingPolicyList}\n                applicationsAvailable={[newApp]}\n                subscriptionRequest={subscriptionRequest}\n                updateSubscriptionRequest={setApplicationRequest}\n            />\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={subscribeToApplication}\n            />\n        </>\n    );\n};\n\nexport default injectIntl(subscribeToAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Application from 'AppData/Application';\nimport API from 'AppData/api';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Settings from 'Settings';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    keyConfigWrapper: {\n        paddingLeft: theme.spacing(4),\n        flexDirection: 'column',\n    },\n    radioWrapper: {\n        flexDirection: 'row',\n    },\n    paper: {\n        background: 'none',\n        marginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n    subTitle: {\n        fontWeight: 400,\n    },\n    tabPanel: {\n        '& .MuiBox-root': {\n            padding: 0,\n        },\n    },\n    hr: {\n        border: 'solid 1px #efefef',\n    },\n    muiFormGroupRoot: {\n        flexDirection: 'row',\n    },\n    table: {\n        minWidth: '100%',\n        '& td, & th': {\n            padding: theme.spacing(),\n        },\n    },\n    leftCol: {\n        width: 200,\n    },\n    iconAligner: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n}));\n\nfunction TabPanel(props) {\n    const {\n        children, value, index, ...other\n    } = props;\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`nav-tabpanel-${index}`}\n            aria-labelledby={`nav-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <>{children}</>\n            )}\n        </div>\n    );\n}\nTabPanel.defaultProps = {\n    children: <div />,\n};\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\nconst generateKeysStep = (props) => {\n    const intl = useIntl();\n\n    const keyStates = {\n        COMPLETED: 'COMPLETED',\n        APPROVED: 'APPROVED',\n        CREATED: 'CREATED',\n        REJECTED: 'REJECTED',\n    };\n    const [nextActive, setNextActive] = useState(true);\n    const [keyManager, setKeyManager] = useState(null);\n    const selectedTab = 'Resident Key Manager';\n\n    const [keyRequest, setKeyRequest] = useState({\n        keyType: 'SANDBOX',\n        supportedGrantTypes: [],\n        callbackUrl: '',\n        additionalProperties: {},\n        keyManager: '',\n    });\n\n    const {\n        currentStep, createdApp, incrementStep, setCreatedKeyType,\n        setStepStatus, stepStatuses, setCreatedSelectedTab,\n    } = props;\n\n    useEffect(() => {\n        const api = new API();\n        const promisedKeyManagers = api.getKeyManagers();\n        promisedKeyManagers\n            .then((response) => {\n                const responseKeyManagerList = [];\n                response.body.list.map((item) => responseKeyManagerList.push(item));\n\n                // Selecting a key manager from the list of key managers.\n                let selectedKeyManager;\n                if (responseKeyManagerList.length > 0) {\n                    const responseKeyManagerListDefault = responseKeyManagerList.filter((x) => x.name === 'Resident Key Manager');\n                    selectedKeyManager = responseKeyManagerListDefault.length > 0 ? responseKeyManagerListDefault[0]\n                        : responseKeyManagerList[0];\n                }\n                setKeyManager(selectedKeyManager);\n\n                // Setting key request\n                try {\n                    const newKeyRequest = { ...keyRequest };\n                    newKeyRequest.keyManager = selectedKeyManager.id;\n                    newKeyRequest.supportedGrantTypes = selectedKeyManager.availableGrantTypes;\n                    if (selectedKeyManager.availableGrantTypes.includes('implicit')\n                        || selectedKeyManager.availableGrantTypes.includes('authorization_code')) {\n                        newKeyRequest.callbackUrl = 'http://localhost';\n                    }\n                    if (!selectedKeyManager.availableGrantTypes.includes('client_credentials')) {\n                        setNextActive(false);\n                    }\n                    setKeyRequest(newKeyRequest);\n                } catch (e) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.error.keymanager',\n                        defaultMessage: 'Error while selecting the key manager',\n                    }));\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }, []);\n\n    const generateKeys = () => {\n        Application.get(createdApp.value).then((application) => {\n            return application.generateKeys(\n                keyRequest.keyType, keyRequest.supportedGrantTypes,\n                keyRequest.callbackUrl,\n                keyRequest.additionalProperties, keyRequest.keyManager,\n            );\n        }).then((response) => {\n            if (response.keyState === keyStates.CREATED || response.keyState === keyStates.REJECTED) {\n                setStepStatus(stepStatuses.BLOCKED);\n            } else {\n                incrementStep();\n                setCreatedKeyType(keyRequest.keyType);\n                setCreatedSelectedTab(selectedTab);\n                setStepStatus(stepStatuses.PROCEED);\n                console.log('Keys generated successfully with ID : ' + response);\n            }\n        }).catch((error) => {\n            if (process.env.NODE_ENV !== 'production') {\n                console.log(error);\n            }\n            const { status } = error;\n            if (status === 404) {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.error.404',\n                    defaultMessage: 'Resource not found.',\n                }));\n            }\n        });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Box component='div' marginLeft={4}>\n                <Grid container spacing={2}>\n                    {keyManager && (\n                        <>\n                            <Grid item xs={12} md={12} lg={3}>\n                                <Typography color='inherit' variant='subtitle2' component='div'>\n                                    <FormattedMessage\n                                        defaultMessage='Key Configuration'\n                                        id='Apis.Details.Credentials.Wizard.GenerateKeysStep.key.configuration'\n                                    />\n                                </Typography>\n                                <Typography color='inherit' variant='caption' component='p'>\n                                    <FormHelperText>\n                                        <FormattedMessage\n                                            defaultMessage={'These configurations are set for the purpose of the wizard.'\n                                        + 'You have more control over them when you go to the application view. '}\n                                            id='Apis.Details.Credentials.Wizard.GenerateKeysStep.key.configuration.help'\n                                        />\n                                    </FormHelperText>\n\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={12} lg={9}>\n                                <Table className={classes.table}>\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.config.km.name'\n                                                    defaultMessage='Key Manager'\n                                                />\n                                            </TableCell>\n                                            <TableCell>\n                                                <div>{keyManager.displayName || keyManager.name}</div>\n                                                <Typography variant='caption' component='div'>{keyManager.description}</Typography>\n                                            </TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.environment'\n                                                    defaultMessage='Environment'\n                                                />\n                                            </TableCell>\n                                            <TableCell>Sandbox</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.tokenEndpoint'\n                                                    defaultMessage='Token Endpoint'\n                                                />\n                                            </TableCell>\n                                            <TableCell>{keyManager.tokenEndpoint}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.revokeEndpoint'\n                                                    defaultMessage='Revoke Endpoint'\n                                                />\n                                            </TableCell>\n                                            <TableCell>{keyManager.revokeEndpoint}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.userInfoEndpoint'\n                                                    defaultMessage='User Info Endpoint'\n                                                />\n                                            </TableCell>\n                                            <TableCell>{keyManager.userInfoEndpoint}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.grantTypes'\n                                                    defaultMessage='Grant Types'\n                                                />\n                                            </TableCell>\n                                            <TableCell>\n                                                {keyManager.availableGrantTypes.map((gt) => (\n                                                    <span>\n                                                        {Settings.grantTypes[gt] || gt}\n                                                        ,\n                                                        {' '}\n                                                    </span>\n                                                ))}\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                            </Grid>\n                        </>\n                    )}\n                </Grid>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Box component='span' m={1}>\n                            <ButtonPanel\n                                classes={classes}\n                                currentStep={currentStep}\n                                handleCurrentStep={generateKeys}\n                                nextActive={nextActive}\n                            />\n                        </Box>\n\n                    </Grid>\n                </Grid>\n            </Box>\n        </>\n    );\n};\n\nexport default generateKeysStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport Tokens from 'AppComponents/Shared/AppsAndKeys/Tokens';\nimport Application from 'AppData/Application';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { defineMessages, useIntl } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    tokenWrapper: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(7),\n    },\n    title: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst generateAccessTokenStep = (props) => {\n    const intl = useIntl();\n    const [keyType, setKeyType] = useState('PRODUCTION');\n    const [selectedTab, setSelectedTab] = useState('Resident Key Manager');\n    const [subscriptionScopes, setSubscriptionScopes] = useState([]);\n\n    const [accessTokenRequest, setAccessTokenRequest] = useState({\n        timeout: 3600,\n        scopesSelected: [],\n        keyType: '',\n    });\n    const {\n        currentStep, createdApp, setCreatedToken, incrementStep, createdKeyType, createdSelectedTab,\n    } = props;\n\n    useEffect(() => {\n        const newRequest = { ...accessTokenRequest, keyType: createdKeyType };\n        setKeyType(createdKeyType);\n        setSelectedTab(createdSelectedTab);\n        setAccessTokenRequest(newRequest);\n    }, [createdKeyType, createdSelectedTab]);\n\n    useEffect(() => {\n        Application.get(createdApp.value)\n            .then((application) => {\n                application.getKeys().then(() => {\n                    const subscriptionScopesList = application.subscriptionScopes\n                        .map((scope) => { return scope.key; });\n                    setSubscriptionScopes(subscriptionScopesList);\n                });\n            }).catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep.error.404',\n                        defaultMessage: 'Resource not found',\n                    }));\n                }\n            });\n    }, []);\n\n    const generateAccessToken = () => {\n        setSelectedTab(createdSelectedTab);\n        Application.get(createdApp.value)\n            .then((application) => {\n                return application.generateToken(\n                    selectedTab,\n                    accessTokenRequest.keyType,\n                    accessTokenRequest.timeout,\n                    accessTokenRequest.scopesSelected,\n                );\n            })\n            .then((response) => {\n                console.log('token generated successfully ' + response);\n                setCreatedToken(response);\n                incrementStep();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep.error.404',\n                        defaultMessage: 'Resource not found',\n                    }));\n                }\n            });\n    };\n    const classes = useStyles();\n    const messages = defineMessages({\n        dataInfo: {\n            id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep',\n            defaultMessage: 'Generate Access Token for {keyType} environment',\n        },\n    });\n\n    return (\n        <>\n            <div className={classes.tokenWrapper}>\n                <Typography variant='subtitle1' component='div' className={classes.title}>\n                    {intl.formatMessage(messages.dataInfo, { keyType })}\n                </Typography>\n                <Tokens\n                    updateAccessTokenRequest={setAccessTokenRequest}\n                    accessTokenRequest={accessTokenRequest}\n                    subscriptionScopes={subscriptionScopes}\n                />\n                <ButtonPanel\n                    classes={classes}\n                    currentStep={currentStep}\n                    handleCurrentStep={generateAccessToken}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default generateAccessTokenStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport ViewToken from 'AppComponents/Shared/AppsAndKeys/ViewToken';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    tokenWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst copyAccessTokenStep = (props) => {\n    const {\n        currentStep, createdToken, handleReset,\n    } = props;\n    const history = useHistory();\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const completeStep = () => {\n        updateSubscriptionData(history.push(`/apis/${api.id}/credentials`));\n    };\n    const classes = useStyles();\n\n    return (\n        <div className={classes.tokenWrapper}>\n            <Grid md={10}>\n                <Box my={1} mx={2}>\n                    <ViewToken token={{ ...createdToken, isOauth: true }} />\n                </Box>\n            </Grid>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={completeStep}\n                handleReset={handleReset}\n            />\n        </div>\n    );\n};\n\nexport default copyAccessTokenStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography, Paper, Box } from '@material-ui/core';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { withStyles } from '@material-ui/core/styles';\nimport CreateAppStep from './CreateAppStep';\nimport SubscribeToAppStep from './SubscribeToAppStep';\nimport GenerateKeysStep from './GenerateKeysStep';\nimport GenerateAccessTokenStep from './GenerateAccessTokenStep';\nimport CopyAccessTokenStep from './CopyAccessTokenStep';\n\nconst styles = (theme) => ({\n    paper: {\n        marginLeft: theme.spacing(3),\n    },\n    titleSub: {\n        marginLeft: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    boxWrapper: {\n        '& h5, & label, & td, & li, & div, & input, & p.MuiFormHelperText-root': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n        '& .MuiButton-containedPrimary span.MuiButton-label': {\n            color: theme.palette.getContrastText(theme.palette.primary.main),\n        },\n    },\n\n});\n\nconst stepComponents = [CreateAppStep, SubscribeToAppStep, GenerateKeysStep,\n    GenerateAccessTokenStep, CopyAccessTokenStep];\n\n/**\n * Class used for wizard\n */\nclass Wizard extends Component {\n    /**\n     * @param {*} props properties\n     */\n    constructor(props) {\n        super(props);\n        const { intl } = this.props;\n        this.steps = [\n            intl.formatMessage({\n                defaultMessage: 'Create application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.create',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Subscribe to new application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.subscribe.to.new.application',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Keys',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.keys',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.access.token',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Copy Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.copy.access.token',\n            }),\n        ];\n        this.stepStatuses = {\n            PROCEED: 'PROCEED',\n            BLOCKED: 'BLOCKED',\n        };\n        this.state = {\n            currentStep: 0,\n            createdApp: null,\n            createdToken: null,\n            redirect: false,\n            createdKeyType: '',\n            createdSelectedTab: '',\n            stepStatus: 'PROCEED',\n        };\n    }\n\n    /**\n     * Used to set the status retured after executing each step. Used in workflow\n     * scenario to evaluate wheather we can proceed to next step\n     * @param {*} stepStatus status\n     */\n    setStepStatus = (stepStatus) => {\n        this.setState({ stepStatus });\n    }\n\n    /**\n     * Set the created app from step 1\n     * @param {*} createdApp app created\n     */\n    setCreatedApp = (createdApp) => {\n        this.setState({ createdApp });\n    }\n\n    /**\n     * Set the created token from step 4\n     * @param {*} createdToken token created\n     */\n    setCreatedToken = (createdToken) => {\n        this.setState({ createdToken });\n    }\n\n    /**\n     * Set the created keytype from step 3\n     * @param {*} createdKeyType token created\n     */\n    setCreatedKeyType = (createdKeyType) => {\n        this.setState({ createdKeyType });\n    }\n\n    /**\n     * Set the created selectedTab from step 3\n     * @param {*} selectedTab token created\n     */\n    setCreatedSelectedTab = (createdSelectedTab) => {\n        this.setState({ createdSelectedTab });\n    }\n\n    /**\n     * Increment the current step or next step by 1\n     */\n    handleNext = () => {\n        this.setState(({ currentStep }) => {\n            return { currentStep: currentStep + 1 };\n        });\n    }\n\n    /**\n     * Rest the currentStep to 0 and bring wizard back to first step\n     * @memberof Wizard\n     */\n    handleReset = () => {\n        this.setState({\n            currentStep: 0,\n        });\n    };\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const { classes } = this.props;\n        const { currentStep, stepStatus } = this.state;\n        const CurrentStepComponent = stepComponents[currentStep];\n        return (\n            <>\n                <Typography variant='h4' component='h2' className={classes.titleSub}>\n                    <FormattedMessage\n                        id={'Apis.Details.Credentials.Credentials'\n                    + '.api.credentials.generate'}\n                        defaultMessage='Subscription &amp; Key Generation Wizard'\n                    />\n                </Typography>\n                <Paper elevation={0} className={classes.paper}>\n                    <Box py={1} mx='auto' display='flex'>\n                        <Grid item xs={12} md={12}>\n                            <Stepper activeStep={currentStep}>\n                                {this.steps.map((label) => {\n                                    return (\n                                        <Step key={label}>\n                                            <StepLabel>{label}</StepLabel>\n                                        </Step>\n                                    );\n                                })}\n                            </Stepper>\n                        </Grid>\n                    </Box>\n                    <Box py={1} mx='auto' display='block' className={classes.boxWrapper}>\n                        {stepStatus === this.stepStatuses.PROCEED && (\n                            <>\n                                <CurrentStepComponent\n                                    {...this.state}\n                                    incrementStep={this.handleNext}\n                                    setStepStatus={this.setStepStatus}\n                                    stepStatuses={this.stepStatuses}\n                                    classes={classes}\n                                    setCreatedApp={this.setCreatedApp}\n                                    setCreatedKeyType={this.setCreatedKeyType}\n                                    setCreatedSelectedTab={this.setCreatedSelectedTab}\n                                    setCreatedToken={this.setCreatedToken}\n                                    handleReset={this.handleReset}\n                                />\n                            </>\n                        )}\n                    </Box>\n                    <Box py={1} mb={1} mx='auto' display='flex'>\n                        {stepStatus === this.stepStatuses.BLOCKED && (\n                            <Box pt={2} px={3} display='flex'>\n                                <Typography variant='h5' component='label'>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Credentials.Wizard.Wizard.approval.request.'\n                                                + 'for.this.step.has'}\n                                        defaultMessage='A request to register this step has been sent.'\n                                    />\n                                </Typography>\n                            </Box>\n                        )}\n                    </Box>\n                </Paper>\n            </>\n        );\n    }\n}\n\nWizard.propTypes = {\n    classes: PropTypes.shape({\n        appBar: PropTypes.string,\n        toolbar: PropTypes.string,\n        subscribeTitle: PropTypes.string,\n        plainContent: PropTypes.string,\n        root: PropTypes.string,\n        instructions: PropTypes.string,\n        button: PropTypes.string,\n        wizardContent: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.func.isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Wizard));\n","/* eslint-disable react/no-unused-state */\n/* eslint-disable react/jsx-props-no-spreading */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport {\n    Route, Switch, Redirect, Link, withRouter,\n} from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Api from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Alert from 'AppComponents/Shared/Alert';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { app } from 'Settings';\nimport CONSTANTS from 'AppData/Constants';\nimport CustomIcon from '../../Shared/CustomIcon';\nimport LeftMenuItem from '../../Shared/LeftMenuItem';\nimport { ResourceNotFound } from '../../Base/Errors/index';\nimport Breadcrumb from './Breadcrumb';\nimport { ApiContext } from './ApiContext';\nimport Progress from '../../Shared/Progress';\nimport Wizard from './Credentials/Wizard/Wizard';\nimport User from '../../../data/User';\n\n\nconst ApiConsole = lazy(() => import('./ApiConsole/ApiConsole' /* webpackChunkName: \"APIConsole\" */));\nconst GraphQLConsole = lazy(() => import('./GraphQLConsole/GraphQLConsole' /* webpackChunkName: \"GraphQLConsole\" */));\nconst AsyncApiConsole = lazy(() => import('./AsyncApiConsole/AsyncApiConsole'));\nconst Overview = lazy(() => import('./Overview' /* webpackChunkName: \"APIOverview\" */));\nconst Documents = lazy(() => import('./Documents/Documents' /* webpackChunkName: \"APIDocuments\" */));\nconst Credentials = lazy(() => import('./Credentials/Credentials' /* webpackChunkName: \"APICredentials\" */));\nconst Comments = lazy(() => import('./Comments/Comments' /* webpackChunkName: \"APIComments\" */));\nconst Sdk = lazy(() => import('./Sdk' /* webpackChunkName: \"APISdk\" */));\nconst AsyncApiDefinition = lazy(() => import('./Definitions/AsyncApi/AsyncApiDefinitionUI'));\n\nconst LoadableSwitch = withRouter((props) => {\n    const { match, api } = props;\n    const { apiUuid } = match.params;\n    const path = '/apis/';\n    const { advertised } = api.advertiseInfo;\n    const redirectURL = path + apiUuid + '/overview';\n\n    let tryoutRoute;\n    if (api.type === 'GRAPHQL') {\n        tryoutRoute = <Route path='/apis/:apiUuid/test' component={GraphQLConsole} />;\n    } else if (api.type === CONSTANTS.API_TYPES.WS || api.type === CONSTANTS.API_TYPES.WEBSUB || api.type === CONSTANTS.API_TYPES.SSE) {\n        tryoutRoute = <Route path='/apis/:apiUuid/test' component={AsyncApiConsole} />;\n    } else {\n        tryoutRoute = <Route path='/apis/:apiUuid/test' component={ApiConsole} />;\n    }\n\n    return (\n        <Suspense fallback={<Progress />}>\n            <Switch>\n                <Redirect exact from='/apis/:apiUuid' to={redirectURL} />\n                <Route path='/apis/:apiUuid/overview' render={() => <Overview {...props} />} />\n                <Route path='/apis/:apiUuid/documents' component={Documents} />\n                <Route path='/apis/:apiUuid/definition' component={AsyncApiDefinition} />\n                <Route exact path='/apis/:apiUuid/credentials/wizard' component={Wizard} />\n                {!advertised && <Route path='/apis/:apiUuid/comments' component={Comments} />}\n                {!advertised && <Route path='/apis/:apiUuid/credentials' component={Credentials} />}\n                {!advertised && tryoutRoute}\n                {!advertised && <Route path='/apis/:apiUuid/sdk' component={Sdk} />}\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </Suspense>\n    );\n});\n\n/**\n *\n * @returns style object\n * @param {*} theme\n */\nconst styles = (theme) => {\n    const {\n        custom: {\n            leftMenu: { width, position },\n        },\n    } = theme;\n    const shiftToLeft = position === 'vertical-left' ? width : 0;\n    const shiftToRight = position === 'vertical-right' ? width : 0;\n    const shiftToLeftMinView = position === 'vertical-left' ? 45 : 0;\n    const shiftToRightMinView = position === 'vertical-right' ? 45 : 0;\n    const leftMenuPaddingLeft = position === 'horizontal' ? theme.spacing(3) : 0;\n\n    return {\n        leftMenu: {\n            backgroundColor: theme.custom.leftMenu.background,\n            backgroundImage: `url(${app.context}${theme.custom.leftMenu.backgroundImage})`,\n            textAlign: 'left',\n            fontFamily: theme.typography.fontFamily,\n            position: 'absolute',\n            bottom: 0,\n            paddingLeft: leftMenuPaddingLeft,\n        },\n        leftMenuHorizontal: {\n            top: theme.custom.infoBar.height,\n            width: '100%',\n            overflowX: 'auto',\n            height: 60,\n            display: 'flex',\n            left: 0,\n        },\n        leftMenuVerticalLeft: {\n            width: theme.custom.leftMenu.width,\n            [theme.breakpoints.down('sm')]: {\n                width: 50,\n            },\n            top: 0,\n            left: 0,\n            overflowY: 'auto',\n        },\n        leftMenuVerticalLeftMinView: {\n            width: 45,\n            top: 0,\n            left: 0,\n            overflowY: 'auto',\n        },\n        leftMenuVerticalRight: {\n            width: theme.custom.leftMenu.width,\n            top: 0,\n            right: 0,\n            overflowY: 'auto',\n        },\n        leftLInkMain: {\n            borderRight: 'solid 1px ' + theme.custom.leftMenu.background,\n            cursor: 'pointer',\n            background: theme.custom.leftMenu.rootBackground,\n            color: theme.palette.getContrastText(theme.custom.leftMenu.rootBackground),\n            alignItems: 'center',\n            justifyContent: 'center',\n            display: 'flex',\n            height: theme.custom.infoBar.height,\n            textDecoration: 'none',\n        },\n        leftLInkMainText: {\n            fontSize: 18,\n            color: theme.palette.grey[500],\n            textDecoration: 'none',\n            paddingLeft: theme.spacing(2),\n        },\n        detailsContent: {\n            display: 'flex',\n            flex: 1,\n        },\n        content: {\n            display: 'flex',\n            flex: 1,\n            flexGrow: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeft,\n            marginRight: shiftToRight,\n            [theme.breakpoints.down('sm')]: {\n                marginLeft: shiftToLeft !== 0 && 50,\n                marginRight: shiftToRight !== 0 && 50,\n            },\n            paddingBottom: theme.spacing(3),\n            overflowX: 'hidden',\n        },\n        contentExpandView: {\n            display: 'flex',\n            flex: 1,\n            flexGrow: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeftMinView,\n            marginRight: shiftToRightMinView,\n            paddingBottom: theme.spacing(3),\n            overflowX: 'hidden',\n            minHeight: 'calc(100vh - 114px)',\n        },\n        shiftLeft: {\n            marginLeft: 0,\n        },\n        contentLoader: {\n            paddingTop: theme.spacing(3),\n        },\n        contentLoaderRightMenu: {\n            paddingRight: theme.custom.leftMenu.width,\n        },\n    };\n};\n/**\n *\n *\n * @class Details\n * @extends {React.Component}\n */\nclass Details extends React.Component {\n    /**\n     *Creates an instance of Details.\n     * @param {*} props\n     * @memberof Details\n     */\n    constructor(props) {\n        super(props);\n        /**\n         *\n         *\n         * @memberof Details\n         */\n        this.updateSubscriptionData = (callback) => {\n            let existingSubscriptions = null;\n            let promisedApplications = null;\n\n            const restApi = new Api();\n\n            // const subscriptionClient = new Subscription();\n            const promisedAPI = restApi.getAPIById(this.api_uuid);\n\n            promisedAPI\n                .then((api) => {\n                    this.setState({ api: api.body });\n                })\n                .catch((error) => {\n                    const { status, response } = error;\n                    const { setTenantDomain, intl } = this.props;\n\n                    const message = intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Details.index.invalid.tenant.domain',\n                    });\n                    if (response && response.body.code === 901300) {\n                        setTenantDomain('INVALID');\n                        Alert.error(message);\n                    }\n                    console.error('Error when getting apis', error);\n                    if (status === 404 || status === 403) {\n                        this.setState({ notFound: true });\n                    }\n                });\n            const user = AuthManager.getUser();\n            if (user === null) {\n                const user1 = new User();\n                this.setState({ open: user1.isSideBarOpen });\n            }\n            if (user != null) {\n                this.setState({ open: user.isSideBarOpen });\n                existingSubscriptions = restApi.getSubscriptions(this.api_uuid, null);\n                const subscriptionLimit = app.subscribeApplicationLimit || 5000;\n                existingSubscriptions = restApi.getSubscriptions(this.api_uuid, null, subscriptionLimit);\n                promisedApplications = restApi.getAllApplications(null, subscriptionLimit);\n\n                Promise.all([existingSubscriptions, promisedApplications])\n                    .then((response) => {\n                        const [subscriptions, applications] = response.map((data) => data.obj);\n\n                        // get the application IDs of existing subscriptions\n                        const subscribedApplications = subscriptions.list.map((element) => {\n                            return {\n                                value: element.applicationId,\n                                policy: element.throttlingPolicy,\n                                status: element.status,\n                                subscriptionId: element.subscriptionId,\n                                label: element.applicationInfo.name,\n                            };\n                        });\n\n                        // Removing subscribed applications from all the applications and get\n                        // the available applications to subscribe\n                        const subscribedAppIds = subscribedApplications.map((sub) => sub.value);\n                        const applicationsAvailable = applications.list\n                            .filter((appInner) => !subscribedAppIds.includes(appInner.applicationId) && appInner.status === 'APPROVED')\n                            .map((filteredApp) => {\n                                return {\n                                    value: filteredApp.applicationId,\n                                    label: filteredApp.name,\n                                };\n                            });\n                        this.setState({ subscribedApplications, applicationsAvailable }, () => {\n                            if (callback) {\n                                callback();\n                            }\n                        });\n                    })\n                    .catch((error) => {\n                        if (process.env.NODE_ENV !== 'production') {\n                            console.log(error);\n                        }\n                        const { status } = error;\n                        if (status === 404) {\n                            this.setState({ notFound: true });\n                        }\n                    });\n            }\n        };\n\n\n        this.state = {\n            active: 'overview',\n            overviewHiden: false,\n            updateSubscriptionData: this.updateSubscriptionData,\n            api: null,\n            applications: null,\n            subscribedApplications: [],\n            applicationsAvailable: [],\n            item: 1,\n            xo: null,\n        };\n        this.setDetailsAPI = this.setDetailsAPI.bind(this);\n        this.api_uuid = this.props.match.params.apiUuid;\n        this.handleDrawerClose = this.handleDrawerClose.bind(this);\n        this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n    }\n\n    /**\n     * @memberof Details\n     */\n    componentDidMount() {\n        this.updateSubscriptionData();\n    }\n\n    /**\n     * handle component did update\n     * @param {JSON} prevProps previous props\n     */\n    componentDidUpdate(prevProps) {\n        const { match: { params: { apiUuid: prevApiUuid } } } = prevProps;\n        const { match: { params: { apiUuid: newApiUuid } } } = this.props;\n        if (prevApiUuid !== newApiUuid) {\n            this.api_uuid = newApiUuid;\n            this.updateSubscriptionData();\n        }\n    }\n\n\n    /**\n     * @param {JSON} api api object\n     * @memberof Details\n     */\n    setDetailsAPI(api) {\n        this.setState({ api });\n    }\n\n    /**\n     * @memberof Details\n     */\n    handleDrawerClose() {\n        this.setState({ open: false });\n        const user = AuthManager.getUser();\n        if (user != null) {\n            user.isSideBarOpen = false;\n            AuthManager.setUser(user);\n        }\n    }\n\n    /**\n     * handle left side drawer open\n     */\n    handleDrawerOpen() {\n        this.setState({ open: true });\n        const user = AuthManager.getUser();\n        if (user !== null) {\n            user.isSideBarOpen = true;\n            AuthManager.setUser(user);\n        }\n    }\n\n    /**\n     * handle lef side drawer open\n     * @param {JSON} api api object\n     * @returns {boolean} is the api async api\n     */\n    isAsyncAPI(api) {\n        return (api\n            && (api.type === CONSTANTS.API_TYPES.WS\n                || api.type === CONSTANTS.API_TYPES.WEBSUB\n                || api.type === CONSTANTS.API_TYPES.SSE));\n    }\n\n    /**\n     * @returns {JSX} rendered outpu\n     * @memberof Details\n     */\n    render() {\n        const {\n            classes, theme, intl,\n        } = this.props;\n        const user = AuthManager.getUser();\n        const { api, notFound, open } = this.state;\n        const {\n            custom: {\n                leftMenu: {\n                    rootIconSize, rootIconTextVisible, rootIconVisible, position,\n                },\n                apiDetailPages: {\n                    showCredentials, showComments, showTryout, showDocuments, showSdks, showAsyncSpecification,\n                },\n                title: {\n                    prefix, sufix,\n                },\n            },\n        } = theme;\n        const globalStyle = 'body{ font-family: ' + theme.typography.fontFamily + '}';\n        const pathPrefix = '/apis/' + this.api_uuid + '/';\n        if (!api && notFound) {\n            return <ResourceNotFound />;\n        }\n        // check for widget=true in the query params. If it's present we render without <Base> component.\n        const pageUrl = new URL(window.location);\n        const isWidget = pageUrl.searchParams.get('widget');\n        const isAsyncApi = this.isAsyncAPI(api);\n\n        return api ? (\n            <ApiContext.Provider value={this.state}>\n                <Helmet>\n                    <title>{`${prefix} ${api.name}${sufix}`}</title>\n                </Helmet>\n                <style>{globalStyle}</style>\n                {!isWidget && (\n                    <nav\n                        role='navigation'\n                        aria-label={intl.formatMessage({\n                            id: 'Apis.Details.index.secondary.navigation',\n                            defaultMessage: 'Secondary Navigation',\n                        })}\n                        className={classNames(\n                            classes.leftMenu,\n                            {\n                                [classes.leftMenuHorizontal]: position === 'horizontal',\n                            },\n                            {\n                                [classes.leftMenuVerticalLeft]: position === 'vertical-left' && open,\n                                [classes.leftMenuVerticalLeftMinView]: position === 'vertical-left' && !open,\n\n                            },\n                            {\n                                [classes.leftMenuVerticalRight]: position === 'vertical-right',\n                            },\n                            'left-menu',\n\n                        )}\n                    >\n                        {rootIconVisible && (\n                            <Link to='/apis' className={classes.leftLInkMain} aria-label='ALL APIs'>\n                                <CustomIcon width={rootIconSize} height={rootIconSize} icon='api' />\n                                {rootIconTextVisible && (\n                                    <Typography className={classes.leftLInkMainText}>\n                                        <FormattedMessage id='Apis.Details.index.all.apis' defaultMessage='ALL APIs' />\n                                    </Typography>\n                                )}\n                            </Link>\n                        )}\n                        <LeftMenuItem\n                            text={<FormattedMessage id='Apis.Details.index.overview' defaultMessage='Overview' />}\n                            route='overview'\n                            iconText='overview'\n                            to={pathPrefix + 'overview'}\n                            open={open}\n                        />\n                        {!api.advertiseInfo.advertised && (\n                            <>\n                                {user && showCredentials && (\n                                    <>\n\n                                        <LeftMenuItem\n                                            text={(\n                                                <FormattedMessage\n                                                    id='Apis.Details.index.subscriptions'\n                                                    defaultMessage='Subscriptions'\n                                                />\n                                            )}\n                                            route='credentials'\n                                            iconText='credentials'\n                                            to={pathPrefix + 'credentials'}\n                                            open={open}\n                                        />\n\n                                    </>\n                                )}\n                                {showTryout && (\n                                    <LeftMenuItem\n                                        text={(\n                                            <FormattedMessage\n                                                id='Apis.Details.index.try.out'\n                                                defaultMessage='Try out'\n                                            />\n                                        )}\n                                        route='test'\n                                        iconText='test'\n                                        to={pathPrefix + 'test'}\n                                        open={open}\n                                    />\n\n                                )}\n                                {isAsyncApi && showAsyncSpecification && (\n                                    <LeftMenuItem\n                                        text={(\n                                            <FormattedMessage\n                                                id='Apis.Details.index.definition'\n                                                defaultMessage='Definition'\n                                            />\n                                        )}\n                                        route='definition'\n                                        iconText='Definition'\n                                        to={pathPrefix + 'definition'}\n                                        open={open}\n                                    />\n                                )}\n                                {showComments && (\n\n                                    <LeftMenuItem\n                                        text={(\n                                            <FormattedMessage\n                                                id='Apis.Details.index.comments'\n                                                defaultMessage='Comments'\n                                            />\n                                        )}\n                                        route='comments'\n                                        iconText='comments'\n                                        to={pathPrefix + 'comments'}\n                                        open={open}\n                                    />\n\n                                )}\n                            </>\n                        )}\n                        {showDocuments && (\n\n                            <LeftMenuItem\n                                text={(\n                                    <FormattedMessage\n                                        id='Apis.Details.index.documentation'\n                                        defaultMessage='Documentation'\n                                    />\n                                )}\n                                route='documents'\n                                iconText='docs'\n                                to={pathPrefix + 'documents'}\n                                open={open}\n                            />\n\n                        )}\n                        {!api.advertiseInfo.advertised && !isAsyncApi && showSdks && (\n\n                            <LeftMenuItem\n                                text={<FormattedMessage id='Apis.Details.index.sdk' defaultMessage='SDKs' />}\n                                route='sdk'\n                                iconText='sdk'\n                                to={pathPrefix + 'sdk'}\n                                open={open}\n                            />\n\n                        )}\n                        {open ? (\n                            <div\n                                onClick={this.handleDrawerClose}\n                                onKeyDown={this.handleDrawerClose}\n                                style={{\n                                    width: 100, paddingLeft: '15px', position: 'absolute', bottom: 0, cursor: 'pointer',\n                                }}\n                            >\n                                <ArrowBackIosIcon fontSize='medium' style={{ color: 'white' }} />\n                            </div>\n                        ) : (\n                            <div\n                                onClick={this.handleDrawerOpen}\n                                onKeyDown={this.handleDrawerOpen}\n                                style={{\n                                    paddingLeft: '15px', position: 'absolute', bottom: 0, cursor: 'pointer',\n                                }}\n                            >\n                                <ArrowForwardIosIcon fontSize='medium' style={{ color: 'white' }} />\n                            </div>\n\n                        )}\n\n                    </nav>\n                )}\n\n                <div\n                    className={classNames(\n                        { [classes.content]: open },\n                        { [classes.contentExpandView]: !open },\n                    )}\n                >\n                    <Breadcrumb />\n                    <div\n                        className={classNames(\n                            { [classes.contentLoader]: position === 'horizontal' },\n                            { [classes.contentLoaderRightMenu]: position === 'vertical-right' },\n                        )}\n                    >\n                        <LoadableSwitch\n                            api={api}\n                            updateSubscriptionData={this.updateSubscriptionData}\n                        />\n                    </div>\n                </div>\n            </ApiContext.Provider>\n        ) : (\n            <div className='apim-dual-ring' />\n        );\n    }\n}\n\nDetails.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default withSettings(injectIntl(withStyles(styles, { withTheme: true })(Details)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core';\nimport CommonListing from './Listing/CommonListing';\nimport TagCloudListing from './Listing/TagCloudListing';\nimport Details from './Details/index';\nimport { ResourceNotFound } from '../Base/Errors';\n\n/**\n * Default API Store overview page\n *\n * @returns {React.Component}\n */\nfunction Apis() {\n    return (\n        <Switch>\n            <Route\n                exact\n                path='/api-groups'\n                render={(props) => (\n                    <TagCloudListing {...props} />)}\n            />\n            <Route\n                exact\n                path='/apis'\n                render={(props) => (\n                    <CommonListing {...props} />)}\n            />\n            <Route\n                path='/apis/search'\n                render={(props) => (\n                    <CommonListing {...props} />)}\n            />\n            <Route\n                path='/apis/:apiUuid/'\n                render={(props) => (\n                    <Details {...props} />)}\n            />\n            <Route component={ResourceNotFound} />\n        </Switch>\n    );\n}\n\nexport default withStyles({}, { withTheme: true })(Apis);\n"],"sourceRoot":""}