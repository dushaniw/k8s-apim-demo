{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Details/Documents/View.jsx","webpack:///./node_modules/@material-ui/icons/Code.js","webpack:///./node_modules/@material-ui/icons/MailOutline.js","webpack:///./node_modules/@material-ui/icons/CloudDownloadRounded.js","webpack:///./node_modules/@material-ui/icons/Launch.js","webpack:///./source/src/app/components/Apis/Details/Social/EmbedCode.jsx","webpack:///./source/src/app/components/Apis/Details/Social/Social.jsx","webpack:///./source/src/app/components/Apis/Details/TaskState.jsx","webpack:///./source/src/app/components/Apis/Details/GoToTryOut.jsx","webpack:///./source/src/app/components/Apis/Details/Environments.jsx","webpack:///./source/src/app/components/Apis/Details/OverviewDocuments.jsx","webpack:///./source/src/app/components/Apis/Details/SourceDownload.jsx","webpack:///./source/src/app/components/Apis/Details/Overview.jsx"],"names":["View","props","classes","doc","apiId","fullScreen","intl","dontShowName","api","useContext","ApiContext","code","setCode","useState","isFileAvailable","setIsFileAvailable","restAPI","API","useEffect","sourceType","getInlineContentOfDocument","documentId","then","docComplete","text","Object","keys","forEach","fieldName","regex","RegExp","replace","catch","error","getFileForDocument","className","docBadge","type","summary","variant","docSummary","plugins","gfm","escapeHtml","html","displayURL","href","sourceUrl","target","rel","displayURLLink","color","button","disabled","onClick","done","response","fileName","contentDisposition","headers","indexOf","matches","exec","contentType","blob","Blob","data","window","navigator","msSaveBlob","URL","webkitURL","downloadUrl","createObjectURL","aTag","document","createElement","download","location","body","appendChild","click","setTimeout","revokeObjectURL","downloadFile","process","id","defaultMessage","fileAvailability","defaultProps","propTypes","PropTypes","shape","isRequired","string","formatMessage","func","bool","injectIntl","withStyles","theme","root","paddingTop","spacing","paddingBottom","docTitle","fontWeight","fontSize","palette","grey","padding","background","primary","main","position","top","marginTop","getContrastText","display","paddingLeft","marginLeft","_interopRequireDefault","defineProperty","exports","value","default","_react","_default","d","getModalStyle","left","transform","useStyles","makeStyles","paper","width","backgroundColor","border","boxShadow","shadows","codeIcon","cursor","custom","infoBar","iconStyle","right","modalStyle","React","open","setOpen","codeCopied","setCodeCopied","url","searchParams","set","embedCode","Modal","onClose","aria-labelledby","aria-describedby","style","Tooltip","title","placement","onCopy","Icon","socialLink","marginRight","oneFlex","flex","socialLinkWrapper","alignItems","paddingRight","divider","borderRight","height","name","apiName","apiUrl","encodeURI","useTheme","slack","github","additionalProperties","find","prop","social","showSharing","active","showFacebook","showReddit","showTwitter","showEmbed","showEmail","src","app","context","alt","TaskState","completed","errors","inProgress","children","completedMessage","inProgressMessage","severity","message","description","Grid","item","xs","icon","CircularProgress","size","thickness","tryoutLabel","whiteSpace","modal","justifyContent","statusBox","outline","asyncButton","minWidth","keyStates","restApi","initialTaskStates","subscribe","prepare","generate","tasksReducer","state","action","status","GoToTryOut","user","AuthManager","getUser","subscribedApplications","applicationsAvailable","updateSubscriptionData","defaultApplications","filter","x","label","defaultApplication","length","tasksStatus","tasksStatusDispatcher","useReducer","showStatus","setShowStatus","useIntl","history","useHistory","isXsOrBelow","useMediaQuery","breakpoints","down","isAsyncAPI","CONSTANTS","API_TYPES","WS","WEBSUB","SSE","isPrototypedAPI","lifeCycleStatus","toLowerCase","taskManager","async","promisedTask","taskResult","console","pushToTryout","push","values","map","tasks","reduce","current","anyErrors","redirectButton","Button","aria-label","advertiseInfo","advertised","throttlingPolicy","tiers","tierName","keyRequest","getKeyManagers","keyType","supportedGrantTypes","callbackUrl","keyManager","responseKeyManagerList","selectedKeyManager","list","responseKeyManagerListDefault","availableGrantTypes","includes","e","Alert","getKeyRequest","applicationId","application","Application","get","getKeys","generateKeys","keyState","log","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","role","Fade","in","Box","bgcolor","borderRadius","p","container","direction","justify","Typography","pr","borderBottom","input","avatar","margin","sectionTitle","Environments","selectedEndpoint","updateSelectedEndpoint","urlCopied","setUrlCopied","flexDirection","mr","area-label","component","for","gutterBottom","align","Paper","endpointURLs","Select","environmentName","onChange","endpoint","MenuItem","environmentDisplayName","VerticalDivider","InputBase","inputProps","URLs","https","http","ws","wss","Avatar","sizes","interactive","IconButton","ml","mt","defaultVersionURLs","getDefaultVersionUrl","OverviewDocuments","docs","setDocs","getDocumentsByAPIId","obj","emptyBox","List","listWrapper","index","ListItem","gotoDoc","listItemStyle","key","ListItemIcon","listItemIcon","ListItemText","listItemPrimary","maxWidth","contentAreaWidth","iconClass","secondary","boxBadge","A400","typography","h5","textAlign","subscriptionBox","linkStyle","subscriptionTop","resourceWrapper","overflow","actionPanel","linkToTest","textDecoration","withTheme","buttonIcon","downloadLink","SourceDownload","apiClient","downloadWSDL","getWsdlClient","downloadWSDLForEnvironment","Utils","downloadSwagger","environment","getSwaggerByAPIIdAndEnvironment","linkTitle","textLabel","textValue","textIndent","apiThumb","borderColor","chipRoot","subtitle","cardRoot","moreLink","table","requestCount","requestUnit","Overview","apiDetailPages","showCredentials","showComments","showDocuments","showThumbnail","showRating","showSwaggerDescriptionOnOverview","descriptionHidden","setDescriptionHidden","isLoading","setIsLoading","notFound","setNotFound","allDocuments","setAllDocuments","overviewDocOverride","setOverviewDocOverride","swaggerDescription","setSwaggerDescription","allPolicies","setAllPolicies","rating","setRating","avgRating","total","count","setSelectedEndpoint","descriptionIsBig","smallDescription","limit","split","slice","join","getSubscriptionPolicies","getAllTiers","filteredList","str","policyName","filteredApiPolicies","t","isApiPolicy","getDocuments","overviewDoc","otherTypeName","Promise","all","swaggerResponse","swagger","info","keyManagers","km","Progress","ResourceNotFound","formattedMessage","paperWithDoc","elevation","sm","xl","ApiThumb","customWidth","customHeight","showInfo","preventDefault","area-lable","version","provider","businessInformation","businessOwner","trim","getProvider","selectedEnvName","filteredEndpoints","ep","flexWrap","tier","Card","CardContent","cardMainTitle","timeUnit","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","Link","to","policy","Comments","isOverview","StarRatingSummary","reviewCount","returnCount","StarRatingBar","isEditable","showSummary","setRatingUpdate","ratingLocal","originalStoreUrl","viewInPubStoreLauncher","linkText","mb","endpointLabel","tags","tag","Chip","clickable","pl","businessOwnerEmail"],"mappings":"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","file":"APIOverview.e40614edb5db7af7c007.bundle.js","sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport ReactSafeHtml from 'react-safe-html';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport { ApiContext } from '../ApiContext';\nimport Alert from '../../../Shared/Alert';\n\nconst styles = (theme) => ({\n    root: {\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    docTitle: {\n        fontWeight: 100,\n        fontSize: 50,\n        color: theme.palette.grey[500],\n    },\n    docBadge: {\n        padding: theme.spacing(1),\n        background: theme.palette.primary.main,\n        position: 'absolute',\n        top: 0,\n        marginTop: -22,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    button: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n    displayURL: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        background: theme.palette.grey[200],\n        color: theme.palette.getContrastText(theme.palette.grey[200]),\n        display: 'flex',\n    },\n    displayURLLink: {\n        paddingLeft: theme.spacing(2),\n    },\n    docSummary: {\n        marginTop: theme.spacing(2),\n        color: theme.palette.text.primary,\n    },\n    fileAvailability: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.8),\n    },\n});\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction View(props) {\n    const {\n        classes, doc, apiId, fullScreen, intl, dontShowName,\n    } = props;\n    const { api } = useContext(ApiContext);\n    const [code, setCode] = useState('');\n    const [isFileAvailable, setIsFileAvailable] = useState(false);\n    const restAPI = new API();\n\n    const loadContentForDoc = () => {\n        const docPromise = restAPI.getInlineContentOfDocument(apiId, doc.documentId);\n        docPromise\n            .then((docComplete) => {\n                let { text } = docComplete;\n                Object.keys(api).forEach((fieldName) => {\n                    // eslint-disable-next-line no-useless-escape\n                    const regex = new RegExp('\\_\\_\\_' + fieldName + '\\_\\_\\_', 'g');\n                    text = text.replace(regex, api[fieldName]);\n                });\n                setCode(text);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    };\n    useEffect(() => {\n        if (doc.sourceType === 'MARKDOWN' || doc.sourceType === 'INLINE') loadContentForDoc();\n        if (doc.sourceType === 'FILE') {\n            const promisedGetContent = restAPI.getFileForDocument(apiId, doc.documentId);\n            promisedGetContent\n                .then(() => {\n                    setIsFileAvailable(true);\n                })\n                .catch(() => {\n                    setIsFileAvailable(false);\n                });\n        }\n    }, [props.doc]);\n\n    /**\n     * Download the document related file\n     * @param {any} response Response of download file\n     * @param {any} doc Response of download file\n     * @returns {void}\n     */\n    const downloadFile = (response) => {\n        let fileName = '';\n        const contentDisposition = response.headers['content-disposition'];\n\n        if (contentDisposition && contentDisposition.indexOf('attachment') !== -1) {\n            const fileNameReg = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n            const matches = fileNameReg.exec(contentDisposition);\n            if (matches != null && matches[1]) fileName = matches[1].replace(/['\"]/g, '');\n        }\n        const contentType = response.headers['content-type'];\n        const blob = new Blob([response.data], {\n            type: contentType,\n        });\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\n            window.navigator.msSaveBlob(blob, fileName);\n        } else {\n            const URL = window.URL || window.webkitURL;\n            const downloadUrl = URL.createObjectURL(blob);\n\n            if (fileName) {\n                const aTag = document.createElement('a');\n                if (typeof aTag.download === 'undefined') {\n                    window.location = downloadUrl;\n                } else {\n                    aTag.href = downloadUrl;\n                    aTag.download = fileName;\n                    document.body.appendChild(aTag);\n                    aTag.click();\n                }\n            } else {\n                window.location = downloadUrl;\n            }\n\n            setTimeout(() => {\n                URL.revokeObjectURL(downloadUrl);\n            }, 100);\n        }\n    };\n    const handleDownload = () => {\n        const promisedGetContent = restAPI.getFileForDocument(apiId, doc.documentId);\n        promisedGetContent\n            .then((done) => {\n                downloadFile(done);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Documents.View.error.downloading',\n                        defaultMessage: 'Error downloading the file',\n                    }));\n                }\n            });\n    };\n    return (\n        <>\n            {!fullScreen && <div className={classes.docBadge}>{doc.type}</div>}\n\n            {(!dontShowName && doc.summary) && (\n                <Typography variant='body1' className={classes.docSummary}>\n                    {doc.summary}\n                </Typography>\n            )}\n\n            {doc.sourceType === 'MARKDOWN'\n            && (\n                <ReactMarkdown plugins={[gfm]} escapeHtml>\n                    {code}\n                </ReactMarkdown>\n            )}\n            {doc.sourceType === 'INLINE' && <ReactSafeHtml html={code} />}\n            {doc.sourceType === 'URL' && (\n                <a\n                    className={classes.displayURL}\n                    href={doc.sourceUrl}\n                    target='_blank'\n                    rel='noopener noreferrer'\n                >\n                    {doc.sourceUrl}\n                    <Icon className={classes.displayURLLink}>open_in_new</Icon>\n                </a>\n            )}\n            {doc.sourceType === 'FILE' && (\n                <Button\n                    variant='contained'\n                    color='default'\n                    className={classes.button}\n                    disabled={!isFileAvailable}\n                    onClick={handleDownload}\n                >\n                    <FormattedMessage id='Apis.Details.Documents.View.btn.download' defaultMessage='Download' />\n\n                    <Icon>arrow_downward</Icon>\n                </Button>\n            )}\n            {doc.sourceType === 'FILE' && !isFileAvailable && (\n                <Typography className={classes.fileAvailability}>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.View.file.availability'\n                        defaultMessage='No file available'\n                    />\n                </Typography>\n            )}\n        </>\n    );\n}\nView.defaultProps = {\n    dontShowName: false,\n};\nView.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    doc: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.string.isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    fullScreen: PropTypes.bool.isRequired,\n    dontShowName: PropTypes.bool,\n};\n\nexport default injectIntl(withStyles(styles)(View));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"\n}), 'Code');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z\"\n}), 'MailOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-4.65 4.65c-.2.2-.51.2-.71 0L7 13h3V9h4v4h3z\"\n}), 'CloudDownloadRounded');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'Launch');\n\nexports.default = _default;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport CodeIcon from '@material-ui/icons/Code';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Icon from '@material-ui/core/Icon';\n\n/**\n * Position the modal\n * @returns {JSON} css atrributes JSON.\n */\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    codeIcon: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n    code: {\n        background: '#efefef',\n        color: 'cc0000',\n        border: 'solid 1px #ccc',\n        padding: theme.spacing(1),\n    },\n    iconStyle: {\n        position: 'absolute',\n        top: 60,\n        right: 30,\n    },\n}));\n\n/**\n * Adds two numbers together.\n * @param {JSON} props props passed from parent\n * @returns {JSX} code in a modal\n */\nfunction EmbedCode(props) {\n    const { intl } = props;\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n    const [codeCopied, setCodeCopied] = React.useState(false);\n    const url = new URL(window.location);\n    url.searchParams.set('widget', true);\n\n    const onCopy = () => {\n        setCodeCopied(true);\n        setTimeout(() => setCodeCopied(false), 2000);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const embedCode = '<iframe width=\"450\" height=\"120\" src=\"'\n        + url + '\" frameBorder=\"0\" allowFullScreen title=\"Embed API\" />';\n\n    return (\n        <div>\n            <CodeIcon className={classes.codeIcon} onClick={handleOpen} />\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby='simple-modal-title'\n                aria-describedby='simple-modal-description'\n            >\n                <div style={modalStyle} className={classes.paper}>\n                    <h2 id='simple-modal-title'>\n                        <FormattedMessage\n                            id='Apis.Details.Social.EmbedCode'\n                            defaultMessage='Embed'\n                        />\n                    </h2>\n                    <div className={classes.code}>\n                        <code>{embedCode}</code>\n                    </div>\n                    <Tooltip\n                        title={\n                            codeCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Apis.Details.Environments.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                })\n                        }\n                        placement='right'\n                        className={classes.iconStyle}\n                    >\n                        <CopyToClipboard\n                            text={embedCode}\n                            onCopy={onCopy}\n                        >\n                            <Icon color='secondary'>file_copy</Icon>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n            </Modal>\n        </div>\n    );\n}\n\nexport default injectIntl(EmbedCode);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { injectIntl } from 'react-intl';\nimport { app } from 'Settings';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport EmbedCode from 'AppComponents/Apis/Details/Social/EmbedCode';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\n\nconst useStyles = makeStyles((theme) => ({\n    socialLink: {\n        display: 'inline-block',\n        '& img': {\n            width: 32,\n            marginRight: theme.spacing(1),\n        },\n    },\n    oneFlex: {\n        flex: 1,\n    },\n    socialLinkWrapper: {\n        marginTop: 16,\n        display: 'flex',\n        alignItems: 'center',\n        paddingRight: theme.spacing(2),\n        '& > div': {\n            display: 'inline-block',\n        },\n    },\n    divider: {\n        display: 'inline-block',\n        borderRight: 'solid 1px #ccc',\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        height: 30,\n    },\n    codeIcon: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n}));\n\n/**\n * Render the social icons\n * @param {int} num1 The first number.\n * @param {int} num2 The second number.\n * @returns {int} The sum of the two numbers.\n */\nfunction Social() {\n    const classes = useStyles();\n    const { api } = useContext(ApiContext);\n    const { name: apiName } = api;\n    const apiUrl = encodeURI(window.location);\n    const theme = useTheme();\n    const [slack, github] = [\n        api.additionalProperties.find((prop) => prop.name === 'slack_url'),\n        api.additionalProperties.find((prop) => prop.name === 'github_repo'),\n    ];\n    const {\n        custom: {\n            social: {\n                showSharing: {\n                    active, showFacebook, showReddit, showTwitter, showEmbed, showEmail,\n                },\n            },\n        },\n    } = theme;\n    return (\n        <>\n            <div className={classes.oneFlex} />\n            <div className={classes.socialLinkWrapper}>\n                {slack && (\n                    <>\n                        <a\n                            className={classes.socialLink}\n                            id='Slack'\n                            href={slack.value}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                            title='Slack'\n                        >\n                            <img\n                                src={`${app.context}/site/public/images/social/slack.png`}\n                                alt='Slack'\n                            />\n                        </a>\n                    </>\n                )}\n                {github && (\n                    <>\n                        <a\n                            className={classes.socialLink}\n                            id='github'\n                            href={github.value}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                            title='GitHub'\n                        >\n                            <img\n                                src={`${app.context}/site/public/images/social/github.jpg`}\n                                alt='GitHub'\n                            />\n                        </a>\n                    </>\n                )}\n                {active && (slack || github) && (\n                    <div className={classes.divider} />\n                )}\n                {active && showFacebook && (\n                    <a\n                        className={classes.socialLink}\n                        id='facebook'\n                        href={`http://www.facebook.com/sharer.php?u=${apiUrl}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title='Facebook'\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/facebook.png`}\n                            alt='Facebook'\n                        />\n                    </a>\n                )}\n                {/* Twitter */}\n                {active && showTwitter && (\n                    <a\n                        className={classes.socialLink}\n                        id='Twitter'\n                        href={`http://twitter.com/share?url=${apiUrl}&text=${apiName}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title='Twitter'\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/twitter.png`}\n                            alt='Twitter'\n                        />\n                    </a>\n                )}\n                {/* Reddit */}\n                {active && showReddit && (\n                    <a\n                        className={classes.socialLink}\n                        id='Reddit'\n                        href={`http://www.reddit.com/submit?url=${apiUrl}&title=${apiName}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title='Reddit'\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/reddit.png`}\n                            alt='Reddit'\n                        />\n                    </a>\n                )}\n                {active && showEmbed && (\n                    <>\n                        <div className={classes.divider} />\n                        {/* TODO: Fix spelling mistake ~tmkb */}\n                        <EmbedCode />\n                    </>\n                )}\n                {active && showEmail && (\n                    <>\n                        <div className={classes.divider} />\n                        <a href={`mailto:?Subject=${apiName}&body=Link+:+${apiUrl}\"`} className={classes.codeIcon}>\n                            <MailOutlineIcon />\n                        </a>\n                    </>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default injectIntl(Social);\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from '@material-ui/lab/Alert';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n/**\n * @export\n * @param {JSON} props props from parent\n * @return {JSX} rendered output\n */\nexport default function TaskState(props) {\n    const {\n        completed, errors, inProgress, children, completedMessage, inProgressMessage,\n    } = props;\n    let severity;\n    let message = children;\n    if (completed) {\n        severity = 'success';\n        if (completedMessage) {\n            message = completedMessage;\n        }\n    } else if (inProgress) {\n        severity = 'info';\n        if (inProgressMessage) {\n            message = inProgressMessage;\n        }\n    } else {\n        severity = 'waiting';\n    }\n    if (errors) {\n        severity = 'error';\n        if (errors.response) {\n            const { body } = errors.response;\n            message = (\n                <>\n                    <b>\n                        [\n                        {body.code}\n                        ]\n                    </b>\n                    {' '}\n                    :\n                    {body.description}\n                </>\n            );\n        } else {\n            message = (\n                <>\n                    <FormattedMessage\n                        id='Apis.Listing.TaskState.generic.error.prefix'\n                        defaultMessage='Error while'\n                    />\n                    {' '}\n                    {inProgressMessage}\n                </>\n            );\n        }\n    }\n\n    return (\n        <>\n            <Grid item xs={12}>\n                <Alert\n                    icon={inProgress ? <CircularProgress size={20} thickness={2} /> : null}\n                    variant={errors ? 'standard' : 'plain'}\n                    severity={severity}\n                >\n                    {message}\n                </Alert>\n            </Grid>\n        </>\n    );\n}\n","/* eslint-disable prefer-destructuring */\n/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n    useReducer, useContext, useState,\n} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport API from 'AppData/api';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Application from 'AppData/Application';\nimport Alert from 'AppComponents/Shared/Alert';\nimport AuthManager from 'AppData/AuthManager';\nimport CONSTANTS from 'AppData/Constants';\nimport { ApiContext } from './ApiContext';\nimport TaskState from './TaskState';\n\nconst useStyles = makeStyles(() => ({\n    tryoutLabel: {\n        whiteSpace: 'nowrap',\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    statusBox: {\n        outline: 'none',\n    },\n    asyncButton: {\n        minWidth: 115,\n    },\n}));\n\nconst keyStates = {\n    COMPLETED: 'COMPLETED',\n    APPROVED: 'APPROVED',\n    CREATED: 'CREATED',\n    REJECTED: 'REJECTED',\n};\n\nconst restApi = new API();\nconst initialTaskStates = {\n    subscribe: { inProgress: true, completed: false, errors: false },\n    prepare: { inProgress: false, completed: false, errors: false },\n    generate: { inProgress: false, completed: false, errors: false },\n};\n\nconst tasksReducer = (state, action) => {\n    const { name, status } = action;\n    if (name === 'reset') {\n        return initialTaskStates;\n    }\n    // In the case of a key collision, the right-most (last) object's value wins out\n    return { ...state, [name]: { ...state[name], ...status } };\n};\n/**\n *\n * @returns {JSX} rendered output\n */\nexport default function GoToTryOut() {\n    const user = AuthManager.getUser();\n    const {\n        api, subscribedApplications, applicationsAvailable, updateSubscriptionData,\n    } = useContext(ApiContext);\n    const defaultApplications = applicationsAvailable.filter((x) => x.label === 'DefaultApplication');\n    const defaultApplication = defaultApplications.length > 0 ? defaultApplications[0] : null;\n    const [tasksStatus, tasksStatusDispatcher] = useReducer(tasksReducer, initialTaskStates);\n    const [showStatus, setShowStatus] = useState(false);\n    const classes = useStyles();\n    const intl = useIntl();\n    const history = useHistory();\n    const theme = useTheme();\n    const isXsOrBelow = useMediaQuery(theme.breakpoints.down('xs'));\n    const isAsyncAPI = (api\n        && (api.type === CONSTANTS.API_TYPES.WS\n            || api.type === CONSTANTS.API_TYPES.WEBSUB\n            || api.type === CONSTANTS.API_TYPES.SSE));\n    const isPrototypedAPI = api.lifeCycleStatus && api.lifeCycleStatus.toLowerCase() === 'prototyped';\n    const getKeyRequest = async () => {\n        const promisedKeyManagers = restApi.getKeyManagers();\n        return promisedKeyManagers\n            .then((response) => {\n                const keyRequest = {\n                    keyType: 'SANDBOX',\n                    supportedGrantTypes: [],\n                    callbackUrl: '',\n                    additionalProperties: {},\n                    keyManager: '',\n                };\n                const responseKeyManagerList = [];\n                response.body.list.map((item) => responseKeyManagerList.push(item));\n\n                // Selecting a key manager from the list of key managers.\n                let selectedKeyManager;\n                if (responseKeyManagerList.length > 0) {\n                    const responseKeyManagerListDefault = responseKeyManagerList.filter((x) => x.name === 'Resident Key Manager');\n                    selectedKeyManager = responseKeyManagerListDefault.length > 0 ? responseKeyManagerListDefault[0]\n                        : responseKeyManagerList[0];\n                }\n\n                // Setting key request\n                try {\n                    keyRequest.keyManager = selectedKeyManager.id;\n                    keyRequest.supportedGrantTypes = selectedKeyManager.availableGrantTypes;\n                    if (selectedKeyManager.availableGrantTypes.includes('implicit')\n                        || selectedKeyManager.availableGrantTypes.includes('authorization_code')) {\n                        keyRequest.callbackUrl = 'http://localhost';\n                    }\n                } catch (e) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.error.keymanager',\n                        defaultMessage: 'Error while selecting the key manager',\n                    }));\n                }\n                return keyRequest;\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    };\n    const generateKeys = async (keyRequest, applicationId) => {\n        const application = await Application.get(applicationId);\n        const keys = await application.getKeys(keyRequest.keyType);\n        if (keys.size > 0) {\n            return;\n        }\n        application.generateKeys(\n            keyRequest.keyType, keyRequest.supportedGrantTypes,\n            keyRequest.callbackUrl,\n            keyRequest.additionalProperties, keyRequest.keyManager,\n        ).then((response) => {\n            if (response.keyState === keyStates.CREATED || response.keyState === keyStates.REJECTED) {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.GoToTryOut.error.keymanager',\n                    defaultMessage: 'Key Generation is Blocked.',\n                }));\n            } else {\n                console.log('Keys generated successfully with ID : ' + response);\n            }\n            return response;\n        }).catch((error) => {\n            if (process.env.NODE_ENV !== 'production') {\n                console.log(error);\n            }\n            const { status } = error;\n            if (status === 404) {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.GoToTryOut.error.404',\n                    defaultMessage: 'Resource not found.',\n                }));\n            }\n        });\n    };\n\n    const taskManager = async (promisedTask, name) => {\n        tasksStatusDispatcher({ name, status: { inProgress: true } });\n        let taskResult;\n        try {\n            taskResult = await promisedTask;\n        } catch (errors) {\n            console.error(errors);\n            tasksStatusDispatcher({ name, status: { errors } });\n        }\n        tasksStatusDispatcher({ name, status: { inProgress: false, completed: true } });\n        return taskResult;\n    };\n\n    const pushToTryout = async () => {\n        await updateSubscriptionData();\n        if (isAsyncAPI) {\n            history.push('/apis/' + api.id + '/definition');\n        } else {\n            history.push('/apis/' + api.id + '/test');\n        }\n    };\n\n    /**\n     *Handle onClick event for `Deploy Sample API` Button\n     * @memberof GoToTryOut\n     */\n    const handleTryOutClick = async () => {\n        let throttlingPolicy = null;\n        if (api.tiers && api.tiers.length > 0) {\n            throttlingPolicy = api.tiers[0].tierName;\n        } else {\n            history.push('/apis/' + api.id + '/test');\n        }\n        setShowStatus(true);\n        // Get the request for key generation using the key managers.\n        const keyRequest = await taskManager(getKeyRequest(), 'prepare');\n        // Generate consumer key and secret\n        await taskManager(generateKeys(keyRequest, defaultApplication.value), 'generate');\n        // Subscribe this API to the default application\n        await taskManager(restApi.subscribe(\n            api.id,\n            defaultApplication.value,\n            throttlingPolicy,\n        ), 'subscribe');\n    };\n\n    Object.values(tasksStatus)\n        .map((tasks) => tasks.completed)\n        .reduce((done, current) => current && done);\n    const anyErrors = Object.values(tasksStatus).map((tasks) => tasks.errors).find((error) => error !== false);\n\n    const redirectButton = isAsyncAPI ? (\n        <Button\n            variant='outlined'\n            color='primary'\n            size='small'\n            classes={{ root: classes.asyncButton, label: classes.tryoutLabel }}\n            onClick={pushToTryout}\n        >\n            <FormattedMessage\n                id='Apis.Details.GoToTryOut.btn.view.definition'\n                defaultMessage='View Definition'\n            />\n        </Button>\n    ) : (\n        <Button\n            variant='contained'\n            color='primary'\n            size='medium'\n            classes={{ label: classes.tryoutLabel }}\n            onClick={pushToTryout}\n            aria-label='Go to Try Out page'\n        >\n            <FormattedMessage\n                id='Apis.Details.GoToTryOut.btn.tryout'\n                defaultMessage='Try Out'\n            />\n        </Button>\n    );\n    if (!defaultApplication\n        || subscribedApplications.length > 0\n        || api.advertiseInfo.advertised\n        || !user\n        || isAsyncAPI\n        || isPrototypedAPI) {\n        return (\n            <>{redirectButton}</>\n\n        );\n    }\n    return (\n        <>\n            <Button\n                onClick={handleTryOutClick}\n                variant='contained'\n                color='primary'\n                size='medium'\n                aria-label='Try Out the API'\n                classes={{ label: classes.tryoutLabel }}\n            >\n                <FormattedMessage\n                    id='Apis.Details.GoToTryOut.btn.tryout'\n                    defaultMessage='Try Out'\n                />\n            </Button>\n\n            <Modal\n                aria-label='Preparing to Try Out the API'\n                className={classes.modal}\n                open={showStatus}\n                // onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n                role='status'\n            >\n                <Fade in={showStatus}>\n                    <Box\n                        bgcolor='background.paper'\n                        borderRadius='borderRadius'\n                        width={isXsOrBelow ? 4 / 5 : 1 / 4}\n                        className={classes.statusBox}\n                        p={2}\n                    >\n                        <Grid\n                            container\n                            direction='row'\n                            justify='center'\n                            alignItems='center'\n                        >\n                            <TaskState\n                                completed={tasksStatus.subscribe.completed}\n                                errors={tasksStatus.subscribe.errors}\n                                inProgress={tasksStatus.subscribe.inProgress}\n                                completedMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.subscribe.complete.success'\n                                        defaultMessage='API subscribe to DefaultApplication successfully!'\n                                    />\n                                )}\n                                inProgressMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.subscribe.inprogress'\n                                        defaultMessage='API subscribing to DefaultApplication ...'\n                                    />\n                                )}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.GoToTryOut.popup.subscribe.complete'\n                                    defaultMessage='API subscribe to DefaultApplication'\n                                />\n                            </TaskState>\n                            <TaskState\n                                completed={tasksStatus.prepare.completed}\n                                errors={tasksStatus.prepare.errors}\n                                inProgress={tasksStatus.prepare.inProgress}\n                                completedMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.prepare.complete'\n                                        defaultMessage='Getting ready to generate keys'\n                                    />\n                                )}\n                                inProgressMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.prepare.inprogress'\n                                        defaultMessage='Gathering information to generate keys ...'\n                                    />\n                                )}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.GoToTryOut.popup.prepare.complete'\n                                    defaultMessage='Getting ready to generate keys'\n                                />\n                            </TaskState>\n                            <TaskState\n                                completed={tasksStatus.generate.completed}\n                                errors={tasksStatus.generate.errors}\n                                inProgress={tasksStatus.generate.inProgress}\n                                completedMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.generate.complete'\n                                        defaultMessage='Consumer key and secret generated successfully!'\n                                    />\n                                )}\n                                inProgressMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.generate.inprogress'\n                                        defaultMessage='Generating Consumer key and secret ...'\n                                    />\n                                )}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.GoToTryOut.popup.key.secret'\n                                    defaultMessage='Consumer key and secret'\n                                />\n                            </TaskState>\n                            {anyErrors ? (\n                                <Grid item xs={12}>\n                                    <Button\n                                        onClick={() => {\n                                            setShowStatus(false);\n                                            tasksStatusDispatcher({ name: 'reset' });\n                                        }}\n                                        variant='outlined'\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.GoToTryOut.continue.on.close'\n                                            defaultMessage='Close'\n                                        />\n                                    </Button>\n                                </Grid>\n                            ) : (\n                                <>\n                                    <Grid item xs={12}>\n                                        <Typography variant='caption'>\n                                            <FormattedMessage\n                                                id='Apis.Details.GoToTryOut.popup.final.message'\n                                                defaultMessage={'All set to try out. Use the \"Generate Keys\"'\n                                                + ' button to get an access token while you are on the Try Out page.'}\n                                            />\n                                        </Typography>\n\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Box display='flex' pr={4}>\n                                            <Box flex={1} />\n                                            {redirectButton}\n                                        </Box>\n                                    </Grid>\n                                </>\n                            )}\n                        </Grid>\n                    </Box>\n                </Fade>\n            </Modal>\n\n        </>\n    );\n}\n","/* eslint-disable no-unreachable */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport Avatar from '@material-ui/core/Avatar';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Box from '@material-ui/core/Box';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { ApiContext } from './ApiContext';\nimport GoToTryOut from './GoToTryOut';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n        '& .MuiInputBase-root:before,  .MuiInputBase-root:hover': {\n            borderBottom: 'none !important',\n            color: theme.palette.primary.main,\n        },\n        '& .MuiSelect-select': {\n            color: theme.palette.primary.main,\n            paddingLeft: theme.spacing(),\n        },\n        '& .MuiInputBase-input': {\n            color: theme.palette.primary.main,\n        },\n        '& .material-icons': {\n            fontSize: 16,\n            color: `${theme.palette.grey[700]} !important`,\n        },\n        borderRadius: 10,\n        marginRight: theme.spacing(),\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    avatar: {\n        width: 30,\n        height: 30,\n        background: 'transparent',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n    },\n    iconStyle: {\n        cursor: 'pointer',\n        margin: '-10px 0',\n        padding: '0 0 0 5px',\n        '& .material-icons': {\n            fontSize: 18,\n            color: '#9c9c9c',\n        },\n    },\n\n    sectionTitle: {\n        color: '#424242',\n        fontSize: '0.85rem',\n        marginRight: 20,\n        fontWeight: 400,\n    },\n}));\n\n/**\n *  @inheritdoc\n */\nfunction Environments(props) {\n    const { selectedEndpoint, updateSelectedEndpoint } = props;\n    const { api } = useContext(ApiContext);\n    const [urlCopied, setUrlCopied] = useState(false);\n\n    const intl = useIntl();\n    const classes = useStyles();\n\n    const onCopy = () => {\n        setUrlCopied(true);\n        const caller = function () {\n            setUrlCopied(false);\n        };\n        setTimeout(caller, 2000);\n    };\n\n    const getDefaultVersionUrl = () => {\n        const { defaultVersionURLs } = selectedEndpoint;\n        if (defaultVersionURLs\n            && (defaultVersionURLs.https\n                || defaultVersionURLs.http\n                || defaultVersionURLs.ws\n                || defaultVersionURLs.wss)) {\n            return (\n                <>\n                    {`\n            ${intl.formatMessage({\n                    id: 'Apis.Details.Environments.default.url',\n                    defaultMessage: '( Default Version ) ',\n                })}\n            ${(defaultVersionURLs.https || defaultVersionURLs.http || defaultVersionURLs.ws || defaultVersionURLs.wss)}`}\n                    <Tooltip\n                        title={\n                            urlCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Apis.Details.Environments.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                })\n                        }\n                        interactive\n                        placement='right'\n                        className={classes.iconStyle}\n                    >\n                        <CopyToClipboard\n                            text={defaultVersionURLs.https\n                                || defaultVersionURLs.http\n                                || defaultVersionURLs.ws\n                                || defaultVersionURLs.wss}\n                            // text={endpoint.URLs.http}\n                            onCopy={() => onCopy('urlCopied')}\n                        >\n                            <IconButton aria-label='Copy the Default Version URL to clipboard'>\n                                <Icon color='secondary'>file_copy</Icon>\n                            </IconButton>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </>\n            );\n        } else {\n            return null;\n        }\n    };\n    /**\n     *  @inheritdoc\n     */\n    // if (!selectedEndpoint) {\n    //     return <Progress />;\n    // }\n    return (\n        <Box display='flex' flexDirection='column' width='100%'>\n            <Box mr={5} display='flex' area-label='API URL details' alignItems='center' width='100%' flexDirection='row'>\n                {selectedEndpoint && (\n                    <>\n                        <Typography\n                            variant='subtitle2'\n                            component='label'\n                            for='gateway-envirounment'\n                            gutterBottom\n                            align='left'\n                            className={classes.sectionTitle}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Environments.label.url'\n                                defaultMessage='URL'\n                            />\n                        </Typography>\n                        <Paper id='gateway-envirounment' component='form' className={classes.root}>\n                            {api.endpointURLs.length > 1 && (\n                                <>\n                                    <Select\n                                        value={selectedEndpoint.environmentName}\n                                        onChange={updateSelectedEndpoint}\n                                        aria-label='Select the Gateway Environment'\n                                    >\n                                        {api.endpointURLs.map((endpoint) => (\n                                            <MenuItem value={endpoint.environmentName}>\n                                                {endpoint.environmentDisplayName || endpoint.environmentName}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                    <VerticalDivider height={30} />\n                                </>\n                            )}\n\n                            <InputBase\n                                className={classes.input}\n                                inputProps={{ 'aria-label': 'api url' }}\n                                value={selectedEndpoint.URLs.https\n                                    || selectedEndpoint.URLs.http\n                                    || selectedEndpoint.URLs.ws\n                                    || selectedEndpoint.URLs.wss}\n                            />\n                            <Avatar className={classes.avatar} sizes={30}>\n                                <Tooltip\n                                    title={\n                                        urlCopied\n                                            ? intl.formatMessage({\n                                                defaultMessage: 'Copied',\n                                                id: 'Apis.Details.Environments.copied',\n                                            })\n                                            : intl.formatMessage({\n                                                defaultMessage: 'Copy to clipboard',\n                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                            })\n                                    }\n                                    interactive\n                                    placement='right'\n                                    className={classes.iconStyle}\n                                >\n                                    <CopyToClipboard\n                                        text={selectedEndpoint.URLs.https\n                                            || selectedEndpoint.URLs.http\n                                            || selectedEndpoint.URLs.ws\n                                            || selectedEndpoint.URLs.wss}\n                                        // text={endpoint.URLs.http}\n                                        onCopy={() => onCopy('urlCopied')}\n                                    >\n                                        <IconButton aria-label='Copy the API URL to clipboard'>\n                                            <Icon color='secondary'>file_copy</Icon>\n                                        </IconButton>\n                                    </CopyToClipboard>\n                                </Tooltip>\n                            </Avatar>\n                        </Paper>\n                    </>\n                )}\n                {!selectedEndpoint && (api.lifeCycleStatus !== 'PROTOTYPED') && (\n                    <Typography variant='subtitle2' component='p' gutterBottom align='left' className={classes.sectionTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Environments.label.noendpoint'\n                            defaultMessage='No endpoints yet.'\n                        />\n                    </Typography>\n                )}\n                <GoToTryOut />\n            </Box>\n            <Box ml={8} alignItems='center' mt={1}>\n                {selectedEndpoint && (\n                    <Typography variant='caption'>\n                        {getDefaultVersionUrl()}\n                    </Typography>\n                )}\n            </Box>\n        </Box>\n\n    );\n}\nEnvironments.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default Environments;\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\n\n/**\n * Add two numbers.\n * @param {JSON} theme The second number.\n * @returns {JSON} The theme object.\n */\nconst styles = (theme) => ({\n    root: {\n        padding: theme.spacing(3),\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    iconClass: {\n        marginRight: 10,\n        color: theme.palette.secondary.main,\n    },\n    boxBadge: {\n        background: theme.palette.grey.A400,\n        color: theme.palette.getContrastText(theme.palette.grey.A400),\n        fontSize: theme.typography.h5.fontSize,\n        padding: theme.spacing(1),\n        width: 30,\n        height: 30,\n        marginRight: 20,\n        textAlign: 'center',\n    },\n    subscriptionBox: {\n        paddingLeft: theme.spacing(2),\n    },\n    linkStyle: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        fontSize: theme.typography.fontSize,\n    },\n    subscriptionTop: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    resourceWrapper: {\n        height: 192,\n        overflow: 'auto',\n    },\n    actionPanel: {\n        justifyContent: 'flex-start',\n    },\n    linkToTest: {\n        textDecoration: 'none',\n    },\n    emptyBox: {\n        background: '#ffffff55',\n        color: '#444',\n        border: 'solid 1px #fff',\n        padding: theme.spacing(2),\n        marginTop: 50,\n    },\n    listWrapper: {\n        padding: 0,\n        margin: 0,\n        width: '100%',\n    },\n    listItemStyle: {\n        padding: 0,\n        margin: 0,\n    },\n    listItemIcon: {\n        minWidth: 30,\n        color: '#BBBEBC66',\n    },\n    listItemPrimary: {\n        fontSize: '14px',\n    },\n});\n\n/**\n * Add two numbers.\n * @param {number} props The second number.\n * @returns {JSX} jsx.\n */\nfunction OverviewDocuments(props) {\n    const [docs, setDocs] = useState([]);\n    const { apiId } = props;\n    const history = useHistory();\n    useEffect(() => {\n        const restApi = new API();\n        const promisedApi = restApi.getDocumentsByAPIId(apiId);\n        promisedApi\n            .then((response) => {\n                if (response.obj.list.length > 0) {\n                    // Rearanging the response to group them by the sourceType property.\n                    setDocs(response.obj.list);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error('Error occurred');\n                }\n            });\n    }, []);\n\n    const gotoDoc = (documentId) => {\n        history.push('/apis/' + apiId + '/documents/' + documentId);\n    };\n    /**\n     *\n     *\n     * @returns\n     * @memberof Overview\n     */\n\n    const { classes } = props;\n    if (docs.length === 0) {\n        return (\n            <Grid container className={classes.root} spacing={2}>\n                <Grid item xs={12}>\n                    <div className={classes.emptyBox}>\n                        <Typography variant='body2'>\n                            <FormattedMessage\n                                id='Apis.Details.Overview.documents.no.content'\n                                defaultMessage='No Documents Available'\n                            />\n                        </Typography>\n                    </div>\n                </Grid>\n            </Grid>\n        );\n    }\n\n    return (\n        docs.length > 0 && (\n            <List\n                component='nav'\n                aria-label='Available document list'\n                className={classes.listWrapper}\n            >\n                {docs.map((doc, index) => (\n                    index <= 1\n                    && (\n                        <ListItem button onClick={() => gotoDoc(doc.documentId)} className={classes.listItemStyle} key={doc.name}>\n                            <ListItemIcon classes={{ root: classes.listItemIcon }}>\n                                <Icon>insert_drive_file</Icon>\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={doc.name}\n                                // secondary={truncateString(100, doc.summary)}\n                                classes={{ primary: classes.listItemPrimary }}\n                            />\n                        </ListItem>\n                    )\n                ))}\n            </List>\n        )\n    );\n}\n\nOverviewDocuments.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(OverviewDocuments);\n","\n/* eslint-disable no-unreachable */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport { Link as MUILink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport API from 'AppData/api';\nimport Utils from 'AppData/Utils';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { ApiContext } from './ApiContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n    iconStyle: {\n        cursor: 'pointer',\n        margin: '-10px 0',\n        padding: '0 0 0 5px',\n        '& .material-icons': {\n            fontSize: 18,\n            color: theme.palette.secondary.main,\n        },\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    downloadLink: {\n        fontSize: 14,\n        color: theme.palette.primary.main,\n        display: 'flex',\n    },\n}));\n\n/**\n * Renders the download links.\n * @returns {JSX} rendered output\n */\nfunction SourceDownload(props) {\n    const { selectedEndpoint } = props;\n    const { api } = useContext(ApiContext);\n    const apiClient = new API();\n    const classes = useStyles();\n    const intl = useIntl();\n\n    /**\n     * Downloads the WSDL of the api for the provided environment\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} environmentName name of the environment\n     */\n    const downloadWSDL = (apiId, environmentName) => {\n        const wsdlClient = apiClient.getWsdlClient();\n        const promisedGet = wsdlClient.downloadWSDLForEnvironment(apiId, environmentName);\n        promisedGet\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Environments.download.wsdl.error',\n                        defaultMessage: 'Error downloading the WSDL',\n                    }));\n                }\n            });\n    };\n\n    /**\n     * Downloads the swagger of the api for the provided environment\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} environment name of the environment\n     */\n    const downloadSwagger = (apiId, environment) => {\n        const promiseSwagger = apiClient.getSwaggerByAPIIdAndEnvironment(apiId, environment);\n        promiseSwagger\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                console.log(error);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Environments.download.swagger.error',\n                    defaultMessage: 'Error downloading the Swagger',\n                }));\n            });\n    };\n    if (\n        api.type === 'SOAP') {\n        return (\n            <Tooltip\n                title={(\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.wsdl'\n                        defaultMessage='WSDL'\n                    />\n                )}\n                placement='right'\n                className={classes.iconStyle}\n            >\n                <MUILink\n                    onClick={() => downloadWSDL(api.id, selectedEndpoint.environmentName)}\n                >\n                    <CloudDownloadRounded className={classes.buttonIcon} />\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.wsdl.text'\n                        defaultMessage='Download WSDL'\n                    />\n                </MUILink>\n            </Tooltip>\n        );\n    }\n    if (api.type === 'HTTP' || api.type === 'SOAPTOREST') {\n        return (\n            <Tooltip\n                title={(\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.swagger'\n                        defaultMessage='Swagger'\n                    />\n                )}\n                placement='right'\n                className={classes.iconStyle}\n            >\n                <MUILink\n                    href='#'\n                    onClick={() => downloadSwagger(api.id, selectedEndpoint.environmentName)}\n                    className={classes.downloadLink}\n                >\n                    <CloudDownloadRounded className={classes.buttonIcon} />\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.swagger.text'\n                        defaultMessage='Download Swagger'\n                    />\n                </MUILink>\n            </Tooltip>\n        );\n    }\n}\n\nexport default SourceDownload;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext, useState, useEffect } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { Link as MUILink } from '@material-ui/core';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport Box from '@material-ui/core/Box';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport Card from '@material-ui/core/Card';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport CardContent from '@material-ui/core/CardContent';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport ApiThumb from 'AppComponents/Apis/Listing/ApiThumb';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport StarRatingSummary from 'AppComponents/Apis/Details/StarRatingSummary';\nimport Social from 'AppComponents/Apis/Details/Social/Social';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport AuthManager from 'AppData/AuthManager';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Progress from 'AppComponents/Shared/Progress';\nimport API from 'AppData/api';\nimport View from 'AppComponents/Apis/Details/Documents/View';\nimport Environments from './Environments';\nimport Comments from './Comments/Comments';\nimport OverviewDocuments from './OverviewDocuments';\nimport SourceDownload from './SourceDownload';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        height: '100vh',\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing(2),\n    },\n    linkTitle: {\n        color: theme.palette.grey[800],\n    },\n    description: {\n        color: theme.palette.grey[700],\n    },\n    textLabel: {\n        fontWeight: 400,\n        color: theme.palette.grey[800],\n    },\n    textValue: {\n        textIndent: theme.spacing(1),\n    },\n    apiThumb: {\n        padding: theme.spacing(),\n        border: 'solid 1px',\n        borderColor: theme.palette.grey[800],\n    },\n    chipRoot: {\n        cursor: 'pointer',\n        marginRight: theme.spacing(),\n    },\n    subtitle: {\n        color: theme.palette.grey[800],\n    },\n    cardRoot: {\n        width: 150,\n        height: 150,\n        marginRight: theme.spacing(),\n        marginTop: theme.spacing(2),\n    },\n    sectionTitle: {\n        color: theme.palette.grey[800],\n        fontSize: '0.95rem',\n        fontWeight: 400,\n    },\n    moreLink: {\n        fontSize: '14px',\n    },\n    table: {\n        '& th': {\n            fontWeight: 400,\n        },\n    },\n    requestCount: {\n        fontSize: 22,\n    },\n    requestUnit: {\n        fontSize: 13,\n    },\n}));\n/**\n * @returns {JSX} overview section\n */\nfunction Overview() {\n    const theme = useTheme();\n\n    const {\n        custom: {\n            apiDetailPages: {\n                showCredentials,\n                showComments,\n                showDocuments,\n            },\n            infoBar: { showThumbnail },\n            social: { showRating },\n            showSwaggerDescriptionOnOverview,\n        },\n    } = theme;\n    const intl = useIntl();\n    const { api, subscribedApplications } = useContext(ApiContext);\n    const [descriptionHidden, setDescriptionHidden] = useState(true);\n    const [isLoading, setIsLoading] = useState(false);\n    const [notFound, setNotFound] = useState(false);\n    const [allDocuments, setAllDocuments] = useState(null);\n    const [overviewDocOverride, setOverviewDocOverride] = useState(null);\n    const [swaggerDescription, setSwaggerDescription] = useState(null);\n    const [allPolicies, setAllPolicies] = useState(null);\n    const [rating, setRating] = useState({\n        avgRating: 0,\n        total: 0,\n        count: 0,\n    });\n    const [selectedEndpoint, setSelectedEndpoint] = useState((api.endpointURLs && api.endpointURLs.length > 0)\n        ? api.endpointURLs[0]\n        : null);\n    const classes = useStyles();\n    // Truncating the description\n    let descriptionIsBig = false;\n    let smallDescription = '';\n    if (api.description) {\n        const limit = 40;\n        if (api.description.split(' ').length > limit) {\n            const newContent = api.description.split(' ').slice(0, limit);\n            smallDescription = newContent.join(' ') + '...';\n            descriptionIsBig = true;\n        }\n    }\n\n    const isApiPolicy = (policyName) => {\n        const filteredApiPolicies = api.tiers.filter((t) => t.tierName === policyName);\n        return filteredApiPolicies && filteredApiPolicies.length > 0;\n    };\n\n    const updateSelectedEndpoint = (e) => {\n        const selectedEnvName = e.target.value;\n        const filteredEndpoints = api.endpointURLs.filter((ep) => ep.environmentName === selectedEnvName);\n        if (filteredEndpoints && filteredEndpoints.length > 0) {\n            setSelectedEndpoint(filteredEndpoints[0]);\n        } else {\n            Alert.error(intl.formatMessage({\n                id: 'Apis.Details.Overview.select.env.error',\n                defaultMessage: 'Error Selecting Environment',\n            }));\n        }\n    };\n\n    const getSubscriptionPolicies = () => {\n        const restApi = new API();\n        return restApi.getAllTiers('subscription')\n            .then((response) => {\n                try {\n                    // Filter policies base on async or not.\n                    const filteredList = response.body.list.filter((str) => isApiPolicy(str.name));\n                    setAllPolicies(filteredList);\n                } catch (e) {\n                    console.log(e);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Overview.error.occurred',\n                        defaultMessage: 'Error occurred',\n                    }));\n                }\n            }).catch((error) => {\n                console.log(error);\n                const { status } = error;\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Overview.error.occurred.subs',\n                    defaultMessage: 'Error occurred when fetching subscription policies',\n                }));\n                if (status === 404) {\n                    setNotFound(true);\n                }\n                setAllDocuments([]);\n                setIsLoading(false);\n            });\n    };\n\n    const getDocuments = () => {\n        const restApi = new API();\n        return restApi.getDocumentsByAPIId(api.id)\n            .then((response) => {\n                const overviewDoc = response.body.list.filter((item) => item.otherTypeName === '_overview');\n                if (overviewDoc.length > 0) {\n                    // We can override the UI with this content\n                    setOverviewDocOverride(overviewDoc[0]); // Only one doc we can render\n                }\n                setAllDocuments(response.body.list);\n            })\n            .catch((error) => {\n                console.log(error);\n                const { status } = error;\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Overview.error.occurred.docs',\n                    defaultMessage: 'Error occurred when fetching documents',\n                }));\n                if (status === 404) {\n                    setNotFound(true);\n                }\n                setAllDocuments([]);\n                setIsLoading(false);\n            });\n    };\n    useEffect(() => {\n        setIsLoading(true);\n        const { endpointURLs } = api;\n        if (endpointURLs && endpointURLs.length > 0) {\n            setSelectedEndpoint(endpointURLs[0]);\n        }\n        Promise.all([getDocuments(), getSubscriptionPolicies()])\n            .then(() => {\n                setIsLoading(false);\n            });\n    }, [api]);\n    useEffect(() => {\n        const restApi = new API();\n        if (showSwaggerDescriptionOnOverview) {\n            restApi.getSwaggerByAPIIdAndEnvironment(api.id, selectedEndpoint.environmentName)\n                .then((swaggerResponse) => {\n                    const swagger = swaggerResponse.obj;\n                    if (swagger && swagger.info) {\n                        setSwaggerDescription(swagger.info.description);\n                    } else {\n                        setSwaggerDescription('');\n                    }\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSwaggerDescription('');\n                });\n        } else {\n            setIsLoading(true);\n            Promise.all([getDocuments(), getSubscriptionPolicies()])\n                .then(() => {\n                    setIsLoading(false);\n                });\n        }\n    }, []);\n\n\n    /**\n     * @param {event} e click event\n     */\n    const collapseAllDescription = (e) => {\n        e.preventDefault();\n        setDescriptionHidden(!descriptionHidden);\n    };\n\n    /**\n     * @returns {string} provider\n     */\n    const getProvider = () => {\n        let { provider } = api;\n        if (\n            api.businessInformation\n            && api.businessInformation.businessOwner\n            && api.businessInformation.businessOwner.trim() !== ''\n        ) {\n            provider = api.businessInformation.businessOwner;\n        }\n        return provider;\n    };\n\n    /**\n     * @param {number} ratings rating value\n     */\n    const setRatingUpdate = (ratingLocal) => {\n        if (ratingLocal) {\n            const { avgRating, total, count } = ratingLocal;\n            setRating({ avgRating, total, count });\n        }\n    };\n\n    /**\n     * @param {JSON} api api object\n     * @returns {JSON} key managers\n     */\n    const getKeyManagers = () => {\n        if (api.keyManagers) {\n            if (api.keyManagers[0] === 'all') {\n                return null;\n            } else {\n                return (\n                    api.keyManagers.map((km) => (<Typography variant='body2'>{km}</Typography>))\n                );\n            }\n        } else {\n            return null;\n        }\n    };\n\n    const user = AuthManager.getUser();\n    if (isLoading) {\n        return (<Progress />);\n    }\n    if (showSwaggerDescriptionOnOverview) {\n        if (!swaggerDescription) {\n            return (<Progress />);\n        } else {\n            return (\n                <Box p={3}>\n                    <ReactMarkdown plugins={[gfm]} escapeHtml>\n                        {swaggerDescription}\n                    </ReactMarkdown>\n                </Box>\n            );\n        }\n    }\n    if (!allDocuments) {\n        return (<Progress />);\n    }\n    if (notFound) {\n        return (\n            <ResourceNotFound message={intl.formattedMessage({\n                id: 'Apis.Details.Overview.not.found.message',\n                defaultMessage: 'Resource Not Found',\n            })}\n            />\n        );\n    }\n    if (overviewDocOverride) {\n        return (\n            <>\n                <Paper className={classes.paperWithDoc}>\n                    <View doc={overviewDocOverride} apiId={api.id} fullScreen dontShowName />\n                </Paper>\n            </>\n        );\n    }\n    return (\n        <Paper className={classes.root} elevation={0}>\n            <Grid container>\n                <Grid item sm={8} xl={9}>\n                    <Box display='flex' flexDirection='column'>\n                        <Box display='flex' flexDirection='row'>\n                            {showThumbnail && (\n                                <Box id='overview-thumbnail' width={86} display='flex' alignItems='center'>\n                                    <Box className={classes.apiThumb}>\n                                        <ApiThumb\n                                            api={api}\n                                            customWidth={70}\n                                            customHeight={50}\n                                            showInfo={false}\n                                        />\n                                    </Box>\n                                </Box>\n                            )}\n                            <Box ml={3} mr={2}>\n                                <Typography variant='h4' component='h2'>{api.name}</Typography>\n                                {api.description && (\n                                    <Typography variant='body2' gutterBottom align='left' className={classes.description}>\n                                        {(descriptionIsBig && descriptionHidden) ? smallDescription : api.description}\n                                        {descriptionIsBig && (\n                                            <a aria-label='Show more/less description' onClick={collapseAllDescription} href='#'>\n                                                {descriptionHidden ? ' more' : ' less'}\n                                            </a>\n                                        )}\n                                    </Typography>\n                                )}\n                                <Box display='flex' area-lable='API version and owner details' flexDirection='row'>\n                                    <Typography variant='body2' gutterBottom align='left' className={classes.textLabel}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.list.version'\n                                            defaultMessage='Version '\n                                        />\n                                    </Typography>\n                                    {' '}\n                                    <Typography variant='body2' gutterBottom align='left' className={classes.textValue}>\n                                        {api.version}\n                                    </Typography>\n                                    <VerticalDivider height={20} />\n                                    <Typography variant='body2' gutterBottom align='left' className={classes.textLabel}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.list.provider'\n                                            defaultMessage='By '\n                                        />\n                                    </Typography>\n                                    {' '}\n                                    <Typography variant='body2' gutterBottom align='left' className={classes.textValue}>\n                                        {getProvider()}\n                                    </Typography>\n                                </Box>\n                            </Box>\n                        </Box>\n                        <Box display='flex' flexDirection='row' alignItems='center' mt={2} pr={6}>\n                            <Environments updateSelectedEndpoint={updateSelectedEndpoint} selectedEndpoint={selectedEndpoint} />\n                        </Box>\n                        <Box mt={6}>\n                            <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.business.plans.title'\n                                    defaultMessage='Business Plans'\n                                />\n                            </Typography>\n                        </Box>\n                        <Box flexWrap='wrap' display='flex' flexDirection='row' alignItems='center' mt={2} ml={1} textAlign='center'>\n                            {allPolicies && allPolicies.map((tier) => (\n                                <Card className={classes.cardRoot} key={tier.name}>\n                                    <CardContent>\n                                        <Typography className={classes.cardMainTitle} color='textSecondary' gutterBottom>\n                                            {tier.name}\n                                        </Typography>\n                                        <Box mt={2}>\n                                            <Typography className={classes.requestCount} color='textSecondary'>\n                                                {tier.requestCount === 2147483647 ? 'Unlimited' : tier.requestCount}\n                                            </Typography>\n                                        </Box>\n                                        <Box>\n                                            <Typography className={classes.requestUnit} color='textSecondary'>\n                                                Requests/\n                                                {tier.timeUnit}\n                                            </Typography>\n                                        </Box>\n                                    </CardContent>\n                                </Card>\n                            ))}\n\n                        </Box>\n                        {(showCredentials && subscribedApplications.length > 0) && (\n                            <>\n                                <Box mt={6}>\n                                    <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.subscriptions.title'\n                                            defaultMessage='Subscriptions'\n                                        />\n                                    </Typography>\n                                </Box>\n                                <Box mt={2} ml={1} pr={6}>\n                                    <TableContainer component={Paper}>\n                                        <Table className={classes.table} aria-label='simple table'>\n                                            <TableHead>\n                                                <TableRow>\n                                                    <TableCell>\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Overview.'\n                                                                + 'api.credentials.subscribed.apps.name'}\n                                                            defaultMessage='Application Name'\n                                                        />\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Overview.api.'\n                                                                + 'credentials.subscribed.apps.tier'}\n                                                            defaultMessage='Throttling Tier'\n                                                        />\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Overview.'\n                                                                + 'api.credentials.subscribed.apps.status'}\n                                                            defaultMessage='Application Status'\n                                                        />\n                                                    </TableCell>\n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody>\n                                                {subscribedApplications.map((app) => (\n                                                    <TableRow key={app.label}>\n                                                        <TableCell component='th' scope='row'>\n                                                            <MUILink component={Link} to={`/applications/${app.value}/overview`}>\n                                                                {app.label}\n                                                            </MUILink>\n                                                        </TableCell>\n                                                        <TableCell>{app.policy}</TableCell>\n                                                        <TableCell>{app.status}</TableCell>\n                                                    </TableRow>\n                                                ))}\n                                            </TableBody>\n                                        </Table>\n                                    </TableContainer>\n                                </Box>\n                            </>\n                        )}\n                        <Box mt={6}>\n                            {(!api.advertiseInfo.advertised && showComments) && (\n                                <>\n                                    <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.comments.title'\n                                            defaultMessage='Comments'\n                                        />\n                                    </Typography>\n                                    <Box pr={6}>\n                                        {api && (\n                                            <Comments apiId={api.id} isOverview />\n                                        )}\n                                    </Box>\n                                </>\n                            )}\n                        </Box>\n                    </Box>\n                </Grid>\n                <Grid item xs={4} xl={3}>\n                    {!api.advertiseInfo.advertised && user && showRating && (\n                        <Box display='flex' flexDirection='row' alignItems='center'>\n                            <StarRatingSummary avgRating={rating.avgRating} reviewCount={rating.total} returnCount={rating.count} />\n                            <VerticalDivider height={30} />\n                            <StarRatingBar\n                                apiId={api.id}\n                                isEditable\n                                showSummary={false}\n                                setRatingUpdate={setRatingUpdate}\n                            />\n                        </Box>\n                    )}\n                    <Box mt={6}>\n                        <Social />\n                    </Box>\n                    {api.advertiseInfo.advertised && (\n                        <>\n                            <a\n                                target='_blank'\n                                rel='noopener noreferrer'\n                                href={api.advertiseInfo.originalStoreUrl}\n                                className={classes.viewInPubStoreLauncher}\n                            >\n                                <div>\n                                    <LaunchIcon />\n                                </div>\n                                <div className={classes.linkText}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Overview.visit.publisher.portal'\n                                        defaultMessage='Visit Publisher Portal'\n                                    />\n                                </div>\n                            </a>\n                            <VerticalDivider height={70} />\n                        </>\n                    )}\n                    <Box mt={6} mb={1}>\n                        <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Overview.tags.title'\n                                defaultMessage='Tags'\n                            />\n                        </Typography>\n                    </Box>\n\n                    <Typography variant='body2' className={classes.endpointLabel}>\n                        {api.tags.map((tag) => (\n                            <Chip\n                                label={tag}\n                                key={tag}\n                                component={Link}\n                                clickable\n                                to={`/apis?offset=0&query=tag:${tag}`}\n                                classes={{ root: classes.chipRoot }}\n                                variant='outlined'\n                                size='small'\n                            />\n                        ))}\n                        {api.tags.length === 0 && (\n                            <FormattedMessage\n                                id='Apis.Details.Overview.list.tags.not'\n                                defaultMessage='Not Tagged'\n                            />\n                        )}\n                    </Typography>\n\n                    {/* Documentation */}\n                    {(showDocuments && allDocuments && allDocuments.length > 0) && (\n                        <>\n                            <Box mt={6}>\n                                <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Overview.documents.title'\n                                        defaultMessage='Documents'\n                                    />\n                                </Typography>\n                            </Box>\n                            <Box pr={2} pl={1}>\n                                <OverviewDocuments apiId={api.id} />\n                                {allDocuments.length > 2 && (\n                                    <MUILink component={Link} to={'/apis/' + api.id + '/documents'} className={classes.moreLink}>\n                                        {allDocuments.length - 2}\n                                        {' '}\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.comments.show.more.more'\n                                            defaultMessage='more'\n                                        />\n                                    </MUILink>\n                                )}\n                            </Box>\n                        </>\n\n                    )}\n                    {api.businessInformation.businessOwnerEmail && (\n                        <>\n                            <Box mt={6}>\n                                <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Overview.business.info'\n                                        defaultMessage='Business Info'\n                                    />\n                                </Typography>\n                            </Box>\n                            <Box mt={1}>\n                                <Typography variant='body2'>\n                                    {api.businessInformation.businessOwnerEmail}\n                                </Typography>\n                            </Box>\n                        </>\n                    )}\n                    <Box mt={6}>\n                        <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Overview.source'\n                                defaultMessage='Source'\n                            />\n                        </Typography>\n                    </Box>\n                    {(api.type === 'HTTP' || api.type === 'SOAPTOREST' || api.type === 'SOAP') && (\n                        <Box mt={2}>\n                            <SourceDownload selectedEndpoint={selectedEndpoint} />\n                        </Box>\n                    )}\n                    {/* Key Managers */}\n                    {getKeyManagers() && (\n                        <>\n                            <Box mt={6}>\n                                <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Overview.key.manager'\n                                        defaultMessage='Key Managers'\n                                    />\n                                </Typography>\n                            </Box>\n                            <Box mt={1}>\n                                {getKeyManagers()}\n                            </Box>\n                        </>\n                    )}\n                    {api.additionalProperties && Object.keys(api.additionalProperties).length > 0 && (\n                        <>\n                            <Box mt={6}>\n                                <Typography variant='subtitle2' className={classes.sectionTitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Overview.additional.properties'\n                                        defaultMessage='Additonal properties'\n                                    />\n                                </Typography>\n                            </Box>\n                            <Box mt={1} ml={1}>\n                                {api.additionalProperties\n                                    .filter(({ name, display }) => display && !['slack_url', 'github_repo'].includes(name))\n                                    .map(({ name, value }) => {\n                                        return (\n                                            <Typography variant='body2'>\n                                                {name}\n                                                {' '}\n                                                :\n                                                {' '}\n                                                {value}\n                                            </Typography>\n                                        );\n                                    })}\n                            </Box>\n                        </>\n                    )}\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default Overview;\n"],"sourceRoot":""}