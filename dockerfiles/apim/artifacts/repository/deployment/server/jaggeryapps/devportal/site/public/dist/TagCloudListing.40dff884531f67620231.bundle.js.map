{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Listing/ApiTagThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/TagCloudListingTags.jsx","webpack:///./source/src/app/components/Apis/Listing/TagCloudListing.jsx"],"names":["ApiTagThumb","props","tag","path","classes","theme","style","mainPage","tagLink","value","tagWise","thumbnail","image","custom","name","split","key","className","thumbWrapper","to","imageWrapper","src","app","context","alt","classNames","thumbContent","textWrapper","Typography","thumbHeader","variant","gutterBottom","title","ListItem","button","ListItemIcon","Icon","ListItemText","primary","propTypes","PropTypes","shape","isRequired","imageOverlap","func","string","withStyles","width","spacing","backgroundColor","palette","background","paper","padding","thumbLeft","alignSelf","flex","thumbRight","thumbInfo","display","whiteSpace","overflow","textOverflow","cursor","justifyContent","margin","contextBox","parseInt","lineHeight","position","paddingTop","marginRight","deleteIcon","fill","color","tagCloud","leftMenu","text","secondary","alignItems","bottom","contentBackgroundColor","withTheme","useStyles","makeStyles","mainTitle","mainTitleWrapper","flexGrow","listContentWrapper","linkTextWrapper","main","tagWiseThumbWrapper","filterTitle","fontWeight","paddingLeft","titleBackground","getContrastText","height","infoBar","mainPageList","mainPageAllApis","TagCloudListingTags","useTheme","active","showAllApis","allTags","apisTagCloudGroup","count","filter","item","length","defaultMessage","id","List","component","aria-label","Object","keys","map","keyInner","Divider","align","appBar","borderBottom","grey","A200","mainIconWrapper","paddingRight","content","iconDefault","TagCloudListing","setAllTags","useState","useEffect","API","getAllTags","then","response","body","list","catch","error","console","log","strokeColorMain","strokeColor","icon"],"mappings":"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","file":"TagCloudListing.40dff884531f67620231.bundle.js","sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { app } from 'Settings';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = (theme) => ({\n    thumbContent: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        justifyContent: 'center',\n        margin: 0,\n    },\n    contextBox: {\n        // eslint-disable-next-line radix\n        width: parseInt(150 - theme.spacing(0.5)),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    image: {\n        width: theme.custom.tagWise.thumbnail.width,\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.tagWise.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n\n/**\n * Get ApiTagThumb\n * @param {*} props properties\n * @returns {*}\n */\nfunction ApiTagThumb(props) {\n    const {\n        tag, path, classes, theme, style, mainPage,\n    } = props;\n    const tagLink = path + ':' + tag.value;\n    const {\n        tagWise: {\n            thumbnail: { image },\n        },\n    } = theme.custom;\n    const name = tag.value.split(theme.custom.tagWise.key)[0];\n    if (style === 'fixed-left' || !mainPage) {\n        return (\n            <Link to={tagLink} className={classes.textWrapper}>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Icon>label</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={name} />\n                </ListItem>\n            </Link>\n        );\n    }\n\n    return (\n        <div className={classes.thumbWrapper}>\n            <Link to={tagLink} className={classes.imageWrapper}>\n                <img src={app.context + image} className={classes.image} alt='' />\n            </Link>\n            <div className={classNames(classes.thumbContent)}>\n                <Link to={tagLink} className={classes.textWrapper}>\n                    <Typography className={classes.thumbHeader} variant='h4' gutterBottom title={name}>\n                        {name}\n                    </Typography>\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nApiTagThumb.propTypes = {\n    classes: PropTypes.shape({\n        thumbWrapper: PropTypes.shape({}).isRequired,\n        imageWrapper: PropTypes.shape({}).isRequired,\n        thumbContent: PropTypes.shape({}).isRequired,\n        imageOverlap: PropTypes.shape({}).isRequired,\n        textWrapper: PropTypes.shape({}).isRequired,\n        thumbHeader: PropTypes.shape({}).isRequired,\n        image: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            tagWise: PropTypes.shape({}).isRequired,\n        }).isRequired,\n    }).isRequired,\n    tag: PropTypes.shape({\n        value: PropTypes.shape({\n            split: PropTypes.func,\n        }).isRequired,\n    }).isRequired,\n    path: PropTypes.shape({}).isRequired,\n    style: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ApiTagThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport ApiTagThumb from './ApiTagThumb';\n\nconst useStyles = makeStyles((theme) => ({\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    linkTextWrapper: {\n        color: theme.palette.primary.main,\n    },\n    tagWiseThumbWrapper: {\n        display: 'flex',\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n    mainPageList: {\n        display: 'flex',\n    },\n    mainPageAllApis: {\n        width: '100%',\n    },\n}));\n\n/**\n * Tag cloud listing tags\n * @param {JSON} props properties passed from parent.\n * @returns {void}\n */\nfunction TagCloudListingTags(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: {\n                key, active, style, showAllApis,\n            },\n        },\n    } = theme;\n\n\n    const tagWiseURL = '/apis?offset=0&query=tag';\n    const { allTags, mainPage } = props;\n    let apisTagCloudGroup = null;\n\n    if (allTags.count !== 0) {\n        if (allTags !== null) {\n            apisTagCloudGroup = allTags.filter((item) => active === true && item.value.split(key).length > 1);\n        }\n        if (apisTagCloudGroup && apisTagCloudGroup.length > 0) {\n            // const tagLink = tagWiseURL + ':' + apisTagCloudGroup[0].value;\n            // if (style === 'fixed-left') history.push(tagLink);\n        }\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n    return apisTagCloudGroup && apisTagCloudGroup.length > 0 ? (\n        <>\n            {!mainPage && (\n                <Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                    <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.TagCloudListingTags.title' />\n                </Typography>\n            )}\n            <List component='nav' aria-label='main mailbox folders' className={classNames({ [classes.mainPageList]: mainPage })}>\n                {Object.keys(apisTagCloudGroup).map((keyInner) => {\n                    return (\n                        <ApiTagThumb\n                            key={keyInner}\n                            tag={apisTagCloudGroup[keyInner]}\n                            path={tagWiseURL}\n                            style={style}\n                            mainPage={mainPage}\n                        />\n                    );\n                })}\n            </List>\n            {showAllApis && (\n                <div className={classNames({ [classes.mainPageAllApis]: mainPage })}>\n                    <Divider />\n\n                    <Link to='apis/' className={classes.textWrapper}>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <Icon>label</Icon>\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={(\n                                    <FormattedMessage\n                                        defaultMessage='All Apis'\n                                        id='Apis.Listing.TagCloudListingTags.allApis'\n                                    />\n                                )}\n                            />\n                        </ListItem>\n                    </Link>\n                </div>\n            )}\n        </>\n\n    ) : (\n        <>\n            {!mainPage && (\n                <Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                    <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.TagCloudListingTags.title' />\n                </Typography>\n            )}\n            <div className={classes.mainTitle}>\n                <Typography variant='subtitle1' gutterBottom align='center'>\n                    <FormattedMessage\n                        defaultMessage='API groups cannot be found'\n                        id='Apis.Listing.TagCloudListingTags.tagsNotFound'\n                    />\n                </Typography>\n                <Link to='apis/' className={classes.linkTextWrapper}>\n                    <Typography variant='subtitle1' gutterBottom align='center'>\n                        <FormattedMessage\n                            defaultMessage='All Apis'\n                            id='Apis.Listing.TagCloudListingTags.allApis'\n                        />\n                    </Typography>\n                </Link>\n            </div>\n        </>\n    );\n}\n\nTagCloudListingTags.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default TagCloudListingTags;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CustomIcon from '../../Shared/CustomIcon';\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    mainIconWrapper: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    content: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    iconDefault: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n}));\n/**\n * Renders tag cloud.\n * @returns {JSX} Tag cloud listing.\n */\nexport default function TagCloudListing() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [allTags, setAllTags] = useState(null);\n    useEffect(() => {\n        const restApiClient = new API();\n        const promisedTags = restApiClient.getAllTags();\n        promisedTags\n            .then((response) => {\n                setAllTags(response.body.list);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, []);\n    const strokeColorMain = theme.palette.getContrastText(theme.palette.background.paper);\n\n    return (\n        <main className={classes.content}>\n            <div className={classes.appBar}>\n                <div className={classes.mainIconWrapper}>\n                    <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                </div>\n                <div className={classes.mainTitleWrapper}>\n                    <Typography variant='h4' className={classes.mainTitle}>\n                        <FormattedMessage\n                            defaultMessage='API Groups'\n                            id='Apis.Listing.TagCloudListing.apigroups.main'\n                        />\n                    </Typography>\n                </div>\n            </div>\n            <div className={classes.listContentWrapper}>\n                {allTags && <TagCloudListingTags allTags={allTags} mainPage />}\n            </div>\n        </main>\n    );\n}\n"],"sourceRoot":""}