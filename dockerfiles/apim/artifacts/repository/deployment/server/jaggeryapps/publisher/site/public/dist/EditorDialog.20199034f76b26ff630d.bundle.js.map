{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Details/APIDefinition/SwaggerEditorDrawer.jsx"],"names":["styles","editorPane","width","height","overflow","editorRoot","MonacoEditor","lazy","SwaggerEditorDrawer","props","onContentChange","bind","content","onEditContent","this","classes","language","swagger","swaggerUrl","encodeURIComponent","container","spacing","className","item","theme","value","onChange","options","glyphMargin","url","React","Component","propTypes","PropTypes","shape","isRequired","string","func","withStyles"],"mappings":"glGAuBMA,OAAS,iBAAO,CAClBC,WAAY,CACRC,MAAO,MACPC,OAAQ,OACRC,SAAU,UAEdC,WAAY,CACRF,OAAQ,UAIVG,aAAeC,iDAAK,kBAAM,8DAQ1BC,oB,wHAIF,6BAAYC,GAAO,wDACf,mBAAMA,IACDC,gBAAkB,EAAKA,gBAAgBC,KAArB,2BAFR,E,sEASnB,SAAgBC,IAEZC,EAD0BC,KAAKL,MAAvBI,eACMD,K,oBAMlB,WAAS,MACkCE,KAAKL,MAApCM,EADH,EACGA,QAASC,EADZ,EACYA,SAAUC,EADtB,EACsBA,QACrBC,EAAa,aAAeF,EAAW,IAAMG,mBAAmBF,GACtE,OACI,sHACI,2DAAC,sDAAD,CAAMG,WAAS,EAACC,QAAS,EAAGC,UAAWP,EAAQV,YAC3C,2DAAC,sDAAD,CAAMkB,MAAI,EAACD,UAAWP,EAAQd,YAC1B,2DAACK,aAAD,CACIU,SAAUA,EACVd,MAAM,OACNC,OAAO,qBACPqB,MAAM,UACNC,MAAOR,EACPS,SAAUZ,KAAKJ,gBACfiB,QAAS,CAAEC,aAAa,MAGhC,2DAAC,sDAAD,CAAML,MAAI,EAACD,UAAWP,EAAQd,YAC1B,2DAAC,oDAAD,CAAW4B,IAAKX,S,gJAvCNY,6CAAMC,WA+CxCvB,oBAAoBwB,UAAY,CAC5BjB,QAASkB,kDAAUC,MAAM,IAAIC,WAC7BnB,SAAUiB,kDAAUG,OAAOD,WAC3BlB,QAASgB,kDAAUG,OAAOD,WAC1BtB,cAAeoB,kDAAUI,KAAKF,Y,aAGnBG,2EAAWtC,OAAXsC,CAAmB9B,qB,2BAAnB,qC,qIAzETR,O,yPAWAM,a,+PAQAE,oB","file":"EditorDialog.20199034f76b26ff630d.bundle.js","sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { lazy } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SwaggerUI from './swaggerUI/SwaggerUI';\n\nconst styles = () => ({\n    editorPane: {\n        width: '50%',\n        height: '100%',\n        overflow: 'scroll',\n    },\n    editorRoot: {\n        height: '100%',\n    },\n});\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"APIDefMonacoEditor\" */));\n\n/**\n * This component hosts the Swagger Editor component.\n * Known Issue: The cursor jumps back to the start of the first line when updating the swagger-ui based on the\n * modification done via the editor.\n * https://github.com/wso2/product-apim/issues/5071\n * */\nclass SwaggerEditorDrawer extends React.Component {\n    /**\n     * @inheritDoc\n     */\n    constructor(props) {\n        super(props);\n        this.onContentChange = this.onContentChange.bind(this);\n    }\n\n    /**\n     * Method to handle the change event of the editor.\n     * @param {string} content : The edited content.\n     * */\n    onContentChange(content) {\n        const { onEditContent } = this.props;\n        onEditContent(content);\n    }\n\n    /**\n     * @inheritDoc\n     */\n    render() {\n        const { classes, language, swagger } = this.props;\n        const swaggerUrl = 'data:text/' + language + ',' + encodeURIComponent(swagger);\n        return (\n            <>\n                <Grid container spacing={2} className={classes.editorRoot}>\n                    <Grid item className={classes.editorPane}>\n                        <MonacoEditor\n                            language={language}\n                            width='100%'\n                            height='calc(100vh - 51px)'\n                            theme='vs-dark'\n                            value={swagger}\n                            onChange={this.onContentChange}\n                            options={{ glyphMargin: true }}\n                        />\n                    </Grid>\n                    <Grid item className={classes.editorPane}>\n                        <SwaggerUI url={swaggerUrl} />\n                    </Grid>\n                </Grid>\n            </>\n        );\n    }\n}\n\nSwaggerEditorDrawer.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    language: PropTypes.string.isRequired,\n    swagger: PropTypes.string.isRequired,\n    onEditContent: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(SwaggerEditorDrawer);\n"],"sourceRoot":""}