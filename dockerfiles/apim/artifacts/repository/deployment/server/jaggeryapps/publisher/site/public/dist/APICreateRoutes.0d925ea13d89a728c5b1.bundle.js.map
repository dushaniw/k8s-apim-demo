{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Create/Default/APICreateDefault.jsx","webpack:///./source/src/app/components/Apis/Create/APICreateRoutes.jsx","webpack:///./source/src/app/components/Apis/Create/APIProduct/APIProductCreateWrapper.jsx","webpack:///./source/src/app/components/Apis/Create/Components/APICreateProductBase.jsx","webpack:///./source/src/app/components/Apis/Create/OpenAPI/ApiCreateOpenAPI.jsx","webpack:///./source/src/app/components/Apis/Create/WSDL/ApiCreateWSDL.jsx","webpack:///./source/src/app/components/Apis/Create/GraphQL/ApiCreateGraphQL.jsx","webpack:///./source/src/app/components/Apis/Create/WebSocket/ApiCreateWebSocket.jsx","webpack:///./source/src/app/components/Apis/Create/StreamingAPI/APICreateStreamingAPI.jsx","webpack:///./source/src/app/components/Apis/Create/AsyncAPI/ApiCreateAsyncAPI.jsx","webpack:///./source/src/app/components/Apis/Create/Components/DefaultAPIForm.jsx","webpack:///./source/src/app/components/Apis/Create/Components/APICreateBase.jsx"],"names":["APICreateDefault","props","isWebSocket","isAPIProduct","history","intl","settings","useAppContext","useState","pageError","setPageError","isCreating","setIsCreating","isPublishing","setIsPublishing","policies","setPolicies","useEffect","API","then","response","allPolicies","body","list","length","Alert","info","formatMessage","filter","p","name","isRevisioning","setIsRevisioning","isDeploying","setIsDeploying","isPublishButtonClicked","setIsPublishButtonClicked","useReducer","currentState","inputAction","action","value","formValidity","apiInputs","inputsDispatcher","isPublishable","endpoint","isAPICreateDisabled","version","context","createAPI","promisedCreatedAPI","apiData","endpointConfig","endpoint_type","sandbox_endpoints","url","production_endpoints","type","APIProduct","saveProduct","apiProduct","push","id","catch","error","description","message","console","save","api","finally","pageTitle","variant","defaultMessage","title","container","direction","justify","alignItems","spacing","item","xs","onClose","disableActions","dense","paperProps","elevation","md","onValidate","isFormValid","onChange","event","target","color","disabled","onClick","size","AuthManager","isNotPublisher","restApi","createRevision","api1","revisionId","envList","environment","map","env","body1","getFirstVhost","envName","find","e","vhosts","host","includes","displayOnDevportal","vhost","deployRevision","publish","workflowStatus","WORKFLOW_STATUS","CREATED","to","defaultProps","propTypes","PropTypes","shape","func","isRequired","withRouter","injectIntl","styles","content","flexGrow","APICreateRoutes","classes","className","path","component","APIProductCreateWrapper","ApiCreateGraphQL","ApiCreateSwagger","ApiCreateWSDL","ApiCreateWebSocket","APICreateStreamingAPI","APICreateAsyncAPI","ResourceNotFound","string","withStyles","useStyles","makeStyles","theme","Paper","height","saveButton","padding","titleWrapper","display","flexDirection","paddingBottom","buttonWrapper","marginTop","alternativeLabel","ApiProductCreateWrapper","useIntl","wizardStep","setWizardStep","apiResources","setApiResources","replace","inputValue","setCreating","steps","activeStep","label","key","isStateCreate","step","apis","newAPIProduct","createProductRevision","deployProductRevision","APICreateProductBase","children","sm","element","ApiCreateOpenAPI","endpoints","inputType","handleOnValidate","additionalProperties","newAPI","importOpenAPIByFile","importOpenAPIByUrl","mode","undefined","Wsdl","importByUrl","importByFileOrArchive","style","marginBottom","implementationType","operations","graphQLInfo","newApi","JSON","stringify","importGraphQL","uuid","obj","mandatoryStar","palette","main","marginLeft","apiType","useParams","toUpperCase","isWebSub","asyncAPIPolicies","policyName","protocolKeys","WebSocket","SSE","WebSub","hideEndpoint","setHideEndpoint","isAPICreatable","handleOnChange","protocol","endpointType","saveStreamingAPI","endpointPlaceholderText","appendChildrenBeforeEndpoint","fullWidth","select","WS","WEBSUB","SelectProps","multiple","renderValue","selected","margin","InputProps","displayName","disableGutters","primary","secondary","streamingApi","ApiCreateAsyncAPI","importAsyncAPIByFile","importAsyncAPIByUrl","helperTextContext","textOverflow","width","whiteSpace","overflow","endpointValidChip","border","endpointInvalidChip","endpointErrorChip","iconButton","iconButtonValid","green","actualContext","initialContext","indexOf","checkContext","result","contextVal","toLowerCase","slice","lastIndexOf","DefaultAPIForm","validity","setValidity","isEndpointValid","setIsEndpointValid","statusCode","setStatusCode","isUpdating","setUpdating","isErrorCode","setIsErrorCode","Boolean","condition","otherwise","updateValidity","newState","Object","entries","reduce","acc","cVal","validate","field","nameValidity","APIValidation","apiName","required","abortEarly","apiParameter","details","contextValidity","apiContext","versionValidity","apiVersion","wsUrlValidity","wsUrl","endpointURL","noValidate","autoComplete","autoFocus","helperText","detail","index","onBlur","root","endAdornment","position","aria-label","testEndpoint","statusMessage","gutterBottom","APICreateBase"],"mappings":"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","file":"APICreateRoutes.0d925ea13d89a728c5b1.bundle.js","sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport API from 'AppData/api';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport Banner from 'AppComponents/Shared/Banner';\n\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APIProduct from 'AppData/APIProduct';\nimport AuthManager from 'AppData/AuthManager';\n\n/**\n *\n * @export\n * @param {*} props\n * @returns\n */\n/**\n * Handle API creation.\n * @param {JSON} props properties passed in.\n * @returns {JSX} API creation form.\n */\nfunction APICreateDefault(props) {\n    const {\n        isWebSocket, isAPIProduct, history, intl,\n    } = props;\n    const { settings } = useAppContext();\n    const [pageError, setPageError] = useState(null);\n    const [isCreating, setIsCreating] = useState();\n    const [isPublishing, setIsPublishing] = useState(false);\n    const [policies, setPolicies] = useState([]);\n\n    useEffect(() => {\n        API.policies('subscription').then((response) => {\n            const allPolicies = response.body.list;\n            if (allPolicies.length === 0) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Create.Default.APICreateDefault.error.policies.not.available',\n                    defaultMessage: 'Throttling policies not available. Contact your administrator',\n                }));\n            } else if (allPolicies.filter((p) => p.name === 'Unlimited').length > 0) {\n                setPolicies(['Unlimited']);\n            } else {\n                setPolicies([allPolicies[0].name]);\n            }\n        });\n    }, []);\n    const [isRevisioning, setIsRevisioning] = useState(false);\n    const [isDeploying, setIsDeploying] = useState(false);\n    const [isPublishButtonClicked, setIsPublishButtonClicked] = useState(false);\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            default:\n                return currentState;\n        }\n    }\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        formValidity: false,\n    });\n    const isPublishable = apiInputs.endpoint;\n    const isAPICreateDisabled = !(apiInputs.name && apiInputs.version && apiInputs.context) || isCreating\n                                 || isPublishing;\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setIsCreating(true);\n        const {\n            name, version, context, endpoint,\n        } = apiInputs;\n        let promisedCreatedAPI;\n        const apiData = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            apiData.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        if (isWebSocket) {\n            apiData.type = 'WS';\n        }\n        if (isAPIProduct) {\n            const newAPIProduct = new APIProduct(apiData);\n            promisedCreatedAPI = newAPIProduct\n                .saveProduct(apiData)\n                .then((apiProduct) => {\n                    Alert.info('API Product created successfully');\n                    history.push(`/api-products/${apiProduct.id}/overview`);\n                    return apiProduct;\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                        setPageError(error.response.body);\n                    } else {\n                        // TODO add i18n ~tmkb\n                        const message = 'Something went wrong while adding the API Product';\n                        Alert.error(message);\n                        setPageError(message);\n                    }\n                    console.error(error);\n                });\n        } else {\n            const newAPI = new API(apiData);\n            promisedCreatedAPI = newAPI\n                .save()\n                .then((api) => {\n                    Alert.info('API created successfully');\n                    return api;\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                        setPageError(error.response.body);\n                    } else {\n                        const message = 'Something went wrong while adding the API';\n                        Alert.error(message);\n                        setPageError(message);\n                    }\n                    console.error(error);\n                    setIsPublishing(false); // We don't publish if something when wrong\n                })\n                .finally(() => {\n                    setIsCreating(false);\n                });\n        }\n        return promisedCreatedAPI.finally(() => setIsCreating(false));\n    }\n\n    /**\n     *\n     */\n    function createAndPublish() {\n        const restApi = new API();\n        setIsPublishButtonClicked(true);\n        createAPI().then((api) => {\n            setIsRevisioning(true);\n            const body = {\n                description: 'Initial Revision',\n            };\n            restApi.createRevision(api.id, body)\n                .then((api1) => {\n                    const revisionId = api1.body.id;\n                    Alert.info('API Revision created successfully');\n                    setIsRevisioning(false);\n                    const envList = settings.environment.map((env) => env.name);\n                    const body1 = [];\n                    const getFirstVhost = (envName) => {\n                        const env = settings.environment.find(\n                            (e) => e.name === envName && e.vhosts.length > 0,\n                        );\n                        return env && env.vhosts[0].host;\n                    };\n                    if (envList && envList.length > 0) {\n                        if (envList.includes('Default') && getFirstVhost('Default')) {\n                            body1.push({\n                                name: 'Default',\n                                displayOnDevportal: true,\n                                vhost: getFirstVhost('Default'),\n                            });\n                        } else if (getFirstVhost(envList[0])) {\n                            body1.push({\n                                name: envList[0],\n                                displayOnDevportal: true,\n                                vhost: getFirstVhost(envList[0]),\n                            });\n                        }\n                    }\n                    setIsDeploying(true);\n                    restApi.deployRevision(api.id, revisionId, body1)\n                        .then(() => {\n                            Alert.info('API Revision Deployed Successfully');\n                            setIsDeploying(false);\n                            // Publishing API after deploying\n                            setIsPublishing(true);\n                            api.publish()\n                                .then((response) => {\n                                    const { workflowStatus } = response.body;\n                                    if (workflowStatus === APICreateDefault.WORKFLOW_STATUS.CREATED) {\n                                        Alert.info(intl.formatMessage({\n                                            id: 'Apis.Create.Default.APICreateDefault.success.publishStatus',\n                                            defaultMessage: 'Lifecycle state change request has been sent',\n                                        }));\n                                    } else {\n                                        Alert.info(intl.formatMessage({\n                                            id: 'Apis.Create.Default.APICreateDefault.success.otherStatus',\n                                            defaultMessage: 'API updated successfully',\n                                        }));\n                                    }\n                                    history.push(`/apis/${api.id}/overview`);\n                                })\n                                .catch((error) => {\n                                    if (error.response) {\n                                        Alert.error(error.response.body.description);\n                                        setPageError(error.response.body);\n                                    } else {\n                                        Alert.error(intl.formatMessage({\n                                            id: 'Apis.Create.Default.APICreateDefault.error.errorMessage.publish',\n                                            defaultMessage: 'Something went wrong while publishing the API',\n                                        }));\n                                        setPageError('Something went wrong while publishing the API');\n                                    }\n                                    console.error(error);\n                                })\n                                .finally(() => {\n                                    setIsPublishing(false);\n                                    setIsPublishButtonClicked(false);\n                                });\n                        })\n                        .catch((error) => {\n                            if (error.response) {\n                                Alert.error(error.response.body.description);\n                                setPageError(error.response.body);\n                            } else {\n                                Alert.error(intl.formatMessage({\n                                    id: 'Apis.Create.Default.APICreateDefault.error.errorMessage.deploy.revision',\n                                    defaultMessage: 'Something went wrong while deploying the API Revision',\n                                }));\n                                setPageError('Something went wrong while deploying the API Revision');\n                            }\n                            console.error(error);\n                        })\n                        .finally(() => {\n                            setIsDeploying(false);\n                        });\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                        setPageError(error.response.body);\n                    } else {\n                        Alert.error(intl.formatMessage({\n                            id: 'Apis.Create.Default.APICreateDefault.error.errorMessage.create.revision',\n                            defaultMessage: 'Something went wrong while creating the API Revision',\n                        }));\n                        setPageError('Something went wrong while creating the API Revision');\n                    }\n                    console.error(error);\n                })\n                .finally(() => {\n                    setIsRevisioning(false);\n                });\n        });\n    }\n\n    /**\n     *\n     *\n     */\n    function createAPIOnly() {\n        createAPI().then((api) => {\n            history.push(`/apis/${api.id}/overview`);\n        });\n    }\n    let pageTitle = (\n        <>\n            <Typography variant='h5'>\n                <FormattedMessage\n                    id='Apis.Create.Default.APICreateDefault.api.heading'\n                    defaultMessage='Create an API'\n                />\n            </Typography>\n            <Typography variant='caption'>\n                <FormattedMessage\n                    id='Apis.Create.Default.APICreateDefault.api.sub.heading'\n                    defaultMessage={\n                        'Create an API by providing a Name, a Version, a Context and'\n                        + ' Backend Endpoint (optional)'\n                    }\n                />\n            </Typography>\n        </>\n    );\n    if (isAPIProduct) {\n        pageTitle = (\n            <>\n                <Typography variant='h5'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.apiProduct.heading'\n                        defaultMessage='Create an API Product'\n                    />\n                </Typography>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.apiProduct.sub.heading'\n                        defaultMessage={\n                            'Create an API Product by providing a Name, a Context,'\n                            + ' and Business Plans (optional).'\n                        }\n                    />\n                </Typography>\n            </>\n        );\n    } else if (isWebSocket) {\n        pageTitle = (\n            <>\n                <Typography variant='h5'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.webSocket.heading'\n                        defaultMessage='Create a WebSocket API'\n                    />\n                </Typography>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.webSocket.sub.heading'\n                        defaultMessage='Create a WebSocket API by providing a Name, and a Context.'\n                    />\n                </Typography>\n            </>\n        );\n    }\n\n    return (\n        <APICreateBase title={pageTitle}>\n            <Grid container direction='row' justify='center' alignItems='center' spacing={3}>\n                {/* Page error banner */}\n                {pageError && (\n                    <Grid item xs={11}>\n                        <Banner\n                            onClose={() => setPageError(null)}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n                {/* end of Page error banner */}\n                <Grid item xs={12} />\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n                    <DefaultAPIForm\n                        onValidate={handleOnValidate}\n                        onChange={handleOnChange}\n                        api={apiInputs}\n                        isAPIProduct={isAPIProduct}\n                        isWebSocket={isWebSocket}\n                    />\n                </Grid>\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            <Button\n                                id='itest-create-default-api-button'\n                                variant='contained'\n                                color='primary'\n                                disabled={isAPICreateDisabled || !apiInputs.isFormValid}\n                                onClick={createAPIOnly}\n                            >\n                                Create\n                                {' '}\n                                {isCreating && !isPublishButtonClicked && <CircularProgress size={24} />}\n                            </Button>\n                        </Grid>\n                        {!AuthManager.isNotPublisher() && (\n                            <Grid item>\n                                <Button\n                                    id='itest-id-apicreatedefault-createnpublish'\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={isDeploying || isRevisioning || !isPublishable\n                                        || isAPICreateDisabled || !apiInputs.isFormValid}\n                                    onClick={createAndPublish}\n                                >\n                                    {(!isPublishing && !isRevisioning && !isDeploying) && 'Create & Publish'}\n                                    {(isPublishing || isRevisioning || isDeploying) && <CircularProgress size={24} />}\n                                    {isCreating && isPublishing && 'Creating API . . .'}\n                                    {!isCreating && isRevisioning && !isDeploying && 'Creating Revision . . .'}\n                                    {!isCreating && isPublishing\n                                        && !isRevisioning && !isDeploying && 'Publishing API . . .'}\n                                    {!isCreating && isPublishing\n                                        && !isRevisioning && isDeploying && 'Deploying Revision . . .'}\n                                </Button>\n                            </Grid>\n                        )}\n                        <Grid item>\n                            <Link to='/apis/'>\n                                <Button variant='text'>\n                                    <FormattedMessage\n                                        id='Apis.Create.Default.APICreateDefault.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\nAPICreateDefault.defaultProps = {\n    isWebSocket: false,\n    isAPIProduct: false,\n};\nAPICreateDefault.WORKFLOW_STATUS = {\n    CREATED: 'CREATED',\n};\nAPICreateDefault.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    isAPIProduct: PropTypes.shape({}),\n    isWebSocket: PropTypes.shape({}),\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\nexport default withRouter(injectIntl(APICreateDefault));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\n\nimport APICreateDefault from './Default/APICreateDefault';\nimport APIProductCreateWrapper from './APIProduct/APIProductCreateWrapper';\nimport ApiCreateSwagger from './OpenAPI/ApiCreateOpenAPI';\nimport ApiCreateWSDL from './WSDL/ApiCreateWSDL';\nimport ApiCreateGraphQL from './GraphQL/ApiCreateGraphQL';\nimport ApiCreateWebSocket from './WebSocket/ApiCreateWebSocket';\nimport APICreateStreamingAPI from './StreamingAPI/APICreateStreamingAPI';\nimport APICreateAsyncAPI from './AsyncAPI/ApiCreateAsyncAPI';\n\nconst styles = {\n    content: {\n        flexGrow: 1,\n    },\n};\n\n/**\n *\n * Handle routing for all types of API create creations, If you want to add new API type create page,\n * Please use `APICreateBase` and `DefaultAPIForm` components to do so , Don't wrap `APICreateDefault` component\n * @param {*} props\n * @returns @inheritdoc\n */\nfunction APICreateRoutes(props) {\n    const { classes } = props;\n    return (\n        <main className={classes.content}>\n            <Switch>\n                <Route path='/apis/create/rest' component={APICreateDefault} />\n                <Route path='/api-products/create' component={APIProductCreateWrapper} />\n                <Route path='/apis/create/graphQL' component={ApiCreateGraphQL} />\n                <Route path='/apis/create/openapi' component={ApiCreateSwagger} />\n                <Route path='/apis/create/wsdl' component={ApiCreateWSDL} />\n                {/* TODO: Remove ApiCreateWebSocket components and associated routes */}\n                <Route path='/apis/create/ws' component={ApiCreateWebSocket} />\n                <Route path='/apis/create/streamingapi/:apiType' component={APICreateStreamingAPI} />\n                <Route path='/apis/create/asyncapi' component={APICreateAsyncAPI} />\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </main>\n    );\n}\n\nAPICreateRoutes.propTypes = {\n    classes: PropTypes.shape({ content: PropTypes.string }).isRequired,\n};\n\nexport default withStyles(styles)(APICreateRoutes);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport APIProduct from 'AppData/APIProduct';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport APICreateProductBase from 'AppComponents/Apis/Create/Components/APICreateProductBase';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport ProductResourcesEditWorkspace from 'AppComponents/Apis/Details/ProductResources/ProductResourcesEditWorkspace';\nimport API from 'AppData/api';\n\nconst useStyles = makeStyles((theme) => ({\n    Paper: {\n        height: '40px',\n    },\n    saveButton: {\n        padding: '0px 0px 0px 10px',\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingBottom: theme.spacing(2),\n    },\n    buttonWrapper: {\n        marginTop: theme.spacing(4),\n    },\n    alternativeLabel: {\n        marginTop: theme.spacing(1),\n    },\n}));\n\n/**\n * Handle API creation from GraphQL Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiProductCreateWrapper(props) {\n    const { history } = props;\n    const intl = useIntl();\n    const [wizardStep, setWizardStep] = useState(0);\n    const [apiResources, setApiResources] = useState([]);\n    const { settings } = useAppContext();\n\n    const [policies, setPolicies] = useState([]);\n\n    useEffect(() => {\n        API.policies('subscription').then((response) => {\n            const allPolicies = response.body.list;\n            if (allPolicies.length === 0) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Create.APIProduct.APIProductCreateWrapper.error.policies.not.available',\n                    defaultMessage: 'Throttling policies not available. Contact your administrator',\n                }));\n            } else if (allPolicies.filter((p) => p.name === 'Unlimited').length > 0) {\n                setPolicies(['Unlimited']);\n            } else {\n                setPolicies([allPolicies[0].name]);\n            }\n        });\n    }, []);\n    const pageTitle = (\n        <>\n            <Typography variant='h5'>\n                <FormattedMessage\n                    id='Apis.Create.APIProduct.APIProductCreateWrapper.heading'\n                    defaultMessage='Create an API Product'\n                />\n            </Typography>\n            <Typography variant='caption'>\n                <FormattedMessage\n                    id='Apis.Create.APIProduct.APIProductCreateWrapper.sub.heading'\n                    defaultMessage={\n                        'Create an API Product by providing a Name, a Context, Resources, '\n                        + 'and Business Plans (optional).'\n                    }\n                />\n            </Typography>\n        </>\n    );\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'name':\n            case 'context':\n            case 'version':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'apiResources':\n                return { ...currentState, [action]: value };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    context: value.context,\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiProductCreateWrapper',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n    function getSteps() {\n        return [\n            <FormattedMessage\n                variant='caption'\n                id='Apis.Create.APIProduct.APIProductCreateWrapper.defineProvide'\n                defaultMessage='Define API Product'\n            />, <FormattedMessage\n                variant='caption'\n                id='Apis.Create.APIProduct.APIProductCreateWrapper.resources'\n                defaultMessage='Add Resources'\n            />];\n    }\n\n    const [isCreating, setCreating] = useState();\n    const classes = useStyles();\n    const steps = getSteps();\n\n    const createAPIProduct = () => {\n        setCreating(true);\n        const {\n            name, context,\n        } = apiInputs;\n        const apiData = {\n            name,\n            context,\n            policies,\n            apis: apiResources,\n        };\n        apiData.transport = ['http', 'https'];\n        const newAPIProduct = new APIProduct(apiData);\n        newAPIProduct\n            .saveProduct(apiData)\n            .then((apiProduct) => {\n                Alert.info('API Product created successfully');\n                const body = {\n                    description: 'Initial Revision',\n                };\n                newAPIProduct.createProductRevision(apiProduct.id, body)\n                    .then((api1) => {\n                        const revisionId = api1.body.id;\n                        Alert.info('API Revision created successfully');\n                        const envList = settings.environment.map((env) => env.name);\n                        const body1 = [];\n                        const getFirstVhost = (envName) => {\n                            const env = settings.environment.find(\n                                (e) => e.name === envName && e.vhosts.length > 0,\n                            );\n                            return env && env.vhosts[0].host;\n                        };\n                        if (envList && envList.length > 0) {\n                            if (envList.includes('Default') && getFirstVhost('Default')) {\n                                body1.push({\n                                    name: 'Default',\n                                    displayOnDevportal: true,\n                                    vhost: getFirstVhost('Default'),\n                                });\n                            } else if (getFirstVhost(envList[0])) {\n                                body1.push({\n                                    name: envList[0],\n                                    displayOnDevportal: true,\n                                    vhost: getFirstVhost(envList[0]),\n                                });\n                            }\n                        }\n                        newAPIProduct.deployProductRevision(apiProduct.id, revisionId, body1)\n                            .then(() => {\n                                Alert.info('API Revision Deployed Successfully');\n                            })\n                            .catch((error) => {\n                                if (error.response) {\n                                    Alert.error(error.response.body.description);\n                                } else {\n                                    Alert.error(intl.formatMessage({\n                                        id: 'Apis.APIProductCreateWrapper.error.errorMessage.deploy.revision',\n                                        defaultMessage: 'Something went wrong while deploying the API Revision',\n                                    }));\n                                }\n                                console.error(error);\n                            });\n                    })\n                    .catch((error) => {\n                        if (error.response) {\n                            Alert.error(error.response.body.description);\n                        } else {\n                            Alert.error(intl.formatMessage({\n                                id: 'Apis.APIProductCreateWrapper.error.errorMessage.create.revision',\n                                defaultMessage: 'Something went wrong while creating the API Revision',\n                            }));\n                        }\n                        console.error(error);\n                    });\n                history.push(`/api-products/${apiProduct.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API Product');\n                }\n            })\n            .finally(() => setCreating(false));\n    };\n\n    return (\n        <>\n            <APICreateProductBase\n                title={pageTitle}\n            >\n                <Box>\n                    {wizardStep === 0 && (\n                        <Stepper alternativeLabel activeStep={0}>\n                            {steps.map((label) => (\n                                <Step key={label}>\n                                    <StepLabel className={classes.alternativeLabel}>{label}</StepLabel>\n                                </Step>\n                            ))}\n\n                        </Stepper>\n                    )}\n                    {wizardStep === 1 && (\n                        <Stepper alternativeLabel activeStep={1}>\n                            {steps.map((label) => (\n                                <Step key={label}>\n                                    <StepLabel>{label}</StepLabel>\n                                </Step>\n                            ))}\n                        </Stepper>\n                    )}\n                </Box>\n                <Grid container spacing={2}>\n                    {wizardStep === 0 && <Grid item md={12} />}\n                    {wizardStep === 0 && <Grid item md={1} />}\n                    <Grid item md={wizardStep === 0 ? 11 : 12}>\n                        {wizardStep === 0 && (\n                            <DefaultAPIForm\n                                onValidate={handleOnValidate}\n                                onChange={handleOnChange}\n                                api={apiInputs}\n                                isAPIProduct\n                            />\n                        )}\n                        {wizardStep === 1 && (\n                            <ProductResourcesEditWorkspace\n                                apiResources={apiResources}\n                                setApiResources={setApiResources}\n                                isStateCreate\n                                api={apiInputs}\n                            />\n                        )}\n                    </Grid>\n                    {wizardStep === 0 && <Grid item md={1} />}\n                    <Grid item md={9}>\n                        <Grid\n                            className={wizardStep === 1 && classes.saveButton}\n                            container\n                            direction='row'\n                            justify='flex-start'\n                            alignItems='center'\n                            spacing={2}\n                        >\n                            <Grid item>\n                                {wizardStep === 1\n                                    && (\n                                        <Button\n                                            onClick={() => setWizardStep((step) => step - 1)}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Create.APIProduct.APIProductCreateWrapper.back'\n                                                defaultMessage='Back'\n                                            />\n                                        </Button>\n                                    )}\n                                {wizardStep === 0 && (\n                                    <Link to='/api-products/'>\n                                        <Button>\n                                            <FormattedMessage\n                                                id='Apis.Create.APIProduct.APIProductCreateWrapper.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Link>\n                                )}\n                            </Grid>\n                            <Grid item>\n                                {wizardStep === 1 && (\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        disabled={!apiInputs.isFormValid || isCreating || (apiResources.length === 0)}\n                                        onClick={createAPIProduct}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Create.APIProduct.APIProductCreateWrapper.publish'\n                                            defaultMessage='Publish'\n                                        />\n                                        {isCreating && <CircularProgress size={24} />}\n                                    </Button>\n                                )}\n                                {wizardStep === 0 && (\n                                    <Button\n                                        onClick={() => setWizardStep((step) => step + 1)}\n                                        variant='contained'\n                                        color='primary'\n                                        disabled={!apiInputs.isFormValid}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Create.APIProduct.APIProductCreateWrapper.next'\n                                            defaultMessage='Next'\n                                        />\n                                    </Button>\n                                )}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </APICreateProductBase>\n        </>\n\n    );\n}\n\nApiProductCreateWrapper.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n/**\n * Base component for all API create forms\n *\n * @param {Object} props title and children components are expected\n * @returns {React.Component} Base element\n */\nexport default function APICreateProductBase(props) {\n    const { title, children } = props;\n    return (\n        <Grid container spacing={3}>\n            <Grid item sm={12} md={12} />\n            {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n            <Grid item sm={0} md={2} />\n            <Grid item sm={12} md={8}>\n                <Grid container spacing={5}>\n                    <Grid item md={12}>\n                        {title}\n                    </Grid>\n                    <Grid item md={12}>\n                        <Paper elevation={0}>{children}</Paper>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item sm={0} md={2} />\n        </Grid>\n    );\n}\nAPICreateProductBase.propTypes = {\n    title: PropTypes.element.isRequired,\n    children: PropTypes.element.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\n\nimport ProvideOpenAPI from './Steps/ProvideOpenAPI';\n\n/**\n * Handle API creation from OpenAPI Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateOpenAPI(props) {\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    version: value.version,\n                    context: value.context,\n                    endpoint: value.endpoints && value.endpoints[0],\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiCreateOpenAPI',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, policies, inputValue, inputType,\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        const newAPI = new API(additionalProperties);\n        const promisedResponse = inputType === 'file'\n            ? newAPI.importOpenAPIByFile(inputValue) : newAPI.importOpenAPIByUrl(inputValue);\n        promisedResponse\n            .then((api) => {\n                Alert.info('API created successfully');\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.heading'\n                            defaultMessage='Create an API using an OpenAPI definition.'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.sub.heading'\n                            defaultMessage='Create an API using an existing OpenAPI definition file or URL.'\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                <Stepper alternativeLabel activeStep={0}>\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.OpenAPI.ApiCreateOpenAPI.wizard.one'\n                                defaultMessage='Provide OpenAPI'\n                            />\n                        </StepLabel>\n                    </Step>\n\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.OpenAPI.ApiCreateOpenAPI.wizard.two'\n                                defaultMessage='Create API'\n                            />\n                        </StepLabel>\n                    </Step>\n                </Stepper>\n            </Box>\n\n            <Grid container spacing={3}>\n                <Grid item xs={12} />\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    {wizardStep === 0 && (\n                        <ProvideOpenAPI\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                        />\n                    )}\n                </Grid>\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={() => setWizardStep((step) => step - 1)}>\n                                    Back\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                >\n                                    Create\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateOpenAPI.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState, useEffect } from 'react';\nimport API from 'AppData/api';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport Wsdl from 'AppData/Wsdl';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\n\nimport ProvideWSDL from './Steps/ProvideWSDL';\n\n/**\n * Handle API creation from WSDL.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateWSDL(props) {\n    const intl = useIntl();\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n    const [policies, setPolicies] = useState([]);\n\n    useEffect(() => {\n        API.policies('subscription').then((response) => {\n            const allPolicies = response.body.list;\n            if (allPolicies.length === 0) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Create.WSDL.ApiCreateWSDL.error.policies.not.available',\n                    defaultMessage: 'Throttling policies not available. Contact your administrator',\n                }));\n            } else if (allPolicies.filter((p) => p.name === 'Unlimited').length > 0) {\n                setPolicies(['Unlimited']);\n            } else {\n                setPolicies([allPolicies[0].name]);\n            }\n        });\n    }, []);\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'SOAP',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n        mode: 'create',\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, type,\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: type === 'SOAPTOREST' ? 'address' : 'http',\n                sandbox_endpoints: {\n                    type: type === 'SOAPTOREST' ? 'address' : undefined,\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    type: type === 'SOAPTOREST' ? 'address' : undefined,\n                    url: endpoint,\n                },\n            };\n        }\n        let promisedWSDLImport;\n        if (apiInputs.inputType === 'url') {\n            promisedWSDLImport = Wsdl.importByUrl(apiInputs.inputValue, additionalProperties, apiInputs.type);\n        } else {\n            promisedWSDLImport = Wsdl.importByFileOrArchive(apiInputs.inputValue, additionalProperties, apiInputs.type);\n        }\n        promisedWSDLImport\n            .then((api) => {\n                Alert.info('API created successfully');\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.WSDL.ApiCreateWSDL.heading'\n                            defaultMessage='Expose a SOAP Service as a REST API'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.WSDL.ApiCreateWSDL.sub.heading'\n                            defaultMessage={\n                                'Expose an existing SOAP service as a REST API by importing the WSDL of the '\n                                + 'SOAP service.'\n                            }\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                <Stepper alternativeLabel activeStep={wizardStep}>\n                    <Step>\n                        <StepLabel>Provide WSDL</StepLabel>\n                    </Step>\n\n                    <Step>\n                        <StepLabel>Create API</StepLabel>\n                    </Step>\n                </Stepper>\n            </Box>\n\n            <Grid container spacing={3}>\n                <Grid item md={12} />\n                <Grid item md={1} />\n                <Grid item md={11}>\n                    {wizardStep === 0 && (\n                        <ProvideWSDL\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                        />\n                    )}\n                </Grid>\n                <Grid item md={1} />\n                <Grid item md={9}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={\n                                    () => setWizardStep((step) => step - 1)\n                                }\n                                >\n                                    Back\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                >\n                                    Create\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateWSDL.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\n\nimport ProvideGraphQL from './Steps/ProvideGraphQL';\n\n/**\n * Handle API creation from GraphQL Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateGraphQL(props) {\n    const intl = useIntl();\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n    const [policies, setPolicies] = useState([]);\n\n    useEffect(() => {\n        API.policies('subscription').then((response) => {\n            const allPolicies = response.body.list;\n            if (allPolicies.length === 0) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Create.GraphQL.ApiCreateGraphQL.error.policies.not.available',\n                    defaultMessage: 'Throttling policies not available. Contact your administrator',\n                }));\n            } else if (allPolicies.filter((p) => p.name === 'Unlimited').length > 0) {\n                setPolicies(['Unlimited']);\n            } else {\n                setPolicies([allPolicies[0].name]);\n            }\n        });\n    }, []);\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            case 'graphQLInfo':\n                return { ...currentState, [action]: value };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    version: value.version,\n                    context: value.context,\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiCreateGraphQL',\n        inputType: 'file',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name,\n            version,\n            context,\n            endpoint,\n            implementationType,\n            inputValue,\n            graphQLInfo: { operations },\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n            operations,\n        };\n        const uploadMethod = 'file';\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        const newApi = new API(additionalProperties);\n        const apiData = {\n            additionalProperties: JSON.stringify(additionalProperties),\n            implementationType,\n            [uploadMethod]: uploadMethod,\n            file: inputValue,\n        };\n\n        newApi\n            .importGraphQL(apiData)\n            .then((response) => {\n                const uuid = response.obj.id;\n                Alert.info(`${name} API created successfully`);\n                history.push(`/apis/${uuid}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.GraphQL.ApiCreateGraphQL.heading'\n                            defaultMessage='Create an API using a GraphQL SDL definition'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.GraphQL.ApiCreateGraphQL.sub.heading'\n                            defaultMessage='Create an API by importing an existing GraphQL SDL definition.'\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                {wizardStep === 0 && (\n                    <Stepper alternativeLabel activeStep={0}>\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.one'\n                                    defaultMessage='Provide GraphQL'\n                                />\n                            </StepLabel>\n                        </Step>\n\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.two'\n                                    defaultMessage='Create API'\n                                />\n                            </StepLabel>\n                        </Step>\n                    </Stepper>\n                )}\n                {wizardStep === 1 && (\n                    <Stepper alternativeLabel activeStep={1}>\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.one'\n                                    defaultMessage='Provide GraphQL'\n                                />\n                            </StepLabel>\n                        </Step>\n\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.two'\n                                    defaultMessage='Create API'\n                                />\n                            </StepLabel>\n                        </Step>\n                    </Stepper>\n                )}\n            </Box>\n\n            <Grid container spacing={3} style={{ marginBottom: 20 }}>\n                <Grid item md={12} />\n                <Grid item md={1} />\n                <Grid item md={11}>\n                    {wizardStep === 0 && (\n                        <ProvideGraphQL\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                        />\n                    )}\n                </Grid>\n                <Grid item md={1} />\n                <Grid item md={9}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={\n                                    () => setWizardStep((step) => step - 1)\n                                }\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.ApiCreateGraphQL.back'\n                                        defaultMessage='Back'\n                                    />\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.ApiCreateGraphQL.next'\n                                        defaultMessage='Next'\n                                    />\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.ApiCreateGraphQL.create'\n                                        defaultMessage='Create'\n                                    />\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateGraphQL.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/**\n * Copyright (c) 2018, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport APICreateDefault from 'AppComponents/Apis/Create/Default/APICreateDefault';\n\nconst ApiCreateWebSocket = () => {\n    return (<APICreateDefault isWebSocket />);\n};\nexport default ApiCreateWebSocket;\n","/**\n * Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useReducer, useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { withRouter } from 'react-router';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { Link, useParams } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\nimport Banner from 'AppComponents/Shared/Banner';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport AuthManager from 'AppData/AuthManager';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n        marginLeft: theme.spacing(0.1),\n    },\n}));\n\nconst APICreateStreamingAPI = (props) => {\n    const { history } = props;\n    const intl = useIntl();\n    const { settings } = useAppContext();\n    const [pageError, setPageError] = useState(null);\n    const [isCreating, setIsCreating] = useState();\n    const [isPublishing, setIsPublishing] = useState(false);\n    const [isRevisioning, setIsRevisioning] = useState(false);\n    const [isDeploying, setIsDeploying] = useState(false);\n    const [isPublishButtonClicked, setIsPublishButtonClicked] = useState(false);\n    const classes = useStyles();\n    const [policies, setPolicies] = useState([]);\n    let { apiType } = useParams();\n    if (apiType) {\n        apiType = apiType.toUpperCase();\n    }\n    const isWebSub = (apiType === 'WEBSUB');\n\n    useEffect(() => {\n        API.asyncAPIPolicies().then((response) => {\n            const allPolicies = response.body.list;\n            if (allPolicies.length === 0) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Create.Default.APICreateDefault.error.policies.not.available',\n                    defaultMessage: 'Throttling policies not available. Contact your administrator',\n                }));\n            } else if (isWebSub && allPolicies.filter((p) => p.policyName === 'AsyncWHUnlimited').length > 0) {\n                setPolicies(['AsyncWHUnlimited']);\n            } else if (!isWebSub && allPolicies.filter((p) => p.policyName === 'AsyncUnlimited').length > 0) {\n                setPolicies(['AsyncUnlimited']);\n            } else {\n                setPolicies([allPolicies[0].policyName]);\n            }\n        });\n    }, []);\n\n    const protocols = [\n        {\n            displayName: 'WebSocket',\n            description: 'WebSocket API',\n        },\n        {\n            displayName: 'WebSub',\n            description: 'WebHook API based on WebSub specification',\n        },\n        {\n            displayName: 'SSE',\n            description: 'Server-Sent Events',\n        },\n    ];\n    const protocolKeys = {\n        WebSocket: 'WS',\n        SSE: 'SSE',\n        WebSub: 'WEBSUB',\n    };\n    const protocolDisplayNames = {\n        WS: 'WebSocket',\n        SSE: 'SSE',\n        WEBSUB: 'WebSub',\n    };\n    const [hideEndpoint, setHideEndpoint] = useState(!apiType || apiType === protocolKeys.WebSub);\n\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'name':\n            case 'version':\n            case 'context':\n            case 'endpoint':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'protocol':\n                setHideEndpoint(protocolKeys[value] === protocolKeys.WebSub);\n                return { ...currentState, [action]: protocolKeys[value] };\n            default:\n                return currentState;\n        }\n    }\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        formValidity: false,\n    });\n\n    const isAPICreatable = apiInputs.name && apiInputs.context && apiInputs.version && !isCreating;\n    // TODO: If WebSub API no endpoint is required. Or else check apiInputs.endpoint has a value.\n    const isPublishable = true;\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    /**\n     *\n     */\n    function createAPI() {\n        setIsCreating(true);\n        const {\n            name, version, context, endpoint, protocol,\n        } = apiInputs;\n        const apiData = {\n            name,\n            version,\n            context,\n            endpoint,\n            type: apiType || protocol.toUpperCase(),\n            policies,\n        };\n\n        let endpointType = 'http';\n        if ((apiType && apiType.toUpperCase() === 'WS') || (protocol && protocol.toUpperCase() === 'WS')) {\n            endpointType = 'ws';\n        }\n        if (endpoint) {\n            apiData.endpointConfig = {\n                endpoint_type: endpointType,\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n\n\n        const newAPI = new API(apiData);\n        const promisedCreatedAPI = newAPI\n            .saveStreamingAPI()\n            .then((api) => {\n                Alert.info('API created successfully');\n                return api;\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n                setIsPublishing(false); // We don't publish if something when wrong\n            })\n            .finally(() => {\n                setIsCreating(false);\n            });\n        return promisedCreatedAPI.finally(() => setIsCreating(false));\n    }\n\n    /**\n     *\n     */\n    function createAndPublish() {\n        const streamingApi = new API();\n        setIsPublishButtonClicked(true);\n        createAPI().then((api) => {\n            setIsRevisioning(true);\n            const body = {\n                description: 'Initial Revision',\n            };\n            streamingApi.createRevision(api.id, body)\n                .then((api1) => {\n                    const revisionId = api1.body.id;\n                    Alert.info('API Revision created successfully');\n                    setIsRevisioning(false);\n                    const envList = settings.environment.map((env) => env.name);\n                    const body1 = [];\n                    const getFirstVhost = (envName) => {\n                        const env = settings.environment.find(\n                            (e) => e.name === envName && e.vhosts.length > 0,\n                        );\n                        return env && env.vhosts[0].host;\n                    };\n                    if (envList && envList.length > 0) {\n                        if (envList.includes('Default') && getFirstVhost('Default')) {\n                            body1.push({\n                                name: 'Default',\n                                displayOnDevportal: true,\n                                vhost: getFirstVhost('Default'),\n                            });\n                        } else if (getFirstVhost(envList[0])) {\n                            body1.push({\n                                name: envList[0],\n                                displayOnDevportal: true,\n                                vhost: getFirstVhost(envList[0]),\n                            });\n                        }\n                    }\n                    setIsDeploying(true);\n                    streamingApi.deployRevision(api.id, revisionId, body1)\n                        .then(() => {\n                            Alert.info('API Revision Deployed Successfully');\n                            setIsDeploying(false);\n                            // Publishing API after deploying\n                            setIsPublishing(true);\n                            api.publish()\n                                .then((response) => {\n                                    const { workflowStatus } = response.body;\n                                    if (workflowStatus === APICreateStreamingAPI.WORKFLOW_STATUS.CREATED) {\n                                        Alert.info(intl.formatMessage({\n                                            id: 'Apis.Create.Default.APICreateDefault.success.publishStatus',\n                                            defaultMessage: 'Lifecycle state change request has been sent',\n                                        }));\n                                    } else {\n                                        Alert.info(intl.formatMessage({\n                                            id: 'Apis.Create.Default.APICreateDefault.success.otherStatus',\n                                            defaultMessage: 'API updated successfully',\n                                        }));\n                                    }\n                                    history.push(`/apis/${api.id}/overview`);\n                                })\n                                .catch((error) => {\n                                    if (error.response) {\n                                        Alert.error(error.response.body.description);\n                                        setPageError(error.response.body);\n                                    } else {\n                                        Alert.error(intl.formatMessage({\n                                            id: 'Apis.Create.Default.APICreateDefault.error.errorMessage.publish',\n                                            defaultMessage: 'Something went wrong while publishing the API',\n                                        }));\n                                        setPageError('Something went wrong while publishing the API');\n                                    }\n                                    console.error(error);\n                                })\n                                .finally(() => {\n                                    setIsPublishing(false);\n                                    setIsPublishButtonClicked(false);\n                                });\n                        })\n                        .catch((error) => {\n                            if (error.response) {\n                                Alert.error(error.response.body.description);\n                                setPageError(error.response.body);\n                            } else {\n                                Alert.error(intl.formatMessage({\n                                    id: 'Apis.Create.Default.APICreateDefault.error.errorMessage.deploy.revision',\n                                    defaultMessage: 'Something went wrong while deploying the API Revision',\n                                }));\n                                setPageError('Something went wrong while deploying the API Revision');\n                            }\n                            console.error(error);\n                        })\n                        .finally(() => {\n                            setIsDeploying(false);\n                        });\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                        setPageError(error.response.body);\n                    } else {\n                        Alert.error(intl.formatMessage({\n                            id: 'Apis.Create.Default.APICreateDefault.error.errorMessage.create.revision',\n                            defaultMessage: 'Something went wrong while creating the API Revision',\n                        }));\n                        setPageError('Something went wrong while creating the API Revision');\n                    }\n                    console.error(error);\n                })\n                .finally(() => {\n                    setIsRevisioning(false);\n                });\n        });\n    }\n\n    function createAPIOnly() {\n        createAPI().then((api) => {\n            history.push(`/apis/${api.id}/overview`);\n        });\n    }\n\n    const pageTitle = (\n        <>\n            <Typography variant='h5'>\n                <FormattedMessage\n                    id='Apis.Create.StreamingAPI.APICreateStreamingAPI.api.heading'\n                    defaultMessage='Create a Streaming API'\n                />\n            </Typography>\n            <Typography variant='caption'>\n                {isWebSub ? (\n                    <FormattedMessage\n                        id='Apis.Create.StreamingAPI.APICreateStreamingAPI.websub.api.sub.heading'\n                        defaultMessage='Create an API by providing a Name, a Version and a Context'\n                    />\n                ) : (\n                    <FormattedMessage\n                        id='Apis.Create.StreamingAPI.APICreateStreamingAPI.api.sub.heading'\n                        defaultMessage='Create an API by providing a Name, a Version, a Context and the Endpoint'\n                    />\n                )}\n\n            </Typography>\n        </>\n    );\n\n    return (\n        <APICreateBase title={pageTitle}>\n            <Grid container direction='row' justify='center' alignItems='center' spacing={3}>\n                {/* Page error banner */}\n                {pageError && (\n                    <Grid item xs={11}>\n                        <Banner\n                            onClose={() => setPageError(null)}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n                {/* end of Page error banner */}\n                <Grid item xs={12} />\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n                    <DefaultAPIForm\n                        onValidate={handleOnValidate}\n                        onChange={handleOnChange}\n                        api={apiInputs}\n                        endpointPlaceholderText='Streaming Provider'\n                        appendChildrenBeforeEndpoint\n                        hideEndpoint={hideEndpoint}\n                        isWebSocket={(apiType && apiType === protocolKeys.WebSocket)\n                            || apiInputs.protocol === protocolKeys.WebSocket}\n                    >\n                        <TextField\n                            fullWidth\n                            select\n                            label={(\n                                <>\n                                    <FormattedMessage\n                                        id='Apis.Create.streaming.Components.SelectPolicies.business.plans'\n                                        defaultMessage='Protocol'\n                                    />\n                                    <sup className={classes.mandatoryStar}>*</sup>\n                                </>\n                            )}\n                            value={apiType ? protocolDisplayNames[apiType] : apiInputs.protocol}\n                            disabled={apiType}\n                            name='protocol'\n                            SelectProps={{\n                                multiple: false,\n                                renderValue: (selected) => (selected),\n                            }}\n                            margin='normal'\n                            variant='outlined'\n                            InputProps={{\n                                id: 'itest-id-apipolicies-input',\n                            }}\n                            onChange={handleOnChange}\n                        >\n                            {protocols.map((protocol) => (\n                                <MenuItem\n                                    dense\n                                    disableGutters={false}\n                                    value={protocol.displayName}\n                                >\n                                    <ListItemText primary={protocol.displayName} secondary={protocol.description} />\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </DefaultAPIForm>\n                </Grid>\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                disabled={!(isAPICreatable && apiInputs.isFormValid)}\n                                onClick={createAPIOnly}\n                            >\n                                Create\n                                {' '}\n                                {isCreating && !isPublishButtonClicked && <CircularProgress size={24} />}\n                            </Button>\n                        </Grid>\n                        {!AuthManager.isNotPublisher() && (\n                            <Grid item>\n                                <Button\n                                    id='itest-id-apicreatedefault-createnpublish'\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={isDeploying || isRevisioning || !isPublishable\n                                        || !isAPICreatable || !apiInputs.isFormValid}\n                                    onClick={createAndPublish}\n                                >\n                                    {(!isPublishing && !isRevisioning && !isDeploying) && 'Create & Publish'}\n                                    {(isPublishing || isRevisioning || isDeploying) && <CircularProgress size={24} />}\n                                    {isCreating && isPublishing && 'Creating API . . .'}\n                                    {!isCreating && isRevisioning && !isDeploying && 'Creating Revision . . .'}\n                                    {!isCreating && isPublishing\n                                        && !isRevisioning && !isDeploying && 'Publishing API . . .'}\n                                    {!isCreating && isPublishing\n                                        && !isRevisioning && isDeploying && 'Deploying Revision . . .'}\n                                </Button>\n                            </Grid>\n                        )}\n                        <Grid item>\n                            <Link to='/apis/'>\n                                <Button variant='text'>\n                                    <FormattedMessage\n                                        id='Apis.Create.Default.APICreateDefault.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n};\nAPICreateStreamingAPI.WORKFLOW_STATUS = {\n    CREATED: 'CREATED',\n};\n\nexport default withRouter(APICreateStreamingAPI);\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ProvideAsyncAPI from './Steps/ProvideAsyncAPI';\n\n/**\n * Handle API creation from OpenAPI Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateAsyncAPI(props) {\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n    // eslint-disable-next-line no-use-before-define\n    const classes = useStyles();\n    const [hideEndpoint, setHideEndpoint] = useState(true);\n\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'protocol':\n            case 'context':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    version: value.version,\n                    context: value.context,\n                    endpoint: value.endpoints && value.endpoints[0],\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiCreateAsyncAPI',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    const protocols = [\n        {\n            name: 'ws',\n            displayName: 'WebSocket',\n            description: 'WebSocket API',\n        },\n        {\n            name: 'websub',\n            displayName: 'WebSub',\n            description: 'WebHook API based on WebSub specification',\n        },\n        {\n            name: 'sse',\n            displayName: 'SSE',\n            description: 'Server-Sent Events',\n        },\n    ];\n\n    const protocolKeys = {\n        WebSocket: 'WS',\n        SSE: 'SSE',\n        WebSub: 'WEBSUB',\n    };\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChangeForProtocol(event) {\n        const { name: action, value } = event.target;\n        if (value === 'WebSub') {\n            setHideEndpoint(true);\n        } else {\n            setHideEndpoint(false);\n        }\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, policies, inputValue, inputType, protocol,\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n            type: protocolKeys[protocol],\n        };\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        const newAPI = new API(additionalProperties);\n        const promisedResponse = inputType === 'file'\n            ? newAPI.importAsyncAPIByFile(inputValue) : newAPI.importAsyncAPIByUrl(inputValue);\n        promisedResponse\n            .then((api) => {\n                Alert.info('API created successfully');\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.heading'\n                            defaultMessage='Create an API using an AsyncAPI definition.'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.sub.heading'\n                            defaultMessage='Create an API using an existing AsyncAPI definition file or URL.'\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                <Stepper alternativeLabel activeStep={0}>\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.wizard.one'\n                                defaultMessage='Provide AsyncAPI'\n                            />\n                        </StepLabel>\n                    </Step>\n\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.wizard.two'\n                                defaultMessage='Create API'\n                            />\n                        </StepLabel>\n                    </Step>\n                </Stepper>\n            </Box>\n\n            <Grid container spacing={3}>\n                <Grid item xs={12} />\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    {wizardStep === 0 && (\n                        <ProvideAsyncAPI\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                            hideEndpoint={hideEndpoint}\n                            endpointPlaceholderText='Streaming Provider'\n                            appendChildrenBeforeEndpoint\n                        >\n                            <TextField\n                                fullWidth\n                                select\n                                label={(\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Create.asyncAPI.Components.SelectPolicies.business.plans'\n                                            defaultMessage='Protocol'\n                                        />\n                                        <sup className={classes.mandatoryStar}>*</sup>\n                                    </>\n                                )}\n                                value={apiInputs.protocol}\n                                name='protocol'\n                                SelectProps={{\n                                    multiple: false,\n                                    renderValue: (selected) => (selected),\n                                }}\n                                margin='normal'\n                                variant='outlined'\n                                InputProps={{\n                                    id: 'itest-id-apipolicies-input',\n                                }}\n                                onChange={handleOnChangeForProtocol}\n                            >\n                                {protocols.map((protocol) => (\n                                    <MenuItem\n                                        dense\n                                        disableGutters={false}\n                                        id={protocol.name}\n                                        key={protocol.name}\n                                        value={protocol.displayName}\n                                    >\n                                        <ListItemText primary={protocol.displayName} secondary={protocol.description} />\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </DefaultAPIForm>\n                    )}\n                </Grid>\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={() => setWizardStep((step) => step - 1)}>\n                                    Back\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                >\n                                    Create\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateAsyncAPI.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n        marginLeft: theme.spacing(0.1),\n    },\n}));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { InputAdornment, IconButton, Icon } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport green from '@material-ui/core/colors/green';\nimport APIValidation from 'AppData/APIValidation';\nimport API from 'AppData/api';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n        marginLeft: theme.spacing(0.1),\n    },\n    helperTextContext: {\n        '& p': {\n            textOverflow: 'ellipsis',\n            width: 400,\n            display: 'block',\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n        },\n    },\n    endpointValidChip: {\n        color: 'green',\n        border: '1px solid green',\n    },\n    endpointInvalidChip: {\n        color: '#ffd53a',\n        border: '1px solid #ffd53a',\n    },\n    endpointErrorChip: {\n        color: 'red',\n        border: '1px solid red',\n    },\n    iconButton: {\n        padding: theme.spacing(1),\n    },\n    iconButtonValid: {\n        padding: theme.spacing(1),\n        color: green[500],\n    },\n}));\n\n/**\n *\n * Return the actual API context that will be exposed in the gateway.\n * If the context value contains `{version}` placeholder text it will be replaced with the actual version value.\n * If there is no such placeholder text in the context, The version will be appended to the context\n * i:e /context/version\n * Parameter expect an object containing `context` and `version` properties.\n * @param {String} context API Context\n * @param {String} version API Version string\n * @returns {String} Derived actual context string\n */\nfunction actualContext({ context, version }) {\n    let initialContext = '{context}/{version}';\n    if (context) {\n        initialContext = context;\n        if (context.indexOf('{version}') < 0) {\n            initialContext = context + '/{version}';\n        }\n    }\n    if (version) {\n        initialContext = initialContext.replace('{version}', version);\n    }\n    return initialContext;\n}\n\n/**\n * This method used to  compare the context values\n * @param {*} value  input value\n * @param {*} result resulted value\n * @returns {Boolean} true or false\n */\nfunction checkContext(value, result) {\n    const contextVal = value.includes('/') ? value.toLowerCase() : '/' + value.toLowerCase();\n    if (contextVal === '/' + result.toLowerCase().slice(result.toLowerCase().lastIndexOf('/') + 1)\n     || contextVal === result.toLowerCase()) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Improved API create default form\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DefaultAPIForm(props) {\n    const {\n        onChange, onValidate, api, isAPIProduct, isWebSocket, children, appendChildrenBeforeEndpoint, hideEndpoint,\n    } = props;\n    const classes = useStyles();\n    const [validity, setValidity] = useState({});\n    const [isEndpointValid, setIsEndpointValid] = useState();\n    const [statusCode, setStatusCode] = useState('');\n    const [isUpdating, setUpdating] = useState(false);\n    const [isErrorCode, setIsErrorCode] = useState(false);\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n\n    // Check the provided API validity on mount, TODO: Better to use Joi schema here ~tmkb\n    useEffect(() => {\n        onValidate(Boolean(api.name)\n                && (isAPIProduct || Boolean(api.version))\n                && Boolean(api.context));\n    }, []);\n\n    const updateValidity = (newState) => {\n        let isFormValid = Object.entries(newState).length > 0\n            && Object.entries(newState)\n                .map(([, value]) => value === null || value === undefined)\n                .reduce((acc, cVal) => acc && cVal); // Aggregate the individual validation states\n        // TODO: refactor following redundant validation.\n        // The valid state should available in the above reduced state ~tmkb\n        // if isAPIProduct gets true version validation has been skipped\n        isFormValid = isFormValid\n            && Boolean(api.name)\n            && (isAPIProduct || Boolean(api.version))\n            && Boolean(api.context);\n        onValidate(isFormValid, validity);\n        setValidity(newState);\n    };\n    /**\n     * Trigger the provided onValidate call back on each input validation run\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {string} field The input field.\n     * @param {string} value Validation state object\n     */\n    function validate(field, value) {\n        switch (field) {\n            case 'name': {\n                const nameValidity = APIValidation.apiName.required().validate(value, { abortEarly: false }).error;\n                if (nameValidity === null) {\n                    APIValidation.apiParameter.validate(field + ':' + value).then((result) => {\n                        if (result.body.list.length > 0 && value.toLowerCase() === result.body.list[0]\n                            .name.toLowerCase()) {\n                            updateValidity({\n                                ...validity,\n                                name: { details: [{ message: 'Name ' + value + ' already exists' }] },\n                            });\n                        } else {\n                            updateValidity({ ...validity, name: nameValidity });\n                        }\n                    });\n                } else {\n                    updateValidity({ ...validity, name: nameValidity });\n                }\n                break;\n            }\n            case 'context': {\n                const contextValidity = APIValidation.apiContext.required().validate(value, { abortEarly: false })\n                    .error;\n                const apiContext = value.includes('/') ? value : '/' + value;\n                if (contextValidity === null) {\n                    APIValidation.apiParameter.validate(field + ':' + apiContext).then((result) => {\n                        if (result.body.list.length > 0 && checkContext(value, result.body.list[0].context)) {\n                            updateValidity({\n                                ...validity,\n                                context: { details: [{ message: apiContext + ' context already exists' }] },\n                            });\n                        } else {\n                            updateValidity({ ...validity, context: contextValidity, version: null });\n                        }\n                    });\n                } else {\n                    updateValidity({ ...validity, context: contextValidity });\n                }\n                break;\n            }\n            case 'version': {\n                const versionValidity = APIValidation.apiVersion.required().validate(value).error;\n                if (versionValidity === null) {\n                    const apiVersion = api.context.includes('/') ? api.context + '/' + value : '/'\n                    + api.context + '/' + value;\n                    APIValidation.apiParameter.validate('context:' + api.context\n                    + '/' + value).then((result) => {\n                        // version of APIProduct equals to 1.0.0\n                        if (result.body.list.length > 0 && (\n                            (result.body.list[0].version !== undefined\n                            && (result.body.list[0].version.toLowerCase()\n                                === value.toLowerCase())) || value === '1.0.0')) {\n                            updateValidity({\n                                ...validity,\n                                version: { message: apiVersion + ' context with version already exists' },\n                            });\n                        } else {\n                            updateValidity({ ...validity, version: versionValidity });\n                        }\n                    });\n                } else {\n                    updateValidity({ ...validity, version: versionValidity });\n                }\n                break;\n            }\n            case 'endpoint': {\n                if (isWebSocket && value && value.length > 0) {\n                    const wsUrlValidity = APIValidation.wsUrl.validate(value).error;\n                    updateValidity({ ...validity, endpointURL: wsUrlValidity });\n                }\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n    }\n\n    function testEndpoint(endpoint) {\n        setUpdating(true);\n        const restApi = new API();\n        restApi.testEndpoint(endpoint)\n            .then((result) => {\n                if (result.body.error !== null) {\n                    setStatusCode(result.body.error);\n                    setIsErrorCode(true);\n                } else {\n                    setStatusCode(result.body.statusCode + ' ' + result.body.statusMessage);\n                    setIsErrorCode(false);\n                }\n                if (result.body.statusCode >= 200 && result.body.statusCode < 300) {\n                    setIsEndpointValid(true);\n                    setIsErrorCode(false);\n                } else {\n                    setIsEndpointValid(false);\n                }\n            }).finally(() => {\n                setUpdating(false);\n            });\n    }\n\n    return (\n        <Grid item md={11}>\n            <form noValidate autoComplete='off'>\n                <TextField\n                    autoFocus\n                    fullWidth\n                    id='outlined-name'\n                    error={validity.name}\n                    label={(\n                        <>\n                            <FormattedMessage id='Apis.Create.Components.DefaultAPIForm.name' defaultMessage='Name' />\n                            <sup className={classes.mandatoryStar}>*</sup>\n                        </>\n                    )}\n                    helperText={\n                        validity.name\n                        && validity.name.details.map((detail, index) => {\n                            return <div style={{ marginTop: index !== 0 && '10px' }}>{detail.message}</div>;\n                        })\n                    }\n                    value={api.name}\n                    name='name'\n                    onChange={onChange}\n                    InputProps={{\n                        id: 'itest-id-apiname-input',\n                        onBlur: ({ target: { value } }) => {\n                            validate('name', value);\n                        },\n                    }}\n                    margin='normal'\n                    variant='outlined'\n                />\n                <Grid container spacing={2}>\n                    {!isAPIProduct ? (\n                        <>\n                            <Grid item md={8} xs={6}>\n                                <TextField\n                                    fullWidth\n                                    id='outlined-name'\n                                    error={validity.context}\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Create.Components.DefaultAPIForm.api.context'\n                                                defaultMessage='Context'\n                                            />\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    name='context'\n                                    value={api.context}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        id: 'itest-id-apicontext-input',\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('context', value);\n                                        },\n                                    }}\n                                    helperText={\n                                        (validity.context\n                                            && validity.context.details.map((detail, index) => {\n                                                return (\n                                                    <div style={{ marginTop: index !== 0 && '10px' }}>\n                                                        {detail.message}\n                                                    </div>\n                                                );\n                                            }))\n                                        || `API will be exposed in ${actualContext(api)} context at the gateway`\n                                    }\n                                    classes={{ root: classes.helperTextContext }}\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                            <Grid item md={4} xs={6}>\n                                <TextField\n                                    fullWidth\n                                    error={validity.version}\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Create.Components.DefaultAPIForm.version'\n                                                defaultMessage='Version'\n                                            />\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    name='version'\n                                    value={api.version}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        id: 'itest-id-apiversion-input',\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('version', value);\n                                        },\n                                    }}\n                                    helperText={validity.version && validity.version.message}\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                        </>\n                    ) : (\n                        <>\n                            <Grid item md={12}>\n                                <TextField\n                                    fullWidth\n                                    id='outlined-name'\n                                    error={validity.context}\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Create.Components.DefaultAPIForm.api.product.context'\n                                                defaultMessage='Context'\n                                            />\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    name='context'\n                                    value={api.context}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('context', value);\n                                        },\n                                    }}\n                                    helperText={\n                                        (validity.context\n                                            && validity.context.details.map((detail, index) => {\n                                                return (\n                                                    <div style={{ marginTop: index !== 0 && '10px' }}>\n                                                        {detail.message}\n                                                    </div>\n                                                );\n                                            }))\n                                        || `API Product will be exposed in ${actualContext(api)} context at the gateway`\n                                    }\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                        </>\n                    )}\n                </Grid>\n                {appendChildrenBeforeEndpoint && !!children && children}\n                {!isAPIProduct && !hideEndpoint && (\n                    <TextField\n                        fullWidth\n                        id='itest-id-apiendpoint-input'\n                        label='Endpoint'\n                        name='endpoint'\n                        value={api.endpoint}\n                        onChange={onChange}\n                        helperText={\n                            (validity.endpointURL\n                                && validity.endpointURL.details.map((detail, index) => {\n                                    return (\n                                        <div style={{ marginTop: index !== 0 && '10px' }}>\n                                            {detail.message}\n                                        </div>\n                                    );\n                                }))\n                        }\n                        error={validity.endpointURL}\n                        margin='normal'\n                        variant='outlined'\n                        InputProps={{\n                            onBlur: ({ target: { value } }) => {\n                                validate('endpoint', value);\n                            },\n                            endAdornment: (\n                                <InputAdornment position='end'>\n                                    {statusCode && (\n                                        <Chip\n                                            label={statusCode}\n                                            className={isEndpointValid ? classes.endpointValidChip : iff(\n                                                isErrorCode,\n                                                classes.endpointErrorChip, classes.endpointInvalidChip,\n                                            )}\n                                            variant='outlined'\n                                        />\n                                    )}\n                                    {!isWebSocket && (\n                                        <IconButton\n                                            className={isEndpointValid ? classes.iconButtonValid : classes.iconButton}\n                                            aria-label='TestEndpoint'\n                                            onClick={() => testEndpoint(api.endpoint)}\n                                            disabled={isUpdating}\n                                        >\n                                            {isUpdating\n                                                ? <CircularProgress size={20} />\n                                                : (\n                                                    <Icon>\n                                                        check_circle\n                                                    </Icon>\n                                                )}\n                                        </IconButton>\n                                    )}\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                )}\n\n                {!appendChildrenBeforeEndpoint && !!children && children}\n            </form>\n            <Grid container direction='row' justify='flex-end' alignItems='center'>\n                <Grid item>\n                    <Typography variant='caption' display='block' gutterBottom>\n                        <sup style={{ color: 'red' }}>*</sup>\n                        {' '}\n                        Mandatory fields\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nDefaultAPIForm.defaultProps = {\n    onValidate: () => {},\n    api: {}, // Uncontrolled component\n    isWebSocket: false,\n};\nDefaultAPIForm.propTypes = {\n    api: PropTypes.shape({}),\n    isAPIProduct: PropTypes.shape({}).isRequired,\n    isWebSocket: PropTypes.shape({}),\n    onChange: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n/**\n * Base component for all API create forms\n *\n * @param {Object} props title and children components are expected\n * @returns {React.Component} Base element\n */\nexport default function APICreateBase(props) {\n    const { title, children } = props;\n    return (\n        <Grid container spacing={3}>\n            <Grid item xs={12} />\n            {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n            <Grid item sm={0} md={3} />\n            <Grid item sm={12} md={6}>\n                <Grid container spacing={5}>\n                    <Grid item md={12}>\n                        {title}\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Paper elevation={0}>{children}</Paper>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\nAPICreateBase.propTypes = {\n    title: PropTypes.element.isRequired,\n    children: PropTypes.element.isRequired,\n};\n"],"sourceRoot":""}