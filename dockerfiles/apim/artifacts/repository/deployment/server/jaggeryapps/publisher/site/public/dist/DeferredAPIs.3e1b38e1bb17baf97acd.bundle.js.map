{"version":3,"sources":["webpack:///./source/src/app/data/ScopeValidation.jsx","webpack:///./source/src/app/components/Shared/MuiAlert.jsx","webpack:///./source/src/app/components/Apis/Details/components/DeleteApiButton.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/BaseThumbnail.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/ImageGenerator.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/Background.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/APICards/ImageUtils.js","webpack:///./node_modules/@material-ui/icons/Link.js","webpack:///./source/src/app/components/Apis/Listing/Landing/Menus/RestAPIMenu.jsx","webpack:///./node_modules/@material-ui/icons/ReportProblemOutlined.js","webpack:///./source/src/app/components/Apis/Listing/Landing/Menus/SoapAPIMenu.jsx","webpack:///./source/src/app/components/Apis/Listing/Landing/Menus/GraphqlAPIMenu.jsx","webpack:///./source/src/app/components/Apis/Listing/Landing/Menus/StreamingAPIMenu.jsx","webpack:///./source/src/app/components/Apis/Apis.jsx","webpack:///./source/src/app/components/Apis/Listing/Listing.jsx","webpack:///./source/src/app/components/Apis/Listing/TableView/TableView.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/ApiThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/APICards/ApiThumbClassic.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/APICards/APIThumbPlain.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/DocThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/APICards/DocThumbClassic.jsx","webpack:///./node_modules/@material-ui/icons/TextFields.js","webpack:///./node_modules/@material-ui/icons/PictureAsPdf.js","webpack:///./node_modules/@material-ui/icons/DescriptionTwoTone.js","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/APICards/DocThumbPlain.jsx","webpack:///./source/src/app/components/Apis/Listing/Landing/index.jsx","webpack:///./source/src/app/components/Apis/Listing/SampleAPI/SampleAPI.jsx","webpack:///./source/src/app/components/Apis/Listing/SampleAPI/components/TaskState.jsx","webpack:///./node_modules/@material-ui/icons/CheckCircleOutlineOutlined.js","webpack:///./node_modules/@material-ui/icons/ErrorOutlineOutlined.js","webpack:///./node_modules/@material-ui/icons/MoreHoriz.js","webpack:///./source/src/app/components/Apis/Listing/components/TopMenu.jsx","webpack:///./source/src/app/components/Apis/Listing/components/APICreateMenu.jsx","webpack:///./source/src/app/components/Apis/Listing/Landing/Menus/ServiceCatalogMenu.jsx","webpack:///./source/src/app/components/Shared/MenuButton.jsx","webpack:///./source/src/app/components/Apis/Listing/SampleAPI/SampleAPIProduct.jsx","webpack:///./source/src/app/data/APIProduct.js","webpack:///./node_modules/@material-ui/icons/Edit.js","webpack:///./source/src/app/components/Apis/Listing/Landing/components/LandingMenuItem.jsx","webpack:///./source/src/app/components/Apis/Listing/Landing/components/LandingMenu.jsx","webpack:///./source/src/app/components/Apis/Listing/components/APICreateMenuSection.jsx"],"names":["resourcePath","APIS","API_PRODUCTS","SINGLE_API","SINGLE_API_PRODUCT","API_SWAGGER","API_WSDL","API_GW_CONFIG","API_THUMBNAIL","API_COPY","API_LC_HISTORY","API_CHANGE_LC","API_LC","API_LC_PENDING_TASK","API_DEF","API_VALIDATE_DEF","API_DOCS","API_DOC","API_DOC_CONTENT","EXPORT_APIS","IMPORT_APIS","SUBSCRIPTION","SUBSCRIPTIONS","BLOCK_SUBSCRIPTION","UNBLOCK_SUBSCRIPTION","POLICIES","POLICY","ENDPOINTS","ENDPOINT","LABLES","WORKFLOW","SERVICE_DISCOVERY","SERVICES","SINGLE_SERVICE","SINGLE_SERVICE_DEFINITION","IMPORT_SERVICE","EXPORT_SERVICE","resourceMethod","POST","PUT","GET","DELETE","HEAD","ScopeValidation","props","state","this","currentResourcePath","currentResourceMethod","hasScopes","then","haveScope","setState","children","userScopes","AuthManager","getUser","scopes","APIClient","getScopeForResource","scope","includes","React","Component","propTypes","PropTypes","node","isRequired","string","styles","theme","getColor","palette","type","darken","lighten","getBackgroundColor","root","typography","body2","borderRadius","shape","backgroundColor","display","padding","standardSuccess","color","success","main","standardInfo","info","standardWarning","warning","standardError","error","outlinedSuccess","border","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","fontWeight","fontWeightMedium","filledInfo","filledWarning","filledError","icon","marginRight","fontSize","opacity","message","action","alignItems","marginLeft","paddingLeft","plainWaiting","text","secondary","plainSuccess","plainInfo","plainWarning","plainError","defaultIconMapping","waiting","Alert","ref","classes","className","closeText","iconMapping","onClose","role","severity","variant","other","square","elevation","clsx","capitalize","size","aria-label","title","onClick","withStyles","name","height","background","paper","borderBottom","grey","A200","backLink","textDecoration","backIcon","primary","cursor","backText","fontFamily","deleteWrapper","flex","justifyContent","paddingRight","spacing","delete","custom","apis","listing","deleteButtonColor","flexDirection","textAlign","linkText","inlineBlock","flexBox","DeleteApiButton","handleApiDelete","bind","handleRequestClose","handleRequestOpen","openMenu","api","id","setLoading","updateData","isAPIProduct","history","API","deleteProduct","response","status","push","catch","body","description","apiType","CONSTS","APIProduct","version","deleteHandler","path","classNames","onKeyDown","disabled","isRestricted","disableFocusRipple","disableRipple","defaultMessage","open","values","b","msg","dense","defaultProps","func","bool","withRouter","withTheme","useStyles","makeStyles","suppressLinkStyles","thumbButton","position","left","right","top","bottom","thumbBackdrop","common","black","thumb","zIndex","media","objectFit","windowURL","window","URL","webkitURL","BaseThumbnail","width","thumbnailPop","thumbnail","selectedIconProp","selectedIcon","colorProp","backgroundIndexProp","backgroundIndex","categoryProp","category","isEditable","imageUpdate","useState","iconJson","setIconJson","key","setThumbnail","imageLoaded","setImageLoaded","useTheme","thumbnailTemplates","useEffect","hasThumbnail","Api","getAPIProductThumbnail","getAPIThumbnail","data","headers","blob","Blob","url","createObjectURL","finally","overviewPath","apiUUID","view","artifact","fixedIcon","focusRipple","src","alt","component","to","number","iconWrapper","ImageGenerator","colorPair","str","colorPairs","backgrounds","iconElement","getIcon","document","length","charCodeAt","style","active","PureComponent","iconSettings","svgImage","aHexToOpacity","aHex","substring","getColorWithoutAlpha","Background","thumbnailBoxChild","rects","i","j","sub","toString","fill","fillOpacity","x","y","primeColor","prime","_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","d","RestAPIMenu","isCreateMenu","APICreateMenuSection","LandingMenu","alwaysShowDeploySampleButton","Configurations","showSampleDeploy","setShowSampleDeploy","composeQueryJSON","queryString","parse","limit","offset","search","resp","JSON","count","linkTo","helperText","light","SoapAPIMenu","openList","GraphqlAPIMenu","StreamingAPIMenu","Details","lazy","DeferredDetails","fallback","per","APICreateRoutes","DeferredAPICreateRoutes","Apis","exact","Date","now","render","isNotPublisher","content","flexGrow","Listing","location","query","contentInside","paddingTop","boxShadow","apiNameLink","TableView","listType","totalCount","themeAdditions","muiTheme","overrides","MUIDataTable","tableRoot","MUIDataTableBodyCell","flexWrap","MuiTableBody","assign","createMuiTheme","rowsPerPage","page","intl","loading","xhrRequest","list","total","pagination","apisAndApiProducts","notFound","formatMessage","localStorage","setItem","composeQuery","all","defaultApiView","showToggle","getItem","setListType","getData","userRowsPerPage","parseInt","prevProps","newPage","columns","options","filter","label","customBodyRender","tableMeta","updateValue","tableViewObj","rowData","rowIndex","apiName","apiId","strokeColor","sort","filterType","responsive","serverSide","onChangePage","changePage","selectableRows","onChangeRowsPerPage","newNumberOfRows","textLabels","customRowRender","dataIndex","doc","print","download","viewColumns","customToolbar","getMuiTheme","injectIntl","APIThumb","card","margin","maxWidth","transition","providerText","textTransform","apiDetails","apiActions","deleteProgress","green","thumbHeader","whiteSpace","overflow","textOverflow","imageWrapper","thumbContent","thumbLeft","alignSelf","thumbRight","thumbInfo","contextBox","lineHeight","imageOverlap","contentBackgroundColor","row","textWrapper","thumbBy","thumbRightBy","thumbRightByLabel","isHover","toggleMouseOver","loadingState","event","lifeCycleStatus","onMouseOver","onFocus","onMouseOut","onBlur","gutterBottom","align","provider","context","transportType","undefined","minWidth","marginTop","marginBottom","bullet","transform","pos","caption","imageDisplay","maxHeight","APIThumbPlain","ImageView","showInfo","imageConf","setImageConf","imageObj","setIMageObj","aria-hidden","defaultApiImage","app","mt","DocThumb","thumbIcon","setIsHover","PrefixIcon","TextFieldsIcon","sourceType","PictureAsPdfIcon","DescriptionTwoToneIcon","LinkIcon","underline","RouterLink","LetterGenerator","charLength","ThumbIcon","bgColor","container","direction","justify","item","ml","associatedType","apiVersion","Fragment","DocThumbPlain","APILanding","isXsOrBelow","useMediaQuery","breakpoints","down","landingPage","icons","graphqlIcon","restApiIcon","soapApiIcon","streamingApiIcon","xs","pt","md","pb","mx","modal","statusBox","outline","initialTaskStates","create","inProgress","completed","errors","update","revision","deploy","publish","tasksReducer","SampleAPI","useReducer","tasksStatus","tasksStatusDispatcher","showStatus","setShowStatus","newSampleAPI","setNewSampleAPI","publisherSettings","usePublisherSettings","taskManager","promisedTask","taskResult","console","handleDeploySample","restApi","sampleAPIObj","getSampleAPIData","save","sampleAPI","updateSwagger","getSampleOpenAPI","revisionPayload","createRevision","sampleAPIRevision","envList","environment","map","env","deployRevisionPayload","getFirstVhost","envName","find","ev","vhosts","host","displayOnDevportal","vhost","revisionId","deployRevision","allDone","tasks","reduce","done","current","anyErrors","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","in","bgcolor","p","completedMessage","inProgressMessage","TaskState","code","lg","thickness","button","mainTitleWrapper","APICreateMenu","getTitleForArtifactType","isSingular","TopMenu","mainTitle","px","mb","m","arrayOf","object","dividerCls","popover","up","isNotCreator","buttonProps","menuList","orientation","ServiceCatalogMenu","apiCreateMenu","MenuButton","handleToggle","handleClose","anchorEl","currentTarget","contains","target","aria-owns","aria-haspopup","placement","disablePortal","modifiers","flip","enabled","preventOverflow","boundariesElement","TransitionProps","transformOrigin","onClickAway","element","apiproductAddIcon","subTitle","iconName","kwargs","properties","isDefaultVersion","transport","visibility","endpointConfig","endpoint_type","sandbox_endpoints","production_endpoints","_data","prototype","hasOwnProperty","call","getType","Resource","_requestMetaData","client","getSettings","promiseMonetization","getAPIMonetization","addAPIMonetization","promisePolicies","getAPISubscriptionPolicies","promiseInvoice","getSubscriptionUsage","subscriptionId","spec","components","schemas","keys","forEach","apiAttribute","requestBody","createAPIProduct","apiData","payload","resource","userExcludes","copy","excludes","prop","updatedProperties","updatedAPI","toJSON","apiProductId","updateAPIProduct","imageFile","updateAPIProductThumbnail","file","addAPIProductDocument","promisedDocuments","getAPIProductDocuments","productId","docId","documentId","updateAPIProductDocument","getAPIProductDocument","inlineContent","addAPIProductDocumentContent","getAPIProductDocumentContent","deleteAPIProductDocument","fileToDocument","getAPIProductRevisions","createAPIProductRevision","deleteAPIProductRevision","exportAPIProduct","undeployAPIProductRevision","deployAPIProductRevision","restoreAPIProductRevision","deploymentId","APIClientFactory","getAPIClient","Utils","getCurrentEnvironment","CONST","API_CLIENT","updateAPIProductDeployment","swagger","apiDefinition","stringify","put_api_products__apiProductId__swagger","promiseGet","getAPIProductSwagger","getAPIProduct","params","entries","getAllAPIProducts","obj","deleteAPIProduct","linkRoot","menu","LandingMenuItem","toLowerCase","boxTransition","overlayBox","overlayCloseButton","float","isCollapsed","setIsCollapsed","isFadeOut","setIsFadeOut","sm","borderColor","minHeight","blue","e","preventDefault","stopPropagation","onExited","enter","exit"],"mappings":"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","file":"DeferredAPIs.3e1b38e1bb17baf97acd.bundle.js","sourcesContent":["/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* TODO: Move this file to components/Shared/ location ~tmkb */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport APIClient from 'AppData/APIClient';\nimport AuthManager from 'AppData/AuthManager';\n\nconst resourcePath = {\n    APIS: '/apis',\n    API_PRODUCTS: '/api-products',\n    SINGLE_API: '/apis/{apiId}',\n    SINGLE_API_PRODUCT: '/api-products/{apiProductId}',\n    API_SWAGGER: '/apis/{apiId}/swagger',\n    API_WSDL: '/apis/{apiId}/wsdl',\n    API_GW_CONFIG: '/apis/{apiId}/gateway-config',\n    API_THUMBNAIL: '/apis/{apiId}/thumbnail',\n    API_COPY: '/apis/copy-api',\n    API_LC_HISTORY: '/apis/{apiId}/lifecycle-history',\n    API_CHANGE_LC: '/apis/change-lifecycle',\n    API_LC: '/apis/{apiId}/lifecycle',\n    API_LC_PENDING_TASK: '/apis/{apiId}/lifecycle/lifecycle-pending-task',\n    API_DEF: '/apis/import-definition',\n    API_VALIDATE_DEF: '/apis/validate-definition',\n    API_DOCS: '/apis/{apiId}/documents',\n    API_DOC: \"'/apis/{apiId}/documents/{documentId}'\",\n    API_DOC_CONTENT: \"'/apis/{apiId}/documents/{documentId}/content'\",\n    EXPORT_APIS: '/export/apis',\n    IMPORT_APIS: '/import/apis',\n    SUBSCRIPTION: '/subscriptions',\n    SUBSCRIPTIONS: '/subscriptions',\n    BLOCK_SUBSCRIPTION: '/subscriptions/block-subscription',\n    UNBLOCK_SUBSCRIPTION: '/subscriptions/unblock-subscription',\n    POLICIES: \"'/policies/{tierLevel}'\",\n    POLICY: \"'/policies/{tierLevel}/{tierName}'\",\n    ENDPOINTS: '/endpoints',\n    ENDPOINT: '/endpoints/{endpointId}',\n    LABLES: '/labels',\n    WORKFLOW: '/workflows/{workflowReferenceId}',\n    SERVICE_DISCOVERY: '/external-resources/services',\n    SERVICES: '/services',\n    SINGLE_SERVICE: '/services/{serviceId}',\n    SINGLE_SERVICE_DEFINITION: '/services/{serviceId}/definition',\n    IMPORT_SERVICE: '/services/import',\n    EXPORT_SERVICE: '/services/export',\n};\n\nconst resourceMethod = {\n    POST: 'post',\n    PUT: 'put',\n    GET: 'get',\n    DELETE: 'delete',\n    HEAD: 'head',\n};\n\n/**\n * Show element iff user has proper scope for the view/action\n * @class ScopeValidation\n * @extends {React.Component}\n */\nexport default class ScopeValidation extends React.Component {\n    /**\n     *\n     * Get scope for resources\n     * @static\n     * @param {String} resourcePath\n     * @param {String} resourceMethod\n     * @returns Boolean\n     * @memberof AuthManager\n     */\n    static hasScopes(currentResourcePath, currentResourceMethod) {\n        const userScopes = AuthManager.getUser().scopes;\n        const validScope = APIClient.getScopeForResource(currentResourcePath, currentResourceMethod);\n        return validScope.then((scopes) => {\n            for (const scope of scopes) {\n                if (userScopes.includes(scope)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    }\n\n    /**\n     * Creates an instance of ScopeValidation.\n     * @param {any} props @inheritDoc\n     * @memberof ScopeValidation\n     */\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    /**\n     * @inheritDoc\n     * @memberof ScopeValidation\n     */\n    componentDidMount() {\n        const { resourcePath: currentResourcePath, resourceMethod: currentResourceMethod } = this.props;\n        const hasScope = ScopeValidation.hasScopes(currentResourcePath, currentResourceMethod);\n        hasScope.then((haveScope) => {\n            this.setState({ haveScope });\n        });\n    }\n\n    /**\n     * @inheritDoc\n     * @returns {React.Component} Return react component\n     * @memberof ScopeValidation\n     */\n    render() {\n        const { children } = this.props;\n        const { haveScope } = this.state;\n        if (haveScope) {\n            return children || null;\n        }\n        return null;\n    }\n}\n\nScopeValidation.propTypes = {\n    children: PropTypes.node.isRequired,\n    resourcePath: PropTypes.string.isRequired,\n    resourceMethod: PropTypes.string.isRequired,\n};\n\nexport { ScopeValidation, resourceMethod, resourcePath };\n","/**\n * Note: This component was taken from MUI Lab until it's moved to core components and we migrate to 5.x\n * https://github.com/mui-org/material-ui/tree/master/packages/material-ui-lab/src/Alert\n * For component documentation see https://material-ui.com/components/alert\n * `outlinedWaiting` Style added separately\n */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nimport SuccessOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutlineOutlined';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport CloseIcon from '@material-ui/icons/Close';\n\nexport const styles = (theme) => {\n    const getColor = theme.palette.type === 'light' ? darken : lighten;\n    const getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n\n    return {\n        /* Styles applied to the root element. */\n        root: {\n            ...theme.typography.body2,\n            borderRadius: theme.shape.borderRadius,\n            backgroundColor: 'transparent',\n            display: 'flex',\n            padding: '6px 16px',\n        },\n        /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n        standardSuccess: {\n            color: getColor(theme.palette.success.main, 0.6),\n            backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n            '& $icon': {\n                color: theme.palette.success.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n        standardInfo: {\n            color: getColor(theme.palette.info.main, 0.6),\n            backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n            '& $icon': {\n                color: theme.palette.info.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n        standardWarning: {\n            color: getColor(theme.palette.warning.main, 0.6),\n            backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n            '& $icon': {\n                color: theme.palette.warning.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n        standardError: {\n            color: getColor(theme.palette.error.main, 0.6),\n            backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n            '& $icon': {\n                color: theme.palette.error.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n        outlinedSuccess: {\n            color: getColor(theme.palette.success.main, 0.6),\n            border: `1px solid ${theme.palette.success.main}`,\n            '& $icon': {\n                color: theme.palette.success.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n        outlinedInfo: {\n            color: getColor(theme.palette.info.main, 0.6),\n            border: `1px solid ${theme.palette.info.main}`,\n            '& $icon': {\n                color: theme.palette.info.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n        outlinedWarning: {\n            color: getColor(theme.palette.warning.main, 0.6),\n            border: `1px solid ${theme.palette.warning.main}`,\n            '& $icon': {\n                color: theme.palette.warning.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n        outlinedError: {\n            color: getColor(theme.palette.error.main, 0.6),\n            border: `1px solid ${theme.palette.error.main}`,\n            '& $icon': {\n                color: theme.palette.error.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n        filledSuccess: {\n            color: '#fff',\n            fontWeight: theme.typography.fontWeightMedium,\n            backgroundColor: theme.palette.success.main,\n        },\n        /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n        filledInfo: {\n            color: '#fff',\n            fontWeight: theme.typography.fontWeightMedium,\n            backgroundColor: theme.palette.info.main,\n        },\n        /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n        filledWarning: {\n            color: '#fff',\n            fontWeight: theme.typography.fontWeightMedium,\n            backgroundColor: theme.palette.warning.main,\n        },\n        /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n        filledError: {\n            color: '#fff',\n            fontWeight: theme.typography.fontWeightMedium,\n            backgroundColor: theme.palette.error.main,\n        },\n        /* Styles applied to the icon wrapper element. */\n        icon: {\n            marginRight: 12,\n            padding: '7px 0',\n            display: 'flex',\n            fontSize: 22,\n            opacity: 0.9,\n        },\n        /* Styles applied to the message wrapper element. */\n        message: {\n            padding: '8px 0',\n        },\n        /* Styles applied to the action wrapper element if `action` is provided. */\n        action: {\n            display: 'flex',\n            alignItems: 'center',\n            marginLeft: 'auto',\n            paddingLeft: 16,\n            marginRight: -8,\n        },\n        plainWaiting: {\n            color: getColor(theme.palette.text.secondary, 0.6),\n            '& $icon': {\n                color: theme.palette.text.secondary,\n            },\n        },\n        plainSuccess: {\n            color: getColor(theme.palette.success.main, 0.6),\n            '& $icon': {\n                color: theme.palette.success.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n        plainInfo: {\n            color: getColor(theme.palette.info.main, 0.6),\n            '& $icon': {\n                color: theme.palette.info.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n        plainWarning: {\n            color: getColor(theme.palette.warning.main, 0.6),\n            '& $icon': {\n                color: theme.palette.warning.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n        plainError: {\n            color: getColor(theme.palette.error.main, 0.6),\n            '& $icon': {\n                color: theme.palette.error.main,\n            },\n        },\n    };\n};\n\nconst defaultIconMapping = {\n    success: <SuccessOutlinedIcon fontSize='inherit' />,\n    warning: <ReportProblemOutlinedIcon fontSize='inherit' />,\n    error: <ErrorOutlineIcon fontSize='inherit' />,\n    info: <InfoOutlinedIcon fontSize='inherit' />,\n    waiting: <MoreHorizIcon fontSize='inherit' />,\n};\n\nconst Alert = React.forwardRef((props, ref) => {\n    const {\n        action,\n        children,\n        classes,\n        className,\n        closeText = 'Close',\n        color,\n        icon,\n        iconMapping = defaultIconMapping,\n        onClose,\n        role = 'alert',\n        severity = 'success',\n        variant = 'standard',\n        ...other\n    } = props;\n\n    return (\n        <Paper\n            role={role}\n            square\n            elevation={0}\n            className={clsx(\n                classes.root,\n                classes[`${variant}${capitalize(color || severity)}`],\n                className,\n            )}\n            ref={ref}\n            {...other}\n        >\n            {icon !== false ? (\n                <div className={classes.icon}>\n                    {icon || iconMapping[severity] || defaultIconMapping[severity]}\n                </div>\n            ) : null}\n            <div className={classes.message}>{children}</div>\n            {action != null ? <div className={classes.action}>{action}</div> : null}\n            {action == null && onClose ? (\n                <div className={classes.action}>\n                    <IconButton\n                        size='small'\n                        aria-label={closeText}\n                        title={closeText}\n                        color='inherit'\n                        onClick={onClose}\n                    >\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n            ) : null}\n        </Paper>\n    );\n});\nexport default withStyles(styles, { name: 'MuiAlert' })(Alert);\n","import React from 'react';\n\nimport {\n    Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n} from '@material-ui/core/';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport API from 'AppData/api';\nimport { resourceMethod, resourcePath, ScopeValidation } from 'AppData/ScopeValidation';\nimport Alert from 'AppComponents/Shared/Alert';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst styles = (theme) => ({\n    root: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    backLink: {\n        alignItems: 'center',\n        textDecoration: 'none',\n        display: 'flex',\n    },\n    backIcon: {\n        color: theme.palette.primary.main,\n        fontSize: 56,\n        cursor: 'pointer',\n    },\n    backText: {\n        color: theme.palette.primary.main,\n        cursor: 'pointer',\n        fontFamily: theme.typography.fontFamily,\n    },\n    deleteWrapper: {\n        flex: 0,\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: theme.spacing(2),\n    },\n    delete: {\n        color: theme.custom.apis.listing.deleteButtonColor,\n        cursor: 'pointer',\n        padding: theme.spacing(0.4),\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'center',\n        justifyContent: 'center',\n    },\n    linkText: {\n        fontSize: theme.typography.fontSize,\n    },\n    inlineBlock: {\n        display: 'inline-block',\n        paddingRight: 10,\n    },\n    flexBox: {\n        display: 'flex',\n        paddingRight: 10,\n    },\n});\n\n/**\n * Handle Delete an API from API Overview/Details page\n *\n * @class DeleteApiButton\n * @extends {React.Component}\n */\nclass DeleteApiButton extends React.Component {\n    /**\n     *Creates an instance of DeleteApiButton.\n     * @param {*} props @inheritDoc\n     * @memberof DeleteApiButton\n     */\n    constructor(props) {\n        super(props);\n        this.handleApiDelete = this.handleApiDelete.bind(this);\n        this.handleRequestClose = this.handleRequestClose.bind(this);\n        this.handleRequestOpen = this.handleRequestOpen.bind(this);\n        this.state = { openMenu: false };\n    }\n\n    /**\n     * Handle Delete button close event\n     *\n     * @memberof DeleteApiButton\n     */\n    handleRequestClose() {\n        this.setState({ openMenu: false });\n    }\n\n    /**\n     * Handle Delete button onClick event\n     *\n     * @memberof DeleteApiButton\n     */\n    handleRequestOpen() {\n        this.setState({ openMenu: true });\n    }\n\n    /**\n     *\n     * Send API delete REST API request\n     * @param {*} e\n     * @memberof DeleteApiButton\n     */\n    handleApiDelete() {\n        const {\n            api: { id, name }, setLoading, updateData, isAPIProduct, history,\n        } = this.props;\n        if (isAPIProduct) {\n            const promisedDelete = API.deleteProduct(id);\n            promisedDelete\n                .then((response) => {\n                    if (response.status !== 200) {\n                        Alert.info('Something went wrong while deleting the API Product!');\n                        return;\n                    }\n                    Alert.info(`API Product ${name} deleted Successfully`);\n                    if (updateData) {\n                        updateData(id);\n                        setLoading(false);\n                    } else {\n                        history.push('/api-products');\n                    }\n                })\n                .catch((error) => {\n                    if (error.status === 409) {\n                        Alert.error('[ ' + name + ' ] : ' + error.response.body.description);\n                    } else {\n                        Alert.error('Something went wrong while deleting the API Product!');\n                    }\n                    setLoading(false);\n                });\n        } else {\n            const promisedDelete = API.delete(id);\n            promisedDelete\n                .then((response) => {\n                    if (response.status !== 200) {\n                        Alert.info('Something went wrong while deleting the API!');\n                        return;\n                    }\n                    Alert.info(`API ${name} deleted Successfully`);\n                    if (updateData) {\n                        updateData(id);\n                        setLoading(false);\n                    } else {\n                        history.push('/apis');\n                    }\n                })\n                .catch((error) => {\n                    if (error.status === 409) {\n                        Alert.error('[ ' + name + ' ] : ' + error.response.body.description);\n                    } else {\n                        Alert.error('Something went wrong while deleting the API!');\n                    }\n                    setLoading(false);\n                });\n        }\n    }\n\n    /**\n     *\n     * @inheritDoc\n     * @returns {React.Component} inherit docs\n     * @memberof DeleteApiButton\n     */\n    render() {\n        const {\n            api, onClick, classes, updateData,\n        } = this.props;\n        const type = api.apiType === API.CONSTS.APIProduct ? 'API Product ' : 'API ';\n        const version = api.apiType === API.CONSTS.APIProduct ? null : '-' + api.version;\n        const deleteHandler = onClick || this.handleApiDelete;\n\n        let path = resourcePath.SINGLE_API;\n\n        if (api.apiType === API.CONSTS.APIProduct) {\n            path = resourcePath.SINGLE_API_PRODUCT;\n        }\n\n        return (\n            <>\n                {/* allowing delete based on scopes */}\n                <ScopeValidation resourceMethod={resourceMethod.DELETE} resourcePath={path}>\n                    <Box\n                        className={classNames({ [classes.inlineBlock]: updateData, [classes.flexBox]: !updateData })}\n                    >\n                        {!updateData && (<VerticalDivider height={70} />)}\n                        <Box className={classes.delete}>\n                            <IconButton\n                                id='itest-id-deleteapi-icon-button'\n                                onClick={this.handleRequestOpen}\n                                onKeyDown={this.handleRequestOpen}\n                                className={classes.delete}\n                                disabled={isRestricted(['apim:api_delete'], api)}\n                                aria-label='delete'\n                                disableFocusRipple\n                                disableRipple\n                            >\n                                <DeleteIcon />\n                            </IconButton>\n                            <Box\n                                fontFamily='fontFamily'\n                                fontSize='caption.fontSize'\n                            >\n\n                                <FormattedMessage\n                                    id='Apis.Details.components.DeleteApiButton.delete'\n                                    defaultMessage='Delete'\n                                />\n\n                            </Box>\n                        </Box>\n                    </Box>\n                </ScopeValidation>\n                <Dialog open={this.state.openMenu}>\n                    <DialogTitle>\n                        <FormattedMessage\n                            id='Apis.Details.components.DeleteApiButton.title'\n                            defaultMessage='Delete {type}'\n                            values={{ type }}\n                        />\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            <FormattedMessage\n                                id='Apis.Details.components.DeleteApiButton.text.description'\n                                defaultMessage='{type} <b> {name} {version} </b> will be deleted permanently.'\n                                values={{\n                                    b: (msg) => <b>{msg}</b>,\n                                    type,\n                                    name: api.name,\n                                    version,\n                                }}\n                            />\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button dense onClick={this.handleRequestClose}>\n                            <FormattedMessage\n                                id='Apis.Details.components.DeleteApiButton.button.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                        <Button\n                            id='itest-id-deleteconf'\n                            onClick={() => {\n                                deleteHandler();\n                                this.handleRequestClose();\n                            }}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.components.DeleteApiButton.button.delete'\n                                defaultMessage='Delete'\n                            />\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nDeleteApiButton.defaultProps = {\n    setLoading: () => {},\n};\n\nDeleteApiButton.propTypes = {\n    api: PropTypes.shape({\n        delete: PropTypes.func,\n    }).isRequired,\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    setLoading: PropTypes.func,\n    updateData: PropTypes.func.isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n};\n\nexport default withRouter(withStyles(styles, { withTheme: true })(DeleteApiButton));\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTheme } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\n\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport ImageGenerator from './ImageGenerator';\nimport LetterGenerator from './LetterGenerator';\n\nconst useStyles = makeStyles((theme) => ({\n    suppressLinkStyles: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n    thumbButton: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        background: '#0002',\n        color: '#000',\n        padding: 50,\n        borderRadius: 5,\n    },\n    thumbBackdrop: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        backgroundColor: theme.palette.common.black,\n        opacity: 0.4,\n    },\n    thumb: {\n        '&:hover': {\n            zIndex: 1,\n            '& $thumbBackdrop': {\n                opacity: 0.2,\n            },\n        },\n    },\n    media: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n}));\n\nconst windowURL = window.URL || window.webkitURL;\n\nconst BaseThumbnail = (props) => {\n    const {\n        api, width, height, thumbnail: thumbnailPop,\n        selectedIcon: selectedIconProp,\n        color: colorProp,\n        backgroundIndex: backgroundIndexProp,\n        category: categoryProp,\n        isEditable,\n        onClick,\n        imageUpdate,\n    } = props;\n    const {\n        apiType, id, type,\n    } = api;\n    const classes = useStyles();\n    const [iconJson, setIconJson] = useState({});\n    const {\n        key,\n        color,\n        backgroundIndex,\n        category,\n    } = iconJson;\n    const [thumbnail, setThumbnail] = useState(null);\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const theme = useTheme();\n    const { variant } = theme.custom.thumbnailTemplates;\n    useEffect(() => {\n        setIconJson({\n            selectedIcon: selectedIconProp,\n            color: colorProp,\n            backgroundIndex: backgroundIndexProp,\n            category: categoryProp,\n        });\n    }, [selectedIconProp, colorProp, backgroundIndexProp, categoryProp]);\n\n    useEffect(() => {\n        setThumbnail(thumbnailPop);\n    }, [thumbnailPop]);\n    /**\n     * Load the image from the backend and keeps in the component state\n     */\n    useEffect(() => {\n        if (type !== 'DOC') {\n            if (api.hasThumbnail !== null && api.hasThumbnail) {\n                const promisedThumbnail = apiType === Api.CONSTS.APIProduct\n                    ? new APIProduct().getAPIProductThumbnail(id)\n                    : new Api().getAPIThumbnail(id);\n\n                promisedThumbnail.then((response) => {\n                    if (response && response.data) {\n                        if (response.headers['content-type'] === 'application/json') {\n                            setThumbnail(null);\n                            setIconJson(response.body);\n                        } else if (response.headers['content-type'] === 'image/svg+xml') {\n                            const blob = new Blob([response.data], { type: 'image/svg+xml' });\n                            const url = windowURL.createObjectURL(blob);\n                            setThumbnail(url);\n                        } else if (response && response.data.size > 0) {\n                            const url = windowURL.createObjectURL(response.data);\n                            setThumbnail(url);\n                        }\n                    } else if (response && response.data === '') {\n                        setThumbnail(null);\n                        setIconJson({ key: null });\n                    }\n                }).finally(() => {\n                    setImageLoaded(true);\n                });\n            } else {\n                setThumbnail(null);\n                setIconJson({ key: null });\n                setImageLoaded(true);\n            }\n        } else {\n            setImageLoaded(true);\n        }\n    }, [imageUpdate]);\n    if (!imageLoaded) {\n        return (\n            <div className='image-load-frame'>\n                <div className='image-load-animation1' />\n                <div className='image-load-animation2' />\n            </div>\n        );\n    }\n    let overviewPath = '';\n    if (apiType) {\n        overviewPath = apiType === Api.CONSTS.APIProduct\n            ? `/api-products/${api.id}/overview` : `/apis/${api.id}/overview`;\n    } else {\n        overviewPath = `/apis/${api.apiUUID}/documents/${api.id}/details`;\n    }\n    let view = (\n        <LetterGenerator\n            width={width}\n            height={height}\n            artifact={api}\n        />\n    );\n    // If configured the thumbnail variant as `image` or migrated from old thumbnail\n    if (variant === 'image' || key) {\n        view = (\n            <ImageGenerator\n                width={width}\n                height={height}\n                api={api}\n                fixedIcon={{\n                    key: key || selectedIconProp,\n                    color,\n                    backgroundIndex,\n                    category,\n                    api,\n                }}\n            />\n        );\n    }\n\n    return (\n        <>\n            {isEditable ? (\n                <ButtonBase\n                    focusRipple\n                    className={classes.thumb}\n                    onClick={onClick}\n                >\n                    {thumbnail\n                        ? (\n                            <img\n                                height={height}\n                                width={width}\n                                src={thumbnail}\n                                alt='API Thumbnail'\n                                className={classes.media}\n                            />\n                        )\n                        : view}\n                    <span className={classes.thumbBackdrop} />\n                    <span className={classes.thumbButton}>\n                        <Typography component='span' variant='subtitle1' color='inherit'>\n                            <EditIcon />\n                        </Typography>\n                    </span>\n                </ButtonBase>\n            ) : (\n                <Link className={classes.suppressLinkStyles} to={overviewPath}>\n                    {thumbnail\n                        ? (\n                            <img\n                                height={height}\n                                width={width}\n                                src={thumbnail}\n                                alt='API Thumbnail'\n                                className={classes.media}\n                            />\n                        )\n                        : view}\n                </Link>\n            )}\n        </>\n    );\n};\nBaseThumbnail.defaultProps = {\n    height: 190,\n    width: 250,\n    isEditable: false,\n};\nBaseThumbnail.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    isEditable: PropTypes.bool,\n    imageUpdate: PropTypes.number.isRequired,\n};\nexport default BaseThumbnail;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Background from './Background';\n\nimport getIcon from './APICards/ImageUtils';\n\nconst styles = {\n    icon: {},\n    iconWrapper: {\n        position: 'relative',\n        '& span': {\n            position: 'absolute',\n            left: '50%',\n        },\n    },\n};\n\n/**\n * Generate dynamic API thumbnail image (SVG), Use PureComponent to avoid unnessasary re-rendering when hover ect\n *\n * @class ImageGenerator\n * @extends {PureComponent}\n */\nclass ImageGenerator extends PureComponent {\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.PureComponent} @inheritdoc\n     * @memberof ImageGenerator\n     */\n    render() {\n        const {\n            classes, api, width, height, theme, fixedIcon,\n        } = this.props;\n\n        const {\n            category, key, color, backgroundIndex,\n        } = fixedIcon;\n        let str = api;\n        if (typeof api === 'object') str = api.name;\n        if (!str) str = 'default';\n        let colorPair;\n        let randomBackgroundIndex;\n        const colorPairs = theme.custom.thumbnail.backgrounds;\n\n        // Creating the icon\n        const iconElement = getIcon(key, category, theme, api);\n\n        if (api.type === 'DOC') {\n            colorPair = theme.custom.thumbnail.document.backgrounds;\n        } else if (typeof backgroundIndex === 'number' && colorPairs.length > backgroundIndex) {\n            // Obtain or generate background color pair\n            colorPair = colorPairs[backgroundIndex];\n        } else {\n            randomBackgroundIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % colorPairs.length;\n            colorPair = colorPairs[randomBackgroundIndex];\n        }\n        return (\n            <div className={classes.iconWrapper} style={{ width }}>\n                <Icon className={classes.icon} style={{ fontSize: height, marginLeft: -height / 2, color }}>\n                    {iconElement}\n                </Icon>\n                {(!theme.custom.thumbnailTemplates || !theme.custom.thumbnailTemplates.active) && (\n                    <Background width={width} height={height} colorPair={colorPair} />\n                )}\n            </div>\n        );\n    }\n}\n\nImageGenerator.defaultProps = {\n    height: 190,\n    width: 250,\n    fixedIcon: {\n        category: null,\n        key: null,\n        color: '',\n        backgroundIndex: null,\n    },\n};\n\nImageGenerator.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    fixedIcon: PropTypes.shape({}),\n    api: PropTypes.shape({}).isRequired,\n    iconSettings: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ImageGenerator);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n    svgImage: {\n        cursor: 'pointer',\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n};\n\nfunction aHexToOpacity(aHex) {\n    const alphaValue = '0x' + aHex.substring(7, 9);\n    return alphaValue / 256;\n}\n\n/**\n *\n * @param {*} aHex\n */\nfunction getColorWithoutAlpha(aHex) {\n    return aHex.substring(0, 7);\n}\n\n/**\n * Generate svg background.\n * @param {*} props\n */\nfunction Background(props) {\n    const {\n        classes, colorPair, width, height,\n    } = props;\n    // Creating the background\n\n    const thumbnailBox = {\n        width: 250,\n        height: 200,\n    };\n\n    const thumbnailBoxChild = {\n        width: 50,\n        height: 50,\n    };\n\n    const rects = [];\n    for (let i = 0; i <= 4; i++) {\n        for (let j = 0; j <= 4; j++) {\n            const color = '#' + (colorPair.sub - ((0x00000025 * i) - (j * 0x00000015))).toString(16);\n            rects.push(<rect\n                key={i + '_' + j}\n                {...thumbnailBoxChild}\n                /* eslint no-mixed-operators: 0 */\n                fill={getColorWithoutAlpha(color)}\n                fillOpacity={aHexToOpacity(color)}\n                x={200 - i * 54}\n                y={54 * j}\n            />);\n        }\n    }\n    const primeColor = '#' + colorPair.prime.toString(16);\n    return (\n        <svg width={width} height={height} className={classes.svgImage}>\n            <rect {...thumbnailBox} fill={getColorWithoutAlpha(primeColor)} fillOpacity={aHexToOpacity(primeColor)} />\n            {rects}\n        </svg>\n    );\n}\n\nBackground.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    width: PropTypes.shape({}).isRequired,\n    height: PropTypes.shape({}).isRequired,\n    colorPair: PropTypes.shape({ sub: PropTypes.number, prime: PropTypes.number }).isRequired,\n};\n\nexport default withStyles(styles)(Background);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nconst getIcon = (key, category, theme, api) => {\n    let IconElement;\n\n    // Creating the icon\n    if (key && category) {\n        IconElement = key;\n    } else if (api.type === 'DOC') {\n        IconElement = theme.custom.thumbnail.document.icon;\n    } else {\n        IconElement = 'settings';\n    }\n    return IconElement;\n};\n\nexport default getIcon;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"\n}), 'Link');\n\nexports.default = _default;","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport queryString from 'query-string';\nimport LandingMenuItem from 'AppComponents/Apis/Listing/Landing/components/LandingMenuItem';\nimport LandingMenu from 'AppComponents/Apis/Listing/Landing/components/LandingMenu';\nimport APICreateMenuSection from 'AppComponents/Apis/Listing/components/APICreateMenuSection';\nimport SampleAPI from 'AppComponents/Apis/Listing/SampleAPI/SampleAPI';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport Configurations from 'Config';\nimport API from 'AppData/api';\n\nconst RestAPIMenu = (props) => {\n    const { icon, isCreateMenu } = props;\n    const Component = isCreateMenu ? APICreateMenuSection : LandingMenu;\n    const dense = isCreateMenu;\n    const { alwaysShowDeploySampleButton } = Configurations.apis;\n    const [showSampleDeploy, setShowSampleDeploy] = useState(false);\n\n    useEffect(() => {\n        if (isCreateMenu) {\n            const composeQuery = '?query=name:PizzaShackAPI version:1.0 context:pizzashack';\n            const composeQueryJSON = queryString.parse(composeQuery);\n            composeQueryJSON.limit = 1;\n            composeQueryJSON.offset = 0;\n            API.search(composeQueryJSON).then((resp) => {\n                const data = JSON.parse(resp.data);\n                setShowSampleDeploy(data.count === 0);\n            });\n        } else {\n            setShowSampleDeploy(true);\n        }\n    }, []);\n\n    return (\n        <Component\n            id='itest-rest-api-create-menu'\n            title={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.rest.api'\n                    defaultMessage='REST API'\n                />\n            )}\n            icon={icon}\n        >\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-landing-rest-create-default'\n                linkTo='/apis/create/rest'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.rest.api.scratch.content'\n                        defaultMessage='Design and prototype a new REST API'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.rest.api.scratch.title'\n                    defaultMessage='Start From Scratch'\n                />\n            </LandingMenuItem>\n\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-landing-upload-oas'\n                linkTo='/apis/create/openapi'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.rest.api.import.open.content'\n                        defaultMessage='Import OAS 3 or Swagger 2.0 definition'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.rest.api.import.open.title'\n                    defaultMessage='Import Open API'\n                />\n            </LandingMenuItem>\n            {(!isCreateMenu || (isCreateMenu && alwaysShowDeploySampleButton)) && showSampleDeploy && (\n                <>\n                    <Box width={1}>\n                        <Divider light variant='middle' />\n                    </Box>\n                    <SampleAPI dense={dense} />\n                </>\n            )}\n        </Component>\n    );\n};\n\nexport default RestAPIMenu;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');\n\nexports.default = _default;","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport LandingMenuItem from 'AppComponents/Apis/Listing/Landing/components/LandingMenuItem';\nimport LandingMenu from 'AppComponents/Apis/Listing/Landing/components/LandingMenu';\nimport APICreateMenuSection from 'AppComponents/Apis/Listing/components/APICreateMenuSection';\n\nconst SoapAPIMenu = (props) => {\n    const { icon, isCreateMenu } = props;\n\n    const Component = isCreateMenu ? APICreateMenuSection : LandingMenu;\n    const dense = isCreateMenu;\n    return (\n        <Component\n            openList={dense}\n            title={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.soap.api'\n                    defaultMessage='SOAP API'\n                />\n            )}\n            icon={icon}\n        >\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-create-soap-api'\n                linkTo='/apis/create/wsdl'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.soap.import.wsdl.content'\n                        defaultMessage='Generate REST or create a pass-through API'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.soap.import.wsdl.title'\n                    defaultMessage='Import WSDL'\n                />\n            </LandingMenuItem>\n        </Component>\n    );\n};\n\nexport default SoapAPIMenu;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport LandingMenuItem from 'AppComponents/Apis/Listing/Landing/components/LandingMenuItem';\nimport LandingMenu from 'AppComponents/Apis/Listing/Landing/components/LandingMenu';\nimport APICreateMenuSection from 'AppComponents/Apis/Listing/components/APICreateMenuSection';\n\nconst GraphqlAPIMenu = (props) => {\n    const { icon, isCreateMenu } = props;\n    const Component = isCreateMenu ? APICreateMenuSection : LandingMenu;\n    const dense = isCreateMenu;\n\n    return (\n        <Component\n            openList={dense}\n            title={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.graphql.api'\n                    defaultMessage='GraphQL'\n                />\n            )}\n            icon={icon}\n        >\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-create-graphql-api'\n                linkTo='/apis/create/graphQL'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.graphql.import.sdl.content'\n                        defaultMessage='Use an existing definition'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.graphql.import.sdl.title'\n                    defaultMessage='Import GraphQL SDL'\n                />\n            </LandingMenuItem>\n        </Component>\n    );\n};\n\nexport default GraphqlAPIMenu;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport LandingMenuItem from 'AppComponents/Apis/Listing/Landing/components/LandingMenuItem';\nimport LandingMenu from 'AppComponents/Apis/Listing/Landing/components/LandingMenu';\nimport APICreateMenuSection from 'AppComponents/Apis/Listing/components/APICreateMenuSection';\n\nconst StreamingAPIMenu = (props) => {\n    const { icon, isCreateMenu } = props;\n    const Component = isCreateMenu ? APICreateMenuSection : LandingMenu;\n    const dense = isCreateMenu;\n    return (\n        <Component\n            openList={dense}\n            title={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.streaming.api'\n                    defaultMessage='Streaming API'\n                />\n            )}\n            icon={icon}\n        >\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-create-streaming-api-ws'\n                linkTo='/apis/create/streamingapi/ws'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.streaming.design.new.ws.content'\n                        defaultMessage='Create a Web Socket API'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.streaming.design.new.title'\n                    defaultMessage='Web Socket API'\n                />\n            </LandingMenuItem>\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-create-streaming-api-web-hook'\n                linkTo='/apis/create/streamingapi/websub'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.streaming.websub.content'\n                        defaultMessage='Create a Webhook/WebSub API'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.streaming.websub.title'\n                    defaultMessage='Webhook API'\n                />\n            </LandingMenuItem>\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-create-streaming-api-sse'\n                linkTo='/apis/create/streamingapi/sse'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.streaming.sse.content'\n                        defaultMessage='Create a Server-Sent Events API'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.streaming.sse.title'\n                    defaultMessage='SSE API'\n                />\n            </LandingMenuItem>\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-create-streaming-api-import'\n                linkTo='/apis/create/asyncapi'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.streaming.import.content'\n                        defaultMessage='Upload a file or provide an Async API URL'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.streaming.import.title'\n                    defaultMessage='Import an AsyncAPI'\n                />\n            </LandingMenuItem>\n        </Component>\n    );\n};\n\nexport default StreamingAPIMenu;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Suspense, lazy } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Progress from 'AppComponents/Shared/Progress';\nimport AuthManager from 'AppData/AuthManager';\n\nimport Listing from './Listing/Listing';\n\n/* if needs to pre fetch use 'webpackPrefetch: true' */\n\nconst Details = lazy(() => import('./Details/index' /* webpackChunkName: \"DeferredDetails\" */));\nconst DeferredDetails = (props) => (\n    <Suspense fallback={<Progress per={50} message='Loading Details component ...' />}>\n        <Details {...props} />\n    </Suspense>\n);\n\nconst APICreateRoutes = lazy(\n    () => import(/* webpackPrefetch: true */ './Create/APICreateRoutes' /* webpackChunkName: \"APICreateRoutes\" */),\n);\nconst DeferredAPICreateRoutes = (props) => (\n    <Suspense fallback={<Progress per={70} message='Loading API Create component ...' />}>\n        <APICreateRoutes {...props} />\n    </Suspense>\n);\n\n/**\n * Have used key={Date.now()} for `Route` element in `/apis` and `/api-products`\n */\nconst Apis = () => {\n    return (\n        <Switch>\n            <Route\n                exact\n                path='/apis'\n                key={Date.now()}\n                render={(props) => <Listing {...props} isAPIProduct={false} />}\n            />\n            <Route\n                exact\n                path='/api-products'\n                key={Date.now()}\n                render={(props) => {\n                    if (AuthManager.isNotPublisher()) {\n                        return <Redirect to='/apis' />;\n                    } else {\n                        return <Listing {...props} isAPIProduct />;\n                    }\n                }}\n            />\n            <Route path='/apis/search' render={(props) => <Listing {...props} isAPIProduct={false} />} />\n            <Route path='/apis/create' component={DeferredAPICreateRoutes} />\n            <Route\n                path='/api-products/create'\n                render={() => {\n                    if (AuthManager.isNotPublisher()) {\n                        return <Redirect to='/apis' />;\n                    } else {\n                        return <DeferredAPICreateRoutes />;\n                    }\n                }}\n            />\n            <Route path='/apis/:apiUUID/' render={(props) => <DeferredDetails {...props} isAPIProduct={false} />} />\n            <Route\n                path='/api-products/:apiProdUUID/'\n                render={(props) => {\n                    if (AuthManager.isNotPublisher()) {\n                        return <Redirect to='/apis' />;\n                    } else {\n                        return <DeferredDetails {...props} isAPIProduct />;\n                    }\n                }}\n            />\n        </Switch>\n    );\n};\n\nexport default Apis;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// TODO: DO we need this component ? this is a pure proxy just passing the props through this to children ? ~tmkb\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableView from './TableView/TableView';\n\nconst styles = {\n    content: {\n        flexGrow: 1,\n    },\n};\n/**\n * Render the APIs Listing page, This is the Default Publisher Landing page as well\n *\n * @function Listing\n * @returns {React.Component} @inheritdoc\n */\nfunction Listing(props) {\n    const {\n        classes, isAPIProduct, theme, location: { search },\n    } = props;\n    // TODO: need to handle this search case separately ~tmkb\n    return (\n        <main className={classes.content}>\n            <TableView isAPIProduct={isAPIProduct} theme={theme} query={search} />\n        </main>\n    );\n}\n\nListing.propTypes = {\n    classes: PropTypes.shape({\n        content: PropTypes.string,\n        contentInside: PropTypes.string,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({}),\n    }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    location: PropTypes.shape({\n        search: PropTypes.string,\n    }),\n};\n\nListing.defaultProps = {\n    location: PropTypes.shape({\n        search: '',\n    }),\n};\n\nexport default withStyles(styles, { withTheme: true })(Listing);\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport queryString from 'query-string';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport Icon from '@material-ui/core/Icon';\nimport ApiThumb from 'AppComponents/Apis/Listing/components/ImageGenerator/ApiThumb';\nimport DocThumb from 'AppComponents/Apis/Listing/components/ImageGenerator/DocThumb';\nimport { Progress } from 'AppComponents/Shared';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport APILanding from 'AppComponents/Apis/Listing/Landing';\nimport TopMenu from 'AppComponents/Apis/Listing/components/TopMenu';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport SampleAPIProduct from 'AppComponents/Apis/Listing/SampleAPI/SampleAPIProduct';\nimport Alert from 'AppComponents/Shared/Alert';\n\nconst styles = (theme) => ({\n    contentInside: {\n        padding: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        '& > div[class^=\"MuiPaper-root-\"]': {\n            boxShadow: 'none',\n            backgroundColor: 'transparent',\n        },\n    },\n    apiNameLink: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(),\n        },\n        '& span.material-icons': {\n            marginLeft: 0,\n            color: '#444',\n            marginRight: theme.spacing(),\n            fontSize: 18,\n        },\n    },\n});\n\n/**\n * Table view for api listing\n *\n * @class ApiTableView\n * @extends {React.Component}\n */\nclass TableView extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof ApiTableView\n     */\n    constructor(props) {\n        super(props);\n        let { defaultApiView } = props.theme.custom;\n        this.showToggle = true;\n        if (typeof defaultApiView === 'object' && defaultApiView.length > 0) {\n            if (defaultApiView.length === 1) { // We will disable toggle buttons\n                this.showToggle = false;\n            }\n            defaultApiView = defaultApiView[defaultApiView.length - 1];\n        } else {\n            defaultApiView = localStorage.getItem('publisher.listType') || defaultApiView;\n        }\n        this.state = {\n            apisAndApiProducts: null,\n            notFound: true,\n            listType: defaultApiView,\n            loading: true,\n            totalCount: -1,\n            rowsPerPage: 10,\n            page: 0,\n        };\n        this.setListType = this.setListType.bind(this);\n        this.updateData = this.updateData.bind(this);\n    }\n\n    componentDidMount() {\n        const { rowsPerPage, page } = this.state;\n        this.getData(rowsPerPage, page);\n        const userRowsPerPage = parseInt(localStorage.getItem('publisher.rowsPerPage'), 10);\n        if (userRowsPerPage) {\n            this.setState({ rowsPerPage: userRowsPerPage });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const { isAPIProduct, query } = this.props;\n        if (isAPIProduct !== prevProps.isAPIProduct || query !== prevProps.query) {\n            this.getData();\n        }\n    }\n\n    componentWillUnmount() {\n        // The foollowing is resetting the styles for the mui-datatables\n        const { theme } = this.props;\n        const themeAdditions = {\n            overrides: {\n                MUIDataTable: {\n                    tableRoot: {\n                        display: 'table',\n                        '& tbody': {\n                            display: 'table-row-group',\n                        },\n                        '& thead': {\n                            display: 'table-header-group',\n                        },\n                    },\n                },\n            },\n        };\n        Object.assign(theme, themeAdditions);\n    }\n\n    getMuiTheme = () => {\n        const { listType, totalCount } = this.state;\n        const { theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                    },\n                    tableRoot: {\n                        '& tbody': {\n                            backgroundColor: '#fff',\n                        },\n                    },\n                },\n                MUIDataTableBodyCell: {\n                    root: {\n                        backgroundColor: 'transparent',\n                    },\n                },\n            },\n        };\n        if (listType === 'grid') {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                backgroundColor: 'transparent',\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                        },\n                    },\n                    MuiTableBody: {\n                        root: {\n                            justifyContent: totalCount > 4 ? 'center' : 'flex-start',\n                        },\n                    },\n                },\n            };\n        }\n        muiTheme = Object.assign(theme, muiTheme, themeAdditions);\n        return createMuiTheme(muiTheme);\n    };\n\n    // get apisAndApiProducts\n    getData = (rowsPerPage, page) => {\n        const { intl } = this.props;\n        this.setState({ loading: true });\n        return this.xhrRequest(rowsPerPage, page).then((data) => {\n            const { body } = data;\n            const { list, pagination } = body;\n            const { total } = pagination;\n            this.setState({\n                totalCount: total,\n                apisAndApiProducts: list,\n                notFound: false,\n                rowsPerPage,\n                page,\n            });\n        }).catch(() => {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'Error While Loading APIs',\n                id: 'Apis.Listing.TableView.TableView.error.loading',\n            }));\n        }).finally(() => {\n            this.setState({ loading: false });\n        });\n    };\n\n    /**\n     *\n     * Switch the view between grid and list view\n     * @param {String} value UUID(ID) of the deleted API\n     * @memberof Listing\n     */\n    setListType = (value) => {\n        localStorage.setItem('publisher.listType', value);\n        this.setState({ listType: value });\n    };\n\n    changePage = (page) => {\n        const { intl } = this.props;\n        const { rowsPerPage } = this.state;\n        this.setState({ loading: true });\n        this.xhrRequest(rowsPerPage, page).then((data) => {\n            const { body } = data;\n            const { list, pagination } = body;\n            this.setState({\n                apisAndApiProducts: list,\n                notFound: false,\n                totalCount: pagination.total,\n                page,\n            });\n        }).catch(() => {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'Error While Loading APIs',\n                id: 'Apis.Listing.TableView.TableView.error.loading',\n            }));\n        })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = (rowsPerPage, page) => {\n        const { isAPIProduct, query } = this.props;\n        if (query) {\n            const composeQuery = queryString.parse(query);\n            composeQuery.limit = rowsPerPage;\n            composeQuery.offset = page * rowsPerPage;\n            return API.search(composeQuery);\n        }\n        if (isAPIProduct) {\n            return APIProduct.all({ limit: rowsPerPage, offset: page * rowsPerPage });\n        } else {\n            return API.all({ limit: rowsPerPage, offset: page * rowsPerPage });\n        }\n    };\n\n    /**\n     *\n     * Update APIs list if an API get deleted in card or table view\n     * @param {String} apiUUID UUID(ID) of the deleted API\n     * @memberof Listing\n     */\n    updateData() {\n        const { rowsPerPage, page, totalCount } = this.state;\n        let newPage = page;\n        if (totalCount - 1 === rowsPerPage * page && page !== 0) {\n            newPage = page - 1;\n        }\n        this.getData(rowsPerPage, newPage);\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof TableView\n     */\n    render() {\n        const {\n            intl, isAPIProduct, classes, query,\n        } = this.props;\n        const {\n            loading, totalCount, rowsPerPage, apisAndApiProducts, notFound, listType, page,\n        } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const { isAPIProduct } = tableViewObj.props; // eslint-disable-line no-shadow\n                            const artifact = tableViewObj.state.apisAndApiProducts[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[1];\n                            const apiId = tableMeta.rowData[0];\n                            if (isAPIProduct) {\n                                return (\n                                    <Link to={'/api-products/' + apiId + '/overview'} className={classes.apiNameLink}>\n                                        <CustomIcon width={16} height={16} icon='api-product' strokeColor='#444444' />\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                            if (artifact) {\n                                if (artifact.type === 'DOC') {\n                                    return (\n                                        <Link\n                                            to={'/apis/' + artifact.apiUUID + '/documents/' + apiId + '/details'}\n                                            className={classes.apiNameLink}\n                                        >\n                                            <Icon>library_books</Icon>\n                                            <FormattedMessage\n                                                id='Apis.Listing.TableView.TableView.doc.flag'\n                                                defaultMessage=' [Doc]'\n                                            />\n                                            <span>{apiName}</span>\n                                        </Link>\n                                    );\n                                }\n                                return (\n                                    <Link to={'/apis/' + apiId + '/overview'} className={classes.apiNameLink}>\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor='#444444' />\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'version',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.version',\n                    defaultMessage: 'Version',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'context',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.context',\n                    defaultMessage: 'Context',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'provider',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.provider',\n                    defaultMessage: 'Provider',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n        ];\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            search: false,\n            count: totalCount,\n            serverSide: true,\n            page,\n            onChangePage: this.changePage,\n            selectableRows: 'none',\n            rowsPerPage,\n            onChangeRowsPerPage: (newNumberOfRows) => {\n                let newPage;\n                if (page * newNumberOfRows > totalCount) {\n                    newPage = 0;\n                } else if (totalCount - 1 === newNumberOfRows * page && page !== 0) {\n                    newPage = page - 1;\n                }\n                localStorage.setItem('publisher.rowsPerPage', newNumberOfRows);\n                this.getData(newNumberOfRows, newPage);\n            },\n            textLabels: {\n                pagination: {\n                    rowsPerPage: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.items.per.page',\n                        defaultMessage: 'Items per page',\n                    }),\n                },\n            },\n        };\n        if (listType === 'grid') {\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const { isAPIProduct } = tableViewObj.props; // eslint-disable-line no-shadow\n                const artifact = tableViewObj.state.apisAndApiProducts[dataIndex];\n                if (artifact) {\n                    if (artifact.type === 'DOC') {\n                        return <DocThumb doc={artifact} />;\n                    } else if (artifact.type === 'APIPRODUCT') {\n                        artifact.state = 'PUBLISHED';\n                        return <ApiThumb api={artifact} isAPIProduct updateData={this.updateData} />;\n                    } else {\n                        return (\n                            <ApiThumb api={artifact} isAPIProduct={isAPIProduct} updateData={this.updateData} />\n                        );\n                    }\n                }\n                return <span />;\n            };\n            options.title = false;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n        } else {\n            options.customRowRender = null;\n            options.title = true;\n            options.filter = false;\n            options.print = true;\n            options.download = true;\n            options.viewColumns = true;\n        }\n        if (page === 0 && totalCount <= rowsPerPage && rowsPerPage === 10) {\n            options.pagination = false;\n        } else {\n            options.pagination = true;\n        }\n        if (!apisAndApiProducts) {\n            return <Progress per={90} message='Loading APIs ...' />;\n        }\n        if (notFound) {\n            return <ResourceNotFound />;\n        }\n        if (apisAndApiProducts.length === 0 && !query) {\n            return (\n                <>\n                    <TopMenu\n                        data={apisAndApiProducts}\n                        count={totalCount}\n                        setListType={this.setListType}\n                        isAPIProduct={isAPIProduct}\n                        listType={listType}\n                        showToggle={this.showToggle}\n                    />\n                    {isAPIProduct ? (\n                        <SampleAPIProduct />\n                    ) : (\n                        <APILanding />\n                    )}\n                </>\n            );\n        }\n\n        return (\n            <>\n                <TopMenu\n                    data={apisAndApiProducts}\n                    count={totalCount}\n                    setListType={this.setListType}\n                    isAPIProduct={isAPIProduct}\n                    listType={listType}\n                    showToggle={this.showToggle}\n                    query={query}\n                />\n                <div className={classes.contentInside}>\n                    {loading ? (\n                        <Progress\n                            per={96}\n                            message='Updating page ...'\n                        />\n                    )\n                        : (\n                            <MuiThemeProvider theme={this.getMuiTheme()}>\n                                <MUIDataTable title='' data={apisAndApiProducts} columns={columns} options={options} />\n                            </MuiThemeProvider>\n                        )}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(TableView));\n\nTableView.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func.isRequired }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({}),\n    }).isRequired,\n    query: PropTypes.string,\n};\n\nTableView.defaultProps = {\n    query: '',\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport ApiThumbClassic from 'AppComponents/Apis/Listing/components/ImageGenerator/APICards/ApiThumbClassic';\nimport APIThumbPlain from 'AppComponents/Apis/Listing/components/ImageGenerator/APICards/APIThumbPlain';\n\n/**\n * Render a thumbnail\n * @param {JSON} props required pros.\n * @returns {JSX} Thumbnail rendered output.\n */\nexport default function APIThumb(props) {\n    const theme = useTheme();\n    const { custom } = theme;\n    if (!custom.thumbnailTemplates || !custom.thumbnailTemplates.active) {\n        return (\n            <ApiThumbClassic {...props} />\n        );\n    }\n    return (\n        <APIThumbPlain {...props} />\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { isRestricted } from 'AppData/AuthManager';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport green from '@material-ui/core/colors/green';\nimport API from 'AppData/api';\nimport DeleteApiButton from 'AppComponents/Apis/Details/components/DeleteApiButton';\n\nimport BaseThumbnail from '../BaseThumbnail';\n\nconst styles = (theme) => ({\n    card: {\n        margin: theme.spacing(3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n    providerText: {\n        textTransform: 'capitalize',\n    },\n    apiDetails: { padding: theme.spacing(1) },\n    apiActions: { justifyContent: 'space-between', padding: `0px 0px ${theme.spacing(1)}px 8px` },\n    deleteProgress: {\n        color: green[200],\n        position: 'absolute',\n        marginLeft: '200px',\n    },\n    thumbHeader: {\n        width: '90%',\n        whiteSpace: 'nowrap',\n        color: theme.palette.text.secondary,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    contextBox: {\n        width: '110px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n    row: {\n        display: 'inline-block',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    thumbBy: {\n        'padding-left': '5px',\n    },\n    thumbRightBy: {\n        'margin-right': '5px',\n        height: 18,\n        borderRadius: 8,\n    },\n    thumbRightByLabel: {\n        paddingLeft: 5,\n        paddingRight: 5,\n    },\n});\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class APIThumb\n * @extends {Component}\n */\nclass APIThumb extends Component {\n    /**\n     *Creates an instance of APIThumb.\n     * @param {*} props\n     * @memberof APIThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = { isHover: false, loading: false };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n        this.setLoading = this.setLoading.bind(this);\n    }\n\n    /**\n     *\n     * Set loading state\n     * @param {String} loadingState New state value\n     * @memberof APIThumb\n     */\n    setLoading(loadingState) {\n        this.setState({ loading: loadingState });\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof APIThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof APIThumb\n     */\n    render() {\n        const {\n            classes, api, isAPIProduct, theme, updateData,\n        } = this.props;\n        const { isHover, loading } = this.state;\n        let overviewPath = '';\n        if (api.apiType) {\n            overviewPath = isAPIProduct ? `/api-products/${api.id}/overview` : `/apis/${api.id}/overview`;\n        } else {\n            overviewPath = `/apis/${api.apiUUID}/documents/${api.id}/details`;\n        }\n        if (isAPIProduct) {\n            api.apiType = API.CONSTS.APIProduct;\n        } else {\n            api.apiType = API.CONSTS.API;\n        }\n\n        if (!api.lifeCycleStatus) {\n            api.lifeCycleStatus = api.status;\n        }\n\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                elevation={isHover ? 4 : 1}\n                className={classes.card}\n            >\n                <CardMedia\n                    src='None'\n                    component={BaseThumbnail}\n                    height={theme.custom.thumbnail.height}\n                    width={theme.custom.thumbnail.width}\n                    title='Thumbnail'\n                    api={api}\n                />\n                <CardContent className={classes.apiDetails}>\n                    <div className={classes.textWrapper}>\n                        <Link to={overviewPath}>\n                            <Typography gutterBottom variant='h4' className={classes.thumbHeader} title={api.name}>\n                                {api.name}\n                            </Typography>\n                        </Link>\n                    </div>\n                    <div className={classes.row}>\n                        <Typography variant='caption' gutterBottom align='left' className={classes.thumbBy}>\n                            <FormattedMessage id='by' defaultMessage='By' />\n                            <FormattedMessage id='colon' defaultMessage=' : ' />\n                            {api.provider}\n                        </Typography>\n                    </div>\n                    <div className={classes.thumbInfo}>\n                        {isAPIProduct ? null : (\n                            <div className={classes.row}>\n                                <div className={classes.thumbLeft}>\n                                    <Typography variant='subtitle1'>{api.version}</Typography>\n                                </div>\n\n                                <div className={classes.thumbLeft}>\n                                    <Typography variant='caption' gutterBottom align='left'>\n                                        <FormattedMessage defaultMessage='Version' id='Apis.Listing.ApiThumb.version' />\n                                    </Typography>\n                                </div>\n                            </div>\n                        )}\n                        <div className={classes.row}>\n                            <div className={classes.thumbRight}>\n                                <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                                    {api.context}\n                                </Typography>\n                            </div>\n\n                            <div className={classes.thumbRight}>\n                                <Typography variant='caption' gutterBottom align='right' className={classes.context}>\n                                    {api.type === 'WS' ? (\n                                        <FormattedMessage\n                                            defaultMessage='Channel'\n                                            id='Apis.Listing.ApiThumb.channel'\n                                        />\n                                    ) : (\n                                        <FormattedMessage\n                                            defaultMessage='Context'\n                                            id='Apis.Listing.ApiThumb.context'\n                                        />\n                                    )}\n                                </Typography>\n                            </div>\n                        </div>\n                    </div>\n                </CardContent>\n                <CardActions className={classes.apiActions}>\n                    <Chip\n                        size='small'\n                        classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                        label={api.apiType === API.CONSTS.APIProduct ? api.state : api.lifeCycleStatus}\n                        color='default'\n                    />\n                    {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                        <Chip\n                            size='small'\n                            classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                            label={api.transportType === undefined\n                                ? api.type : api.transportType}\n                            color='primary'\n                        />\n                    )}\n                    {(api.type === 'WS') && (\n                        <Chip\n                            size='small'\n                            classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                            label='WEBSOCKET'\n                            color='primary'\n                        />\n                    )}\n                    {(api.type === 'WEBSUB') && (\n                        <Chip\n                            size='small'\n                            classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                            label='WEBSUB'\n                            color='primary'\n                        />\n                    )}\n                    {!isRestricted(['apim:api_create'], api) && (\n                        <>\n                            <DeleteApiButton\n                                setLoading={this.setLoading}\n                                api={api}\n                                updateData={updateData}\n                                isAPIProduct={isAPIProduct}\n                            />\n                            {loading && <CircularProgress className={classes.deleteProgress} />}\n                        </>\n                    )}\n                </CardActions>\n            </Card>\n        );\n    }\n}\n\nAPIThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        apiType: PropTypes.string.isRequired,\n    }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    updateData: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(APIThumb));\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Chip from '@material-ui/core/Chip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Api from 'AppData/api';\nimport DeleteApiButton from 'AppComponents/Apis/Details/components/DeleteApiButton';\nimport Configurations from 'Config';\n\nimport getIcon from './ImageUtils';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 200,\n        marginTop: 10,\n        marginBottom: 10,\n        marginRight: 10,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    thumbHeader: {\n        width: '150px',\n        color: '#444',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    contextBox: {\n        maxWidth: 120,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        paddingLeft: '5px',\n    },\n    caption: {\n        color: theme.palette.grey[700],\n    },\n    imageDisplay: {\n        maxWidth: '40px',\n        maxHeight: '40px',\n    },\n    thumbRightBy: {\n        'margin-right': '5px',\n        height: 18,\n        borderRadius: 8,\n    },\n    thumbRightByLabel: {\n        paddingLeft: 5,\n        paddingRight: 5,\n    },\n}));\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n * Render a thumbnail\n * @param {JSON} props required pros.\n * @returns {JSX} Thumbnail rendered output.\n */\nfunction APIThumbPlain(props) {\n    const theme = useTheme();\n    const classes = useStyles();\n    const {\n        api, showInfo, isAPIProduct, updateData,\n    } = props;\n    const { custom: { thumbnail } } = theme;\n    const {\n        name, version, context, provider,\n    } = api;\n\n    const [imageConf, setImageConf] = useState({\n        selectedIcon: '',\n        category: '',\n        color: '#ccc',\n    });\n    const [imageObj, setIMageObj] = useState(null);\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    setImageConf({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                    });\n                } else if (response && response.data.size > 0) {\n                    setIMageObj(windowURL.createObjectURL(response.data));\n                }\n            }\n        }).finally(() => {\n            setImageLoaded(true);\n        });\n    }, []);\n    let ImageView;\n    if (!imageLoaded) {\n        ImageView = (\n            <div className='image-load-frame'>\n                <div className='image-load-animation1' />\n                <div className='image-load-animation2' />\n            </div>\n        );\n    } else if (imageObj) {\n        ImageView = (\n            <img\n                src={imageObj}\n                alt='API Thumbnail'\n                className={classes.imageDisplay}\n            />\n        );\n    } else {\n        ImageView = (\n            <Icon className={classes.icon} style={{ fontSize: 40 + 'px', color: imageConf.color }}>\n                {getIcon(imageConf.selectedIcon, imageConf.category, theme, api)}\n            </Icon>\n        );\n    }\n\n    if (!showInfo) {\n        return (\n            <Link to={'/apis/' + api.id} aria-hidden='true'>\n                <Box display='flex'>\n                    <Box>\n                        {!thumbnail.defaultApiImage && ImageView}\n                        {thumbnail.defaultApiImage\n                        && (\n                            <img\n                                src={Configurations.app.context + thumbnail.defaultApiImage}\n                                alt='img'\n                            />\n                        )}\n                    </Box>\n                </Box>\n\n            </Link>\n        );\n    }\n    return (\n        <Card className={classes.root} variant='outlined'>\n            <CardContent>\n                <Box>\n                    <Link to={'/apis/' + api.id + '/overview'} aria-hidden='true'>\n                        <Box display='flex'>\n                            <Box>\n                                {!thumbnail.defaultApiImage && ImageView}\n                                {thumbnail.defaultApiImage\n                                && <img src={Configurations.app.context + thumbnail.defaultApiImage} alt='img' />}\n                            </Box>\n                            <Typography\n                                variant='h5'\n                                gutterBottom\n                                title={name}\n                                className={classes.thumbHeader}\n                            >\n                                {name}\n                            </Typography>\n                        </Box>\n\n                    </Link>\n                </Box>\n                {provider && (\n                    <>\n                        <Typography\n                            variant='caption'\n                            gutterBottom\n                            align='left'\n                            className={classes.caption}\n                            component='span'\n                        >\n                            <FormattedMessage defaultMessage='By' id='Apis.Listing.ApiThumb.by' />\n                            <FormattedMessage defaultMessage=' : ' id='Apis.Listing.ApiThumb.by.colon' />\n                        </Typography>\n                        <Typography variant='body2' component='span'>{provider}</Typography>\n                    </>\n                )}\n                <Box display='flex' mt={2}>\n                    <Box flex={1}>\n                        <Typography variant='subtitle1'>{version}</Typography>\n                        <Typography variant='caption' gutterBottom align='left' className={classes.caption}>\n                            <FormattedMessage defaultMessage='Version' id='Apis.Listing.ApiThumb.version' />\n                        </Typography>\n                    </Box>\n                    <Box>\n                        <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                            {context}\n                        </Typography>\n                        <Typography\n                            variant='caption'\n                            gutterBottom\n                            align='right'\n                            className={classes.caption}\n                            Component='div'\n                        >\n                            <FormattedMessage defaultMessage='Context' id='Apis.Listing.ApiThumb.context' />\n                        </Typography>\n                    </Box>\n                </Box>\n\n                <Box display='flex' mt={2}>\n                    <Box flex={1}>\n                        {!isAPIProduct && (\n                            <Chip\n                                label={api.apiType === Api.CONSTS.APIProduct ? api.state : api.lifeCycleStatus}\n                                color='default'\n                                size='small'\n                                classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                            />\n                        )}\n                        {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                            <Chip\n                                size='small'\n                                classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                                label={api.transportType === undefined\n                                    ? api.type : api.transportType}\n                                color='primary'\n                            />\n                        )}\n                        {(api.type === 'WS') && (\n                            <Chip\n                                size='small'\n                                classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                                label='WEBSOCKET'\n                                color='primary'\n                            />\n                        )}\n                        {(api.type === 'WEBSUB') && (\n                            <Chip\n                                size='small'\n                                classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                                label='WEBSUB'\n                                color='primary'\n                            />\n                        )}\n                    </Box>\n                    {!isRestricted(['apim:api_create'], api) && (\n                        <>\n                            <DeleteApiButton\n                                setLoading={setLoading}\n                                api={api}\n                                updateData={updateData}\n                                isAPIProduct={isAPIProduct}\n                            />\n                            {loading && <CircularProgress className={classes.deleteProgress} />}\n                        </>\n                    )}\n                </Box>\n            </CardContent>\n        </Card>\n    );\n}\n\n\nAPIThumbPlain.defaultProps = {\n    showInfo: true,\n};\nAPIThumbPlain.propTypes = {\n    showInfo: PropTypes.bool,\n    updateData: PropTypes.func.isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n};\n\nexport default APIThumbPlain;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport DocThumbClassic from 'AppComponents/Apis/Listing/components/ImageGenerator/APICards/DocThumbClassic';\nimport DocThumbPlain from 'AppComponents/Apis/Listing/components/ImageGenerator/APICards/DocThumbPlain';\n\n/**\n * Render a thumbnail\n * @param {JSON} props required pros.\n * @returns {JSX} Thumbnail rendered output.\n */\nexport default function DocThumb(props) {\n    const theme = useTheme();\n    const { custom } = theme;\n    const { classes, doc } = props;\n\n    if (!custom.thumbnailTemplates || !custom.thumbnailTemplates.active) {\n        return (\n            <DocThumbClassic classes={classes} doc={doc} />\n        );\n    }\n    return (\n        <DocThumbPlain doc={doc} />\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport LetterGenerator from 'AppComponents/Apis/Listing/components/ImageGenerator/LetterGenerator';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DescriptionTwoToneIcon from '@material-ui/icons/DescriptionTwoTone';\nimport LinkIcon from '@material-ui/icons/Link';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(3 / 2),\n        maxWidth: theme.spacing(32),\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n    thumbHeader: {\n        maxWidth: theme.spacing(16),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n}));\n\n\nconst DocThumb = (props) => {\n    const { doc } = props;\n    const [isHover, setIsHover] = useState(false);\n    const toggleMouseOver = () => setIsHover(!isHover);\n    const classes = useStyles();\n    let thumbIcon;\n    let PrefixIcon = TextFieldsIcon;\n    if (doc.sourceType === 'FILE') {\n        PrefixIcon = PictureAsPdfIcon;\n        thumbIcon = DescriptionTwoToneIcon;\n    } else if (doc.sourceType === 'URL') {\n        PrefixIcon = LinkIcon;\n    }\n    return (\n        <Link\n            underline='none'\n            component={RouterLink}\n            to={'/apis/' + doc.apiUUID + '/documents/' + doc.id + '/details'}\n            aria-hidden='true'\n        >\n            <Card\n                onMouseOver={toggleMouseOver}\n                onFocus={toggleMouseOver}\n                onMouseOut={toggleMouseOver}\n                onBlur={toggleMouseOver}\n                elevation={isHover ? 4 : 1}\n                className={classes.card}\n            >\n                <CardMedia\n                    width={200}\n                    component={LetterGenerator}\n                    height={140}\n                    title='Thumbnail'\n                    artifact={{ name: 'Doc' }}\n                    charLength={3}\n                    ThumbIcon={thumbIcon}\n                    bgColor={false}\n                />\n                <CardContent>\n                    <Grid\n                        container\n                        direction='column'\n                        justify='space-evenly'\n                        alignItems='flex-start'\n                    >\n                        <Grid item>\n                            <Box display='flex' alignItems='center' flexDirection='row' fontFamily='fontFamily'>\n                                <Box display='flex'>\n                                    <PrefixIcon color='primary' />\n                                </Box>\n                                <Box\n                                    className={classes.thumbHeader}\n                                    color='text.primary'\n                                    fontSize='h4.fontSize'\n                                    ml={1}\n                                >\n                                    {doc.name}\n                                </Box>\n                            </Box>\n                        </Grid>\n                        <Grid item>\n                            <Box mt={3} fontFamily='fontFamily'>\n                                <Box color='primary.main'>\n                                    {doc.associatedType}\n                                </Box>\n                                <Box color='text.primary' fontSize='h6.fontSize'>\n                                    {doc.apiName}\n                                </Box>\n                                <Box color='text.secondary' fontSize='body1.fontSize'>\n                                    Version:\n                                    {' '}\n                                    {doc.apiVersion}\n                                </Box>\n                            </Box>\n                        </Grid>\n\n                    </Grid>\n                </CardContent>\n            </Card>\n        </Link>\n    );\n};\n\nDocThumb.propTypes = {\n    doc: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        sourceType: PropTypes.string.isRequired,\n        apiName: PropTypes.string.isRequired,\n        apiVersion: PropTypes.string.isRequired,\n    }).isRequired,\n};\nexport default DocThumb;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M2.5 4v3h5v12h3V7h5V4h-13zm19 5h-9v3h3v7h3v-7h3V9z\"\n}), 'TextFields');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.5 7.5c0 .83-.67 1.5-1.5 1.5H9v2H7.5V7H10c.83 0 1.5.67 1.5 1.5v1zm5 2c0 .83-.67 1.5-1.5 1.5h-2.5V7H15c.83 0 1.5.67 1.5 1.5v3zm4-3H19v1h1.5V11H19v2h-1.5V7h3v1.5zM9 9.5h1v-1H9v1zM4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm10 5.5h1v-3h-1v3z\"\n}), 'PictureAsPdf');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M13 4H6v16h12V9h-5V4zm3 14H8v-2h8v2zm0-6v2H8v-2h8z\",\n  opacity: \".3\"\n}), _react.default.createElement(\"path\", {\n  d: \"M8 16h8v2H8zm0-4h8v2H8zm6-10H6c-1.1 0-2 .9-2 2v16c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm4 18H6V4h7v5h5v11z\"\n})), 'DescriptionTwoTone');\n\nexports.default = _default;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 200,\n        marginTop: 10,\n        marginRight: 10,\n        marginBottom: 10,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    thumbHeader: {\n        width: '150px',\n        color: '#444',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    contextBox: {\n        maxWidth: 120,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n    caption: {\n        color: theme.palette.grey[700],\n    },\n    imageDisplay: {\n        maxWidth: '40px',\n        maxHeight: '40px',\n    },\n}));\n\n/**\n * Render a thumbnail\n * @param {JSON} props required pros.\n * @returns {JSX} Thumbnail rendered output.\n */\nfunction DocThumbPlain(props) {\n    const classes = useStyles();\n    const { doc } = props;\n    return (\n        <Card className={classes.root} variant='outlined'>\n            <CardContent>\n                <Box>\n                    <Link to={'/apis/' + doc.apiUUID + '/documents/' + doc.id + '/details'} aria-hidden='true'>\n                        <Box display='flex'>\n                            <Box>\n                                <Icon className={classes.icon} style={{ fontSize: 40 + 'px', color: '#ccc' }}>\n                                    description\n                                </Icon>\n                            </Box>\n                            <Typography\n                                variant='h5'\n                                gutterBottom\n                                title={doc.name}\n                                className={classes.thumbHeader}\n                            >\n                                {doc.name}\n                            </Typography>\n                        </Box>\n\n                    </Link>\n                </Box>\n                <Box mt={2}>\n                    <Typography variant='subtitle1' className={classes.contextBox}>\n                        {doc.apiName}\n                    </Typography>\n                    <Typography\n                        variant='caption'\n                        gutterBottom\n                        align='right'\n                        className={classes.caption}\n                        Component='div'\n                    >\n                        <FormattedMessage\n                            id='Apis.Listing.components.ImageGenerator.DocThumb.apiName'\n                            defaultMessage='API Name'\n                        />\n                    </Typography>\n                </Box>\n                <Box display='flex' mt={2}>\n                    <Box flex={1}>\n                        <Typography variant='subtitle1'>{doc.sourceType}</Typography>\n                        <Typography variant='caption' gutterBottom align='left' className={classes.caption}>\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.DocThumb.sourceType'\n                                defaultMessage='Source Type:'\n                            />\n                        </Typography>\n                    </Box>\n                    <Box>\n                        <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                            {doc.apiVersion}\n                        </Typography>\n                        <Typography\n                            variant='caption'\n                            gutterBottom\n                            align='right'\n                            className={classes.caption}\n                            Component='div'\n                        >\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.DocThumb.apiVersion'\n                                defaultMessage='API Version'\n                            />\n                        </Typography>\n                    </Box>\n                </Box>\n\n\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default DocThumbPlain;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { useTheme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport RestAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/RestAPIMenu';\nimport SoapAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/SoapAPIMenu';\nimport GraphqlAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/GraphqlAPIMenu';\nimport StreamingAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/StreamingAPIMenu';\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n});\n\nconst APILanding = () => {\n    const theme = useTheme();\n    const isXsOrBelow = useMediaQuery(theme.breakpoints.down('xs'));\n    const { root } = useStyles();\n    const {\n        graphqlIcon,\n        restApiIcon,\n        soapApiIcon,\n        streamingApiIcon,\n    } = theme.custom.landingPage.icons;\n\n    return (\n        <div className={root}>\n            <Grid\n                container\n                direction='column'\n                justify='center'\n            >\n                <Grid item xs={12}>\n                    <Box pt={isXsOrBelow ? 2 : 7} />\n                </Grid>\n                <Grid item md={12}>\n                    <Typography id='itest-apis-welcome-msg' display='block' gutterBottom align='center' variant='h4'>\n                        <FormattedMessage\n                            id='Apis.Listing.SampleAPI.SampleAPI.create.new'\n                            defaultMessage='Let’s get started !'\n                        />\n                        <Box color='text.secondary' pt={2}>\n                            <Typography display='block' gutterBottom align='center' variant='body1'>\n                                <FormattedMessage\n                                    id='Apis.Listing.SampleAPI.SampleAPI.create.new.description'\n                                    defaultMessage='Choose your option to create an API '\n                                />\n                            </Typography>\n                        </Box>\n                    </Typography>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Box pt={isXsOrBelow ? 2 : 7} pb={5} mx={isXsOrBelow ? 12 : 3}>\n                        <Grid\n                            container\n                            direction='row'\n                            justify='center'\n                            alignItems='flex-start'\n                            spacing={3}\n                        >\n                            <RestAPIMenu icon={restApiIcon} />\n                            <SoapAPIMenu icon={soapApiIcon} />\n                            <GraphqlAPIMenu icon={graphqlIcon} />\n                            <StreamingAPIMenu icon={streamingApiIcon} />\n                        </Grid>\n                    </Box>\n                </Grid>\n            </Grid>\n        </div>\n\n    );\n};\n\nexport default APILanding;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useReducer, useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Redirect from 'react-router-dom/Redirect';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\nimport LandingMenuItem from 'AppComponents/Apis/Listing/Landing/components/LandingMenuItem';\nimport TaskState from 'AppComponents/Apis/Listing/SampleAPI/components/TaskState';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport Button from '@material-ui/core/Button';\n\nimport { getSampleAPIData, getSampleOpenAPI } from 'AppData/SamplePizzaShack';\n\n\nconst useStyles = makeStyles({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    statusBox: {\n        outline: 'none',\n    },\n});\n\nconst initialTaskStates = {\n    create: { inProgress: true, completed: false, errors: false },\n    update: { inProgress: false, completed: false, errors: false },\n    revision: { inProgress: false, completed: false, errors: false },\n    deploy: { inProgress: false, completed: false, errors: false },\n    publish: { inProgress: false, completed: false, errors: false },\n};\n\nconst tasksReducer = (state, action) => {\n    const { name, status } = action;\n    if (name === 'reset') {\n        return initialTaskStates;\n    }\n    // In the case of a key collision, the right-most (last) object's value wins out\n    return { ...state, [name]: { ...state[name], ...status } };\n};\n\n/**\n * Handle deploying a sample API (Create, Deploy and Publish)\n *\n * @class SampleAPI\n * @extends {Component}\n */\n\nconst SampleAPI = (props) => {\n    const { dense } = props;\n    const [tasksStatus, tasksStatusDispatcher] = useReducer(tasksReducer, initialTaskStates);\n    const [showStatus, setShowStatus] = useState(false);\n    const [newSampleAPI, setNewSampleAPI] = useState();\n    const classes = useStyles();\n    const publisherSettings = usePublisherSettings();\n\n    const theme = useTheme();\n    const isXsOrBelow = useMediaQuery(theme.breakpoints.down('xs'));\n\n    const taskManager = async (promisedTask, name) => {\n        tasksStatusDispatcher({ name, status: { inProgress: true } });\n        let taskResult;\n        try {\n            taskResult = await promisedTask;\n        } catch (errors) {\n            console.error(errors);\n            tasksStatusDispatcher({ name, status: { errors } });\n        }\n        tasksStatusDispatcher({ name, status: { inProgress: false, completed: true } });\n        return taskResult;\n    };\n    /**\n     *Handle onClick event for `Deploy Sample API` Button\n     * @memberof SampleAPI\n     */\n    const handleDeploySample = async () => {\n        setShowStatus(true);\n        const restApi = new API();\n\n        const sampleAPIObj = new API(getSampleAPIData());\n        // Creat the sample API -- 1st API call\n        const sampleAPI = await taskManager(sampleAPIObj.save(), 'create');\n        setNewSampleAPI(sampleAPI);\n\n        // Update the sample API -- 2nd API call\n        await taskManager(sampleAPI.updateSwagger(getSampleOpenAPI()), 'update');\n\n        if (!AuthManager.isNotPublisher()) {\n            const revisionPayload = {\n                description: 'Initial Revision',\n            };\n\n            // Creat a revision of sample API -- 3rd API call\n            const sampleAPIRevision = await taskManager(\n                restApi.createRevision(sampleAPI.id, revisionPayload),\n                'revision',\n            );\n            const envList = publisherSettings.environment.map((env) => env.name);\n            const deployRevisionPayload = [];\n            const getFirstVhost = (envName) => {\n                const env = publisherSettings.environment.find(\n                    (ev) => ev.name === envName && ev.vhosts.length > 0,\n                );\n                return env && env.vhosts[0].host;\n            };\n            if (envList && envList.length > 0) {\n                if (envList.includes('Default') && getFirstVhost('Default')) {\n                    deployRevisionPayload.push({\n                        name: 'Default',\n                        displayOnDevportal: true,\n                        vhost: getFirstVhost('Default'),\n                    });\n                } else if (getFirstVhost(envList[0])) {\n                    deployRevisionPayload.push({\n                        name: envList[0],\n                        displayOnDevportal: true,\n                        vhost: getFirstVhost(envList[0]),\n                    });\n                }\n            }\n            const revisionId = sampleAPIRevision.body.id;\n\n            // Deploy a revision of sample API -- 4th API call\n            await taskManager(restApi.deployRevision(sampleAPI.id,\n                revisionId, deployRevisionPayload), 'deploy');\n\n            // Deploy a revision of sample API -- 5th API call\n            await taskManager(sampleAPI.publish(), 'publish');\n        }\n    };\n\n    const allDone = !AuthManager.isNotPublisher() ? Object.values(tasksStatus)\n        .map((tasks) => tasks.completed)\n        .reduce((done, current) => current && done) : (tasksStatus.create.completed && newSampleAPI);\n    const anyErrors = Object.values(tasksStatus).map((tasks) => tasks.errors).find((error) => error !== false);\n    if (allDone && !anyErrors) {\n        const url = '/apis/' + newSampleAPI.id + '/overview';\n        return <Redirect to={url} />;\n    }\n    return (\n        <>\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-deploy-sample'\n                onClick={handleDeploySample}\n                component='button'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.rest.d.sample.content'\n                        defaultMessage={`Sample Pizza Shack\n                                    API`}\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id={'Apis.Listing.SampleAPI.SampleAPI.'\n                        + 'rest.d.sample.title'}\n                    defaultMessage='Deploy Sample API'\n                />\n\n            </LandingMenuItem>\n\n            <Modal\n                aria-labelledby='transition-modal-title'\n                aria-describedby='transition-modal-description'\n                className={classes.modal}\n                open={showStatus}\n                // onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={showStatus}>\n                    <Box\n                        bgcolor='background.paper'\n                        borderRadius='borderRadius'\n                        width={isXsOrBelow ? 4 / 5 : 1 / 4}\n                        className={classes.statusBox}\n                        p={2}\n                    >\n                        <Grid\n                            container\n                            direction='row'\n                            justify='center'\n                            alignItems='center'\n                        >\n                            <TaskState\n                                completed={tasksStatus.create.completed}\n                                errors={tasksStatus.create.errors}\n                                inProgress={tasksStatus.create.inProgress}\n                                completedMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Listing.SampleAPI.popup.create.complete'\n                                        defaultMessage='API created successfully!'\n                                    />\n                                )}\n                                inProgressMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Listing.SampleAPI.popup.create.inprogress'\n                                        defaultMessage='Creating sample API ...'\n                                    />\n                                )}\n                            >\n                                Create API\n                            </TaskState>\n                            <TaskState\n                                completed={tasksStatus.update.completed}\n                                errors={tasksStatus.update.errors}\n                                inProgress={tasksStatus.update.inProgress}\n                                completedMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Listing.SampleAPI.popup.update.complete'\n                                        defaultMessage='API updated successfully!'\n                                    />\n                                )}\n                                inProgressMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Listing.SampleAPI.popup.update.inprogress'\n                                        defaultMessage='Updating sample API ...'\n                                    />\n                                )}\n                            >\n                                Update API\n                            </TaskState>\n                            {!AuthManager.isNotPublisher() && (\n                                <>\n                                    <TaskState\n                                        completed={tasksStatus.revision.completed}\n                                        errors={tasksStatus.revision.errors}\n                                        inProgress={tasksStatus.revision.inProgress}\n                                        completedMessage={(\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.popup.revision.complete'\n                                                defaultMessage='API revision created successfully!'\n                                            />\n                                        )}\n                                        inProgressMessage={(\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.popup.revision.inprogress'\n                                                defaultMessage='Creating a revision of sample API ...'\n                                            />\n                                        )}\n                                    >\n                                        Revision API\n                                    </TaskState>\n                                    <TaskState\n                                        completed={tasksStatus.deploy.completed}\n                                        errors={tasksStatus.deploy.errors}\n                                        inProgress={tasksStatus.deploy.inProgress}\n                                        completedMessage={(\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.popup.deploy.complete'\n                                                defaultMessage='API deployed successfully!'\n                                            />\n                                        )}\n                                        inProgressMessage={(\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.popup.deploy.inprogress'\n                                                defaultMessage='Deploying sample API ...'\n                                            />\n                                        )}\n                                    >\n                                        Deploying API\n                                    </TaskState>\n                                    <TaskState\n                                        completed={tasksStatus.publish.completed}\n                                        errors={tasksStatus.publish.errors}\n                                        inProgress={tasksStatus.publish.inProgress}\n                                        completedMessage={(\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.popup.publish.complete'\n                                                defaultMessage='API published successfully!'\n                                            />\n                                        )}\n                                        inProgressMessage={(\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.popup.publish.inprogress'\n                                                defaultMessage='Publishing sample API to developer portal ...'\n                                            />\n                                        )}\n                                    >\n                                        Publish API\n                                    </TaskState>\n                                </>\n                            )}\n                            {anyErrors && (\n                                <>\n                                    <Grid item xs={8} />\n                                    <Grid item xs={2}>\n                                        <Button\n                                            onClick={() => {\n                                                setShowStatus(false);\n                                                tasksStatusDispatcher({ name: 'reset' });\n                                            }}\n                                            variant='outlined'\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.continue.on.close'\n                                                defaultMessage='Close'\n                                            />\n                                        </Button>\n                                    </Grid>\n                                    {newSampleAPI && (\n                                        <Grid item xs={2}>\n                                            <Link\n                                                underline='none'\n                                                component={RouterLink}\n                                                to={`/apis/${newSampleAPI.id}/overview`}\n                                            >\n                                                <FormattedMessage\n                                                    id='Apis.Listing.SampleAPI.continue.on.error'\n                                                    defaultMessage='Continue'\n                                                />\n                                            </Link>\n                                        </Grid>\n                                    )}\n                                </>\n                            )}\n                        </Grid>\n                    </Box>\n                </Fade>\n            </Modal>\n        </>\n    );\n};\n\nexport default SampleAPI;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from 'AppComponents/Shared/MuiAlert';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @return {*}\n */\nexport default function TaskState(props) {\n    const {\n        completed, errors, inProgress, children, completedMessage, inProgressMessage,\n    } = props;\n    let severity;\n    let message = children;\n    if (completed) {\n        severity = 'success';\n        if (completedMessage) {\n            message = completedMessage;\n        }\n    } else if (inProgress) {\n        severity = 'info';\n        if (inProgressMessage) {\n            message = inProgressMessage;\n        }\n    } else {\n        severity = 'waiting';\n    }\n    if (errors) {\n        severity = 'error';\n        if (errors.response) {\n            const { body } = errors.response;\n            message = (\n                <>\n                    <b>\n                        [\n                        {body.code}\n                        ]\n                    </b>\n                    {' '}\n                    :\n                    {body.description}\n                </>\n            );\n        } else {\n            message = (\n                <>\n                    <FormattedMessage\n                        id='Apis.Listing.TaskState.generic.error.prefix'\n                        defaultMessage='Error while'\n                    />\n                    {' '}\n                    {inProgressMessage}\n                </>\n            );\n        }\n    }\n\n    return (\n        <>\n            <Grid item md={2} lg={3} xs={3} />\n            <Grid item md={9} lg={8} xs={9}>\n                <Alert\n                    icon={inProgress ? <CircularProgress size={20} thickness={2} /> : null}\n                    variant={errors ? 'standard' : 'plain'}\n                    severity={severity}\n                >\n                    {message}\n                </Alert>\n            </Grid>\n            <Grid item md={1} lg={1} xs={0} />\n        </>\n    );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm4.59-12.42L10 14.17l-2.59-2.58L6 13l4 4 8-8z\"\n}), 'CheckCircleOutlineOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M11 15h2v2h-2v-2zm0-8h2v6h-2V7zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutlineOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');\n\nexports.default = _default;","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/icons/List';\nimport GridOn from '@material-ui/icons/GridOn';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport APICreateMenu from './APICreateMenu';\n\nconst styles = (theme) => ({\n    button: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n    root: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n    },\n    mainTitleWrapper: {\n        paddingLeft: 35,\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n    APICreateMenu: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n    },\n});\n\n/**\n *\n * @param props\n * @returns {*}\n */\nfunction getTitleForArtifactType(props, count) {\n    const {\n        isAPIProduct, query,\n    } = props;\n    const isSingular = count === 1;\n    if (query) {\n        return isSingular ? (\n            <FormattedMessage\n                id='Apis.Listing.components.TopMenu.search.results.singular'\n                defaultMessage='Search result'\n            />\n        ) : (\n            <FormattedMessage id='Apis.Listing.components.TopMenu.search.results' defaultMessage='Search results' />\n        );\n    } else if (isAPIProduct) {\n        return isSingular ? (\n            <FormattedMessage\n                id='Apis.Listing.components.TopMenu.apiproduct.singular'\n                defaultMessage='API product'\n            />\n        ) : (\n            <FormattedMessage\n                id='Apis.Listing.components.TopMenu.apiproducts.results'\n                defaultMessage='API products'\n            />\n        );\n    } else {\n        return isSingular ? (\n            <FormattedMessage id='Apis.Listing.components.TopMenu.api.singular' defaultMessage='API' />\n        ) : (\n            <FormattedMessage id='Apis.Listing.components.TopMenu.apis' defaultMessage='APIs' />\n        );\n    }\n}\n\n/**\n *\n * Renders the top menu\n * @param {*} props\n * @returns JSX\n */\nfunction TopMenu(props) {\n    const {\n        classes, data, setListType, count, isAPIProduct, listType, showToggle, query,\n    } = props;\n    if (count > 0) {\n        return (\n            <div className={classes.root}>\n                <div className={classes.mainTitleWrapper}>\n                    {data && (\n                        <>\n                            <Typography variant='h5' className={classes.mainTitle} component='div'>\n                                {isAPIProduct && (\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.TopMenu.apiproducts'\n                                        defaultMessage='API Products'\n                                    />\n                                )}\n                                { query && (\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.TopMenu.unified.search'\n                                        defaultMessage='Unified search'\n                                    />\n                                )}\n                                { !query && !isAPIProduct && (\n                                    <FormattedMessage id='Apis.Listing.components.TopMenu.apis' defaultMessage='APIs' />\n                                )}\n                            </Typography>\n                            <Box\n                                fontFamily='fontFamily'\n                                fontSize='body1.fontSize'\n                                display='flex'\n                            >\n                                <FormattedMessage\n                                    id='Apis.Listing.components.TopMenu.displaying'\n                                    defaultMessage='Total:'\n                                />\n                                <Box\n                                    id='itest-apis-listing-total'\n                                    fontWeight='fontWeightBold'\n                                    px={0.5}\n                                    mb={0.5}\n                                >\n                                    {count}\n                                </Box>\n                                {getTitleForArtifactType(props, count)}\n                            </Box>\n                        </>\n                    )}\n                </div>\n                <VerticalDivider height={70} />\n                <div className={classes.APICreateMenu}>\n                    {isAPIProduct && (\n                        <Link to='/api-products/create'>\n                            <Button variant='contained' color='primary'>\n                                <FormattedMessage\n                                    id='Apis.Listing.components.TopMenu.create.an.api.product'\n                                    defaultMessage='Create an API Product'\n                                />\n                            </Button>\n                        </Link>\n                    )}\n                    {!query && !isAPIProduct && (\n                        <APICreateMenu>\n                            <FormattedMessage\n                                id='Apis.Listing.components.TopMenu.create.api'\n                                defaultMessage='Create API'\n                            />\n                        </APICreateMenu>\n                    )}\n                </div>\n                {showToggle && (\n                    <Box height={32} m='auto'>\n                        <ButtonGroup color='primary' aria-label='outlined primary button group'>\n                            <IconButton onClick={() => setListType('grid')} aria-label='list'>\n                                <GridOn color={listType === 'grid' ? 'primary' : 'disabled'} />\n                            </IconButton>\n                            <IconButton onClick={() => setListType('list')} aria-label='grid'>\n                                <List color={listType === 'list' ? 'primary' : 'disabled'} />\n                            </IconButton>\n                        </ButtonGroup>\n                    </Box>\n                )}\n            </div>\n        );\n    } else {\n        return null;\n    }\n}\n\nTopMenu.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    setListType: PropTypes.func.isRequired,\n    listType: PropTypes.string.isRequired,\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    count: PropTypes.number.isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({}),\n    }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    showToggle: PropTypes.bool.isRequired,\n};\n\nexport default withStyles(styles)(TopMenu);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    useTheme,\n} from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\n\nimport AuthManager from 'AppData/AuthManager';\nimport RestAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/RestAPIMenu';\nimport SoapAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/SoapAPIMenu';\nimport GraphqlAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/GraphqlAPIMenu';\nimport StreamingAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/StreamingAPIMenu';\nimport ServiceCatalogMenu from 'AppComponents/Apis/Listing/Landing/Menus/ServiceCatalogMenu';\nimport MenuButton from 'AppComponents/Shared/MenuButton';\n\nconst useStyles = makeStyles((theme) => {\n    return {\n        dividerCls: {\n            height: '180px',\n            position: 'absolute',\n            top: '50%',\n            '-ms-transform': 'translateY(-50%)',\n            transform: 'translateY(-50%)',\n            margin: 'auto',\n        },\n        popover: {\n            [theme.breakpoints.down('sm')]: {\n                width: '95vw',\n            },\n            [theme.breakpoints.up('md')]: {\n                width: '85vw',\n            },\n            [theme.breakpoints.up('lg')]: {\n                width: '65vw',\n            },\n            paddingTop: theme.spacing(2),\n            paddingBottom: theme.spacing(2),\n        },\n    };\n});\n\nconst APICreateMenu = () => {\n    const theme = useTheme();\n    const { dividerCls, popover } = useStyles();\n    const {\n        graphqlIcon,\n        restApiIcon,\n        soapApiIcon,\n        streamingApiIcon,\n    } = theme.custom.landingPage.icons;\n    return (\n        !AuthManager.isNotCreator() && (\n            <MenuButton\n                buttonProps={{\n                    id: 'itest-create-api-menu-button',\n                    color: 'primary',\n                    variant: 'contained',\n                }}\n                menuList={(\n                    <Grid\n                        className={popover}\n                        container\n                        direction='row'\n                        justify='space-around'\n                        alignItems='flex-start'\n                        spacing={2}\n                    >\n                        <RestAPIMenu isCreateMenu icon={restApiIcon} />\n                        <SoapAPIMenu isCreateMenu icon={soapApiIcon} />\n                        <GraphqlAPIMenu isCreateMenu icon={graphqlIcon} />\n                        <StreamingAPIMenu isCreateMenu icon={streamingApiIcon} />\n                        <Box display={{ xs: 'none', md: 'block' }} mx={2}>\n                            <Divider className={dividerCls} light orientation='vertical' variant='inset' />\n                        </Box>\n                        <ServiceCatalogMenu isCreateMenu icon={streamingApiIcon} />\n                    </Grid>\n                )}\n            >\n                Create API\n            </MenuButton>\n        )\n    );\n};\nexport default APICreateMenu;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n// **** DEPRECATED ****\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport LandingMenuItem from 'AppComponents/Apis/Listing/Landing/components/LandingMenuItem';\nimport LandingMenu from 'AppComponents/Apis/Listing/Landing/components/LandingMenu';\nimport APICreateMenuSection from 'AppComponents/Apis/Listing/components/APICreateMenuSection';\n\n/**\n * NOTE: This is no longer in use and deprecated !!!!\n * @param {Object} props Component interface\n * @returns\n */\nconst ServiceCatalogMenu = (props) => {\n    const { icon, isCreateMenu } = props;\n    const Component = isCreateMenu ? APICreateMenuSection : LandingMenu;\n    const dense = isCreateMenu;\n    return (\n        <Component\n            id='itest-rest-api-create-menu'\n            openList={dense}\n            title={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.service.catalog.api'\n                    defaultMessage='Service Catalog'\n                />\n            )}\n            icon={icon}\n        >\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-create-from-service-catalog'\n                linkTo='/service-catalog'\n            >\n                <FormattedMessage\n                    id='Apis.Listing.import.from.service.catalog.title'\n                    defaultMessage='Import From Service Catalog'\n                />\n            </LandingMenuItem>\n        </Component>\n    );\n};\n\nexport default ServiceCatalogMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        marginRight: theme.spacing(2),\n    },\n    position: {\n        display: 'inherit',\n        zIndex: theme.zIndex.apiCreateMenu,\n    },\n});\n\n/**\n * Button with dropdown menu\n *\n * @class MenuButton\n * @extends {React.Component}\n */\nclass MenuButton extends React.Component {\n    /**\n     *Creates an instance of MenuButton.\n     * @param {Object} props @inheritdoc\n     * @memberof MenuButton\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof MenuButton\n     */\n    handleToggle(event) {\n        this.setState((state) => ({ open: !state.open }));\n        this.anchorEl = event.currentTarget;\n    }\n\n    /**\n     *\n     *\n     * @param {React.SyntheticEvent} event\n     * @memberof MenuButton\n     */\n    handleClose(event) {\n        if (this.anchorEl.contains(event.target)) {\n            return;\n        }\n        this.setState({ open: false });\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof MenuButton\n     */\n    render() {\n        const {\n            classes, children, menuList, buttonProps,\n        } = this.props;\n        const { open } = this.state;\n        return (\n            <>\n                <Button\n                    id='itest-id-createapi'\n                    aria-owns={open ? 'menu-list-grow' : null}\n                    aria-haspopup='true'\n                    onClick={this.handleToggle}\n                    {...buttonProps}\n                >\n                    {children}\n                    {' '}\n                    ▼\n                </Button>\n                <Popper\n                    open={open}\n                    placement='bottom-start'\n                    anchorEl={this.anchorEl}\n                    transition\n                    disablePortal\n                    modifiers={{\n                        flip: {\n                            enabled: true,\n                        },\n                        preventOverflow: {\n                            enabled: true,\n                            boundariesElement: 'scrollParent',\n                        },\n                    }}\n                    className={classes.position}\n                >\n                    {({ TransitionProps, placement }) => (\n                        <Grow\n                            {...TransitionProps}\n                            id='menu-list-grow'\n                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={this.handleClose}>{menuList}</ClickAwayListener>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </>\n        );\n    }\n}\n\nMenuButton.propTypes = {\n    classes: PropTypes.shape({ position: PropTypes.shape({}) }).isRequired,\n    menuList: PropTypes.element.isRequired,\n    children: PropTypes.shape({}).isRequired,\n    buttonProps: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(MenuButton);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { useTheme } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport OnboardingMenuCard from 'AppComponents/Shared/Onboarding/OnboardingMenuCard';\nimport Onboarding from 'AppComponents/Shared/Onboarding/Onboarding';\nimport { PropTypes } from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport AuthManager from 'AppData/AuthManager';\nimport Alert from 'AppComponents/Shared/MuiAlert';\n\n/**\n * Show Initial Welcome card if no APIs are available to list\n * Handle deploying a sample API (Create and Publish)\n *\n * @class SampleAPI\n * @extends {Component}\n */\nfunction SampleAPI() {\n    const theme = useTheme();\n    const { apiproductAddIcon } = theme.custom.landingPage.icons;\n    return (\n        <Onboarding\n            title={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPIProduct.title'\n                    defaultMessage='Let’s get started !'\n                />\n            )}\n            subTitle={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPIProduct.description'\n                    defaultMessage='Combine multiple API resources in to a single API'\n                />\n            )}\n        >\n            {AuthManager.isNotPublisher()\n            && (\n                <>\n                    <Grid item xs={6}>\n                        <Alert variant='outlined' severity='warning'>\n                            <FormattedMessage\n                                id='Apis.Listing.SampleAPIProduct.creator.error'\n                                defaultMessage='API is not deployed yet! Please deploy the API before trying out'\n                            />\n                        </Alert>\n                    </Grid>\n                    <Grid item xs={12} />\n                </>\n            )}\n            <OnboardingMenuCard\n                disabled={AuthManager.isNotPublisher()}\n                id='itest-id-create-api-product'\n                to='/api-products/create'\n                name='API Product'\n                iconName={apiproductAddIcon}\n            />\n        </Onboarding>\n    );\n}\n\nSampleAPI.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default withRouter(injectIntl(SampleAPI));\n","/**\n * Copyright (c) 2019, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable */\nimport API from 'AppData/api';\nimport APIClientFactory from './APIClientFactory';\nimport Utils from './Utils';\nimport Resource from './Resource';\n\n/**\n * An abstract representation of an API Product\n */\nclass APIProduct extends Resource {\n    constructor(name, context, kwargs) {\n        super();\n        let properties = kwargs;\n        if (name instanceof Object) {\n            properties = name;\n        } else {\n            this.name = name;\n            this.version = '1.0.0';\n            this.context = context;\n            this.isDefaultVersion = false;\n            this.transport = ['http', 'https'];\n            this.visibility = 'PUBLIC';\n            this.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: '',\n                },\n                production_endpoints: {\n                    url: '',\n                },\n            };\n        }\n        this._data = properties;\n        for (const key in properties) {\n            if (Object.prototype.hasOwnProperty.call(properties, key)) {\n                this[key] = properties[key];\n            }\n        }\n        this.apiType = API.CONSTS.APIProduct;\n        this.getType = this.getType.bind(this);\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {object} Metadata for API request\n     * @private\n     */\n    _requestMetaData() {\n        Resource._requestMetaData();\n    }\n\n    getType() {\n        return this.type;\n    }\n\n    getSettings() {\n        const promisedSettings = this.client.then(client => {\n            return client.apis['Settings'].getSettings();\n        });\n        return promisedSettings.then(response => response.body);\n    }\n\n    getMonetization(id, callback = null) {\n        const promiseMonetization = this.client.then(client => {\n            return client.apis['API Monetization'].getAPIMonetization(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promiseMonetization.then(response => response.body);\n    }\n\n    configureMonetizationToApiProduct(id, body) {\n        const promised_status = this.client.then(client => {\n            return client.apis['API Monetization'].addAPIMonetization({\n                apiId: id,\n                body,\n            });\n        });\n        return promised_status;\n    }\n\n    getSubscriptionPolicies(id, callback = null) {\n        const promisePolicies = this.client.then(client => {\n            return client.apis['APIs'].getAPISubscriptionPolicies(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promisePolicies.then(response => response.body);\n    }\n\n    getMonetizationInvoice(id, callback = null) {\n        const promiseInvoice = this.client.then(client => {\n            return client.apis['API Monetization'].getSubscriptionUsage(\n                {\n                    subscriptionId: id\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promiseInvoice.then(response => response.body);\n    }\n\n    /**\n     * Create an API Product with the given parameters in template\n     * @param {Object} api_product_data - APIProduct data which need to fill the placeholder values in the @get_template\n     * @returns {Promise} Promise after creating API Product\n     */\n    saveProduct() {\n        const promisedAPIResponse = this.client.then(client => {\n            const properties = client.spec.components.schemas.APIProduct.properties;\n            const data = {};\n\n            Object.keys(this).forEach(apiAttribute => {\n                if (apiAttribute in properties) {\n                    if (apiAttribute != 'apiType') {\n                        data[apiAttribute] = this[apiAttribute];\n                    }\n                }\n            });\n            const payload = {\n                'Content-Type': 'application/json',\n            };\n            const requestBody = {\n                requestBody: data\n            }\n            return client.apis['API Products'].createAPIProduct(payload, requestBody, this._requestMetaData());\n        });\n        return promisedAPIResponse.then(response => {\n            return new API(response.body);\n        });\n    }\n    /**\n     * Create an API Product with the given parameters in template and call the callback method given optional.\n     * @param {Object} apiData - API data which need to fill the placeholder values in the @get_template\n     * @returns {Promise} Promise after creating and optionally calling the callback method.\n     */\n    create(apiData) {\n        let payload;\n        let promise_create;\n\n        payload = {\n            body: apiData,\n            'Content-Type': 'application/json',\n        };\n        promise_create = this.client.then(client => {\n            return client.apis['API Products'].createAPIProduct(payload, this._requestMetaData());\n        });\n\n        return promise_create;\n    }\n    /**\n     *\n     * Instance method of the API class to provide raw JSON object\n     * which is API body friendly to use with REST api requests\n     * Use this method instead of accessing the private _data object for\n     * converting to a JSON representation of an API object.\n     * Note: This is shallow coping\n     * Basically this is the revers operation in constructor.\n     * This method simply iterate through all the object properties\n     * and copy their values to new object excluding the properties in excludes list.\n     * So use this method sparingly!!\n     * @memberof API\n     * @param {Array} [userExcludes=[]] List of properties that are need to be excluded from the generated JSON object\n     * @returns {JSON} JSON representation of the API\n     */\n    toJSON(resource = this, userExcludes = []) {\n        var copy = {},\n            excludes = ['_data', 'client', 'type', ...userExcludes];\n        for (var prop in resource) {\n            if (!excludes.includes(prop)) {\n                copy[prop] = resource[prop];\n            }\n        }\n        return copy;\n    }\n\n    /**\n     * Get details of a given APIProduct\n     * @param id {string} UUID of the api-product.\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    static get(id) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT).client;\n        const promisedAPIProduct = apiClient\n            .then(client => {\n                return client.apis['API Products'].getAPIProduct(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            });\n        return promisedAPIProduct.then(response => {\n            return new APIProduct(response.body);\n        });\n    }\n\n    /**\n     *\n     * Static method for get all API Products for current environment user.\n     * @param {Object} params API Products filtering parameters i:e { \"name\": \"MyBank Product\"}\n     * @returns {Promise} promise object return from SwaggerClient-js\n     */\n    static all(params) {\n        let query = '';\n        if (params && 'query' in params) {\n            for (const [key, value] of Object.entries(params.query)) {\n                query += `${key}:${value},`;\n            }\n            params.query = query;\n        }\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT).client;\n        const promisedProducts = apiClient\n            .then(client => {\n                return client.apis['API Products'].getAllAPIProducts(params, Resource._requestMetaData());\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedProducts.then(response => {\n            response.obj.apiType = API.CONSTS.APIProduct;\n            return response;\n        });\n    }\n\n    /**\n     * Update an api Product via PUT HTTP method, Need to give the updated API Product object as the argument.\n     * @param apiProduct {Object} Updated API Product object(JSON) which needs to be updated\n     */\n    update(updatedProperties) {\n        const updatedAPI = { ...this.toJSON(), ...this.toJSON(updatedProperties) };\n        const promisedUpdate = this.client.then(client => {\n            const payload = {\n                apiProductId: updatedAPI.id,\n            };\n            const requestBody = {\n                requestBody: updatedAPI,\n            }\n            return client.apis['API Products'].updateAPIProduct(payload, requestBody);\n        });\n        return promisedUpdate.then(response => {\n            return new APIProduct(response.body);\n        });\n    }\n\n    /**\n     * Get the thumnail of an API Product\n     *\n     * @param id {string} UUID of the api product\n     */\n    getAPIProductThumbnail(id) {\n        const promisedAPIThumbnail = this.client\n            .then(client => {\n                return client.apis['API Products'].getAPIProductThumbnail(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n\n        return promisedAPIThumbnail;\n    }\n\n    /**\n     * Add new thumbnail image to an API Product\n     *\n     * @param {String} id id of the API Product\n     * @param {File} imageFile thumbnail image to be uploaded\n     */\n    addAPIProductThumbnail(id, imageFile) {\n        const promisedAddAPIThumbnail = this.client\n            .then(client => {\n                const payload = {\n                    apiProductId: id,\n                    'Content-Type': imageFile.type,\n                };\n                return client.apis['API Products'].updateAPIProductThumbnail(\n                    payload,\n                    {\n                        requestBody: {\n                            file: imageFile,\n                        }\n                    },\n                    this._requestMetaData({\n                        'Content-Type': 'multipart/form-data',\n                    }),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n\n        return promisedAddAPIThumbnail;\n    }\n\n    /**\n     *\n     * Delete an API Product given its UUID\n     * @static\n     * @param {String} id API Product UUID\n     */\n    static delete(id) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT).client;\n        return apiClient\n            .then(client => {\n                return client.apis['API Products'].deleteAPIProduct(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }\n\n    /**\n     * Add document to API Product\n     * @param {*} id API Product ID to which the document should be attached\n     * @param {*} body\n     */\n    addDocument(id, body) {\n        const promisedAddDocument = this.client\n            .then(client => {\n                const payload = {\n                    apiProductId: id,\n                    'Content-Type': 'application/json',\n                };\n                return client.apis['API Product Documents'].addAPIProductDocument(\n                    payload,\n                    {\n                        requestBody: body,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedAddDocument;\n    }\n\n    /**\n     * Returns documents attached to a given API Product\n     *\n     * @param {String} id API Product UUID\n     */\n    getDocuments(id, limit = 1000) {\n        const promisedDocuments = this.client\n            .then(client => {\n                return client.apis['API Product Documents'].getAPIProductDocuments(\n                    {\n                        apiProductId: id,\n                        limit,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedDocuments;\n    }\n\n    /**\n     * Updates a product document\n     * @param {*} productId\n     * @param {*} docId\n     * @param {*} body\n     */\n    updateDocument(productId, docId, body) {\n        const promisedUpdateDocument = this.client.then(client => {\n            const payload = {\n                apiProductId: productId,\n                documentId: docId,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Product Documents']\n                .updateAPIProductDocument(\n                    payload,\n                    {\n                        requestBody: body,\n                    },\n                    this._requestMetaData()\n                )\n                .catch(error => {\n                    console.error(error);\n                });\n        });\n        return promisedUpdateDocument;\n    }\n\n    /**\n     * Get specified document attached to specified product\n     * @param {*} productId\n     * @param {*} docId\n     */\n    getDocument(productId, docId) {\n        const promisedDocument = this.client\n            .then(client => {\n                return client.apis['API Product Documents'].getAPIProductDocument(\n                    {\n                        apiProductId: productId,\n                        documentId: docId,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedDocument;\n    }\n\n    /**\n     * Add inline content to a INLINE type document\n     * @param {*} apiProductId API Product ID\n     * @param {*} documentId Document ID\n     * @param {*} sourceType\n     * @param {*} inlineContent Content to be added to document\n     */\n    addInlineContentToDocument(apiProductId, documentId, sourceType, inlineContent) {\n        const promise = this.client\n            .then(client => {\n                const payload = {\n                    apiProductId,\n                    documentId,\n                    sourceType,\n                    'Content-Type': 'application/json',\n                };\n                return client.apis[\n                    'API Product Documents'\n                ].addAPIProductDocumentContent(\n                    payload,\n                    {\n                        requestBody: {\n                            inlineContent: inlineContent\n                        }\n                    },\n                    this._requestMetaData({\n                        'Content-Type': 'multipart/form-data',\n                    }),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promise;\n    }\n\n    /**\n     * Get the inline content of a given document\n     * @param {*} apiProductId\n     * @param {*} docId\n     */\n    getInlineContentOfDocument(apiProductId, docId) {\n        const promisedDocContent = this.client\n            .then(client => {\n                const payload = {\n                    apiProductId,\n                    documentId: docId,\n                };\n                return client.apis[\n                    'API Product Documents'\n                ].getAPIProductDocumentContent(payload);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedDocContent;\n    }\n\n    /**\n     * Delete specified document\n     * @param {*} productId\n     * @param {*} docId\n     */\n    deleteDocument(productId, docId) {\n        const promiseDeleteDocument = this.client\n            .then(client => {\n                return client.apis['API Product Documents'].deleteAPIProductDocument(\n                    {\n                        apiProductId: productId,\n                        documentId: docId,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promiseDeleteDocument;\n    }\n\n    /**\n     * Add a File resource to a document\n     * @param {*} productId\n     * @param {*} docId\n     * @param {*} fileToDocument\n     */\n    addFileToDocument(productId, docId, fileToDocument) {\n        const promiseAddFileToDocument = this.client.then(client => {\n            const payload = {\n                apiProductId: productId,\n                documentId: docId,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Product Documents'].addAPIProductDocumentContent(\n                payload,\n                {\n                    requestBody: {\n                        file: fileToDocument\n                    }\n                },\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n\n        return promiseAddFileToDocument;\n    }\n\n    /**\n     * Get list of revisions.\n     *\n     * @param {string} apiProductId Id of the API.\n     * */\n    getProductRevisions(apiProductId) {\n        const promiseGetRevision = this.client\n            .then(client => {\n                   return client.apis['API Product Revisions'].getAPIProductRevisions( {\n                    apiProductId: apiProductId,\n                },\n            );\n        });\n        return promiseGetRevision;\n    }\n\n    /**\n     * Get list of revisions with environments.\n     *\n     * @param {string} apiProductId Id of the API.\n     * */\n    getProductRevisionsWithEnv(apiProductId) {\n        const promiseGetRevisionWithEnv = this.client\n            .then(client => {\n                return client.apis['API Product Revisions'].getAPIProductRevisions( \n                    {\n                        apiProductId: apiProductId,\n                        query: 'deployed:true',\n                    },\n            );\n        });\n        return promiseGetRevisionWithEnv;    \n    }\n\n    /**\n     * Add revision.\n     *\n     * @param {string} apiProductId Id of the API.\n     * @param {Object} body Revision Object.\n     * */\n    createProductRevision(apiProductId, body) {\n        const promiseAddRevision = this.client\n            .then(client => {\n                return client.apis['API Product Revisions'].createAPIProductRevision(\n                    {apiProductId: apiProductId},\n                    { requestBody: body},\n                    this._requestMetaData(),\n                );\n            }); \n        return promiseAddRevision;\n    }\n    /**\n     * Delete revision.\n     *\n     * @param {string} apiProductId Id of the API.\n     * @param {Object} body Revision Object.\n     * */\n    deleteProductRevision(apiProductId, revisionId) {\n        const promiseDeleteRevision = this.client\n            .then(client => {\n                return client.apis['API Product Revisions'].deleteAPIProductRevision(\n                    {   \n                        apiProductId: apiProductId,\n                        revisionId: revisionId\n                    },\n                    this._requestMetaData(),\n                );\n            });\n        return  promiseDeleteRevision;  \n    }\n\n    /**\n     * export an API Directory as A Zpi file\n     * @returns {promise} Promise Containing the ZPI file of the selected API\n     */\n     export() {\n        const apiZip = this.client.then((client) => {\n            return client.apis['Import Export'].exportAPIProduct({\n                name: this.name,\n                version: '1.0.0'\n            },  this._requestMetaData({\n                    'accept': 'application/zip'\n                })\n            );\n        });\n        return apiZip;\n    }\n\n    /**\n     * Undeploy revision.\n     *\n     * @param {string} apiProductId Id of the API.\n     * @param {Object} body Revision Object.\n     * */\n    undeployProductRevision(apiProductId, revisionId, body) {\n        const promiseUndeployRevision = this.client\n            .then(client => {\n                return client.apis['API Product Revisions'].undeployAPIProductRevision(\n                    {   \n                        apiProductId: apiProductId,\n                        revisionId: revisionId\n                    },\n                    { requestBody: body},\n                    this._requestMetaData(),\n                );\n            });\n        return  promiseUndeployRevision;     \n    }\n\n     /**\n     * Undeploy revision.\n     *\n     * @param {string} apiProductId Id of the API.\n     * @param {Object} body Revision Object.\n     * */\n    deployProductRevision(apiProductId, revisionId, body) {\n        const promiseDeployRevision = this.client\n            .then(client => {\n                return client.apis['API Product Revisions'].deployAPIProductRevision(\n                    {   \n                        apiProductId: apiProductId,\n                        revisionId: revisionId\n                    },\n                    { requestBody: body},\n                    this._requestMetaData(),\n                );\n            });\n        return promiseDeployRevision;  \n    }\n\n    /**\n     * Restore revision.\n     *\n     * @param {string} apiProductId Id of the API.\n     * @param {Object} body Revision Object.\n     * */\n    restoreProductRevision(apiProductId, revisionId) {\n        const promiseRestoreRevision = this.client\n            .then(client => {\n                return client.apis['API Product Revisions'].restoreAPIProductRevision(\n                    {   \n                        apiProductId: apiProductId,\n                        revisionId: revisionId\n                    },\n                    this._requestMetaData(),\n                );\n            });\n        return promiseRestoreRevision;  \n    }\n\n    /**\n    * Change displayInDevportal.\n    *\n    * @param {string} apiProductId Id of the API.\n    * @param {string} deploymentId Id of the API.\n    * @param {Object} body Revision Object.\n    * */\n    displayInDevportalProduct(apiProductId, deploymentId, body) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT).client;\n        return apiClient.then(\n            client => {\n                return client.apis['API Product Revisions'].updateAPIProductDeployment(\n                    {\n                        apiProductId: apiProductId,\n                        deploymentId: deploymentId\n                    },\n                    { requestBody: body},\n                    this._requestMetaData(),\n                );\n            });\n    }\n\n    /**\n     * Update an api swagger via PUT HTTP method\n     * @param {*} swagger\n     */\n    updateSwagger(swagger) {\n        const promisedUpdate = this.client.then(client => {\n            const payload = {\n                apiProductId: this.id,\n                apiDefinition: JSON.stringify(swagger),\n                'Content-Type': 'multipart/form-data',\n            };\n            return client.apis['API Products']\n                .put_api_products__apiProductId__swagger(\n                    payload,\n                    this._requestMetaData({\n                        'Content-Type': 'multipart/form-data',\n                    }),\n                )\n                .catch(error => {\n                    console.error(error);\n                });\n        });\n        return promisedUpdate.then(response => {\n            return this;\n        });\n    }\n\n    /**\n     * Get the swagger of an API Product\n     * @param id {String} UUID of the API Product in which the swagger is needed\n     */\n    getSwagger(id = this.id) {\n        const promiseGet = this.client\n            .then(client => {\n                return client.apis['API Products'].getAPIProductSwagger(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promiseGet;\n    }\n}\n\nexport default APIProduct;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    linkRoot: {\n        color: theme.custom.landingPage.menu.primary,\n        '&:hover': {\n            backgroundColor: '#0B78F014',\n            textDecoration: 'none',\n        },\n    },\n}));\n\nconst LandingMenuItem = (props) => {\n    const {\n        helperText, children, id, linkTo, component = 'Link', onClick, dense,\n    } = props;\n    const { linkRoot } = useStyles();\n    return (\n        <Grid\n            item\n            xs={12}\n        >\n            <Typography\n                color='primary'\n                variant={dense ? 'subtitle1' : 'h6'}\n            >\n                {/* Using React Router Links with Material-UI Links\n                Pattern as suggested in https://material-ui.com/guides/composition/#link */}\n                {component.toLowerCase() === 'link' && (\n                    <Link\n                        className={linkRoot}\n                        id={id}\n                        component={RouterLink}\n                        to={linkTo}\n                    >\n                        {children}\n                    </Link>\n                )}\n                {component.toLowerCase() === 'button' && (\n                    <Button\n                        id={id}\n                        size={dense ? 'small' : 'medium'}\n                        onClick={onClick}\n                        color='primary'\n                        variant='outlined'\n                    >\n                        {children}\n                    </Button>\n                )}\n\n            </Typography>\n            <Box\n                color='text.secondary'\n                fontFamily='fontFamily'\n                fontSize={dense ? 'caption.fontSize' : 'body2.fontSize'}\n            >\n                {helperText}\n            </Box>\n        </Grid>\n    );\n};\n\nexport default LandingMenuItem;\n","import React, { useState } from 'react';\nimport blue from '@material-ui/core/colors/blue';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Configurations from 'Config';\nimport Fade from '@material-ui/core/Fade';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: theme.spacing(32),\n    },\n    boxTransition: {\n        transition: 'box-shadow 0.9s cubic-bezier(.25,.8,.25,1)',\n        cursor: 'pointer',\n    },\n    overlayBox: {\n        cursor: 'auto',\n        outline: 'none',\n        'border-color': '#f9f9f9', // TODO: take from theme ~tmkb\n        'box-shadow': '0 0 6px 4px #f9f9f9',\n        'border-radius': '5px',\n    },\n    overlayCloseButton: {\n        float: 'right',\n    },\n}));\n\nconst LandingMenu = (props) => {\n    const {\n        title, icon, children, id,\n    } = props;\n    const [isHover, setIsHover] = useState(false);\n    const [isCollapsed, setIsCollapsed] = useState(false);\n    const [isFadeOut, setIsFadeOut] = useState(true);\n    const {\n        boxTransition, overlayBox, overlayCloseButton, root,\n    } = useStyles();\n    const onMouseOver = () => {\n        setIsHover(true);\n    };\n    const onMouseOut = () => {\n        setIsHover(false);\n    };\n\n    return (\n        <Grid\n            className={root}\n            item\n            xs={12}\n            sm={5}\n            md={3}\n            lg={2}\n        >\n            <Box\n                id={id}\n                className={boxTransition}\n                onMouseOver={onMouseOver}\n                onMouseOut={onMouseOut}\n                bgcolor='background.paper'\n                justifyContent='center'\n                alignItems='center'\n                borderRadius={8}\n                borderColor='grey.300'\n                display='flex'\n                border={1}\n                boxShadow={isHover ? 4 : 1}\n                minHeight={340}\n                p={1}\n                color={blue[900]}\n                fontSize='h4.fontSize'\n                fontFamily='fontFamily'\n                flexDirection='row'\n                onClick={(e) => { setIsCollapsed(true); setIsFadeOut(false); e.preventDefault(); e.stopPropagation(); }}\n                position='relative'\n            >\n                <Grid\n                    container\n                    direction='row'\n                    justify='center'\n                    alignItems='center'\n                >\n                    <Grid item xs={12}>\n                        <Box\n                            alignItems='center'\n                            mt={2}\n                            mb={4}\n                            justifyContent='center'\n                            display={{ xs: 'none', sm: 'flex' }}\n                        >\n                            <img\n                                width='190px'\n                                src={Configurations.app.context\n                                    + icon}\n                                alt={title}\n                                aria-hidden='true'\n                            />\n                        </Box>\n                    </Grid>\n                    {title}\n                </Grid>\n                <Box\n                    position='absolute'\n                    top={5}\n                    left={5}\n                    height='97%'\n                    bgcolor='#f8f8fb'\n                    textAlign='center'\n                    width='97%'\n                    className={overlayBox}\n                    visibility={isFadeOut && 'hidden'}\n                >\n                    <Fade\n                        onExited={() => setIsFadeOut(true)}\n                        timeout={{ enter: 500, exit: 150 }}\n                        in={isCollapsed}\n                    >\n                        <Box>\n                            <IconButton\n                                className={overlayCloseButton}\n                                onClick={(e) => {\n                                    setIsCollapsed(false);\n                                    e.preventDefault(); e.stopPropagation();\n                                }}\n                            >\n                                <CloseIcon />\n                            </IconButton>\n                            <Grid\n                                container\n                                direction='row'\n                                justify='flex-start'\n                                alignItems='center'\n                                spacing={4}\n                            >\n                                {/* Menu links or buttons */}\n                                {children}\n                            </Grid>\n                        </Box>\n                    </Fade>\n                </Box>\n            </Box>\n        </Grid>\n    );\n};\n\nexport default LandingMenu;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst APICreateMenuSection = (props) => {\n    const {\n        title, children,\n    } = props;\n\n\n    return (\n        <Grid\n            item\n            xs={11}\n            sm={5}\n            md={2}\n        >\n            <Box mb={2}>\n                <Typography\n                    variant='h6'\n                    align='left'\n                >\n                    {title}\n                </Typography>\n            </Box>\n            <Grid\n                container\n                direction='row'\n                justify='flex-start'\n                alignItems='center'\n                spacing={4}\n            >\n                {/* Menu links or buttons */}\n                {children}\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default APICreateMenuSection;\n"],"sourceRoot":""}