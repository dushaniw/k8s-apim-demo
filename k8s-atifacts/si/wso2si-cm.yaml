apiVersion: v1
data:
  deployment.yaml: |
    ################################################################################
    #   Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved
    #
    #   Licensed under the Apache License, Version 2.0 (the \"License\");
    #   you may not use this file except in compliance with the License.
    #   You may obtain a copy of the License at
    #
    #   http://www.apache.org/licenses/LICENSE-2.0
    #
    #   Unless required by applicable law or agreed to in writing, software
    #   distributed under the License is distributed on an \"AS IS\" BASIS,
    #   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    #   See the License for the specific language governing permissions and
    #   limitations under the License.
    ################################################################################

      # Carbon Configuration Parameters
    wso2.carbon:
        # value to uniquely identify a server
      id: wso2-si
        # server name
      name: WSO2 Streaming Integrator
        # server type
      type: wso2-si
        # ports used by this server
      ports:
          # port offset
        offset: 0

    wso2.transport.http:
      transportProperties:
        -
          name: "server.bootstrap.socket.timeout"
          value: 60
        -
          name: "client.bootstrap.socket.timeout"
          value: 60
        -
          name: "latency.metrics.enabled"
          value: true

      listenerConfigurations:
        -
          id: "default"
          host: "0.0.0.0"
          port: 9090
        -
          id: "msf4j-https"
          host: "0.0.0.0"
          port: 9443
          scheme: https
          keyStoreFile: "${carbon.home}/resources/security/wso2carbon.jks"
          keyStorePassword: wso2carbon
          certPass: wso2carbon

      senderConfigurations:
        -
          id: "http-sender"

    siddhi.stores.query.api:
      transportProperties:
        -
          name: "server.bootstrap.socket.timeout"
          value: 60
        -
          name: "client.bootstrap.socket.timeout"
          value: 60
        -
          name: "latency.metrics.enabled"
          value: true

      listenerConfigurations:
        -
          id: "default"
          host: "0.0.0.0"
          port: 7070
        -
          id: "msf4j-https"
          host: "0.0.0.0"
          port: 7444
          scheme: https
          keyStoreFile: "${carbon.home}/resources/security/wso2carbon.jks"
          keyStorePassword: wso2carbon
          certPass: wso2carbon

      # Configuration used for the databridge communication
    databridge.config:
        # No of worker threads to consume events
        # THIS IS A MANDATORY FIELD
      workerThreads: 10
        # Maximum amount of messages that can be queued internally in MB
        # THIS IS A MANDATORY FIELD
      maxEventBufferCapacity: 10000000
        # Queue size; the maximum number of events that can be stored in the queue
        # THIS IS A MANDATORY FIELD
      eventBufferSize: 2000
        # Keystore file path
        # THIS IS A MANDATORY FIELD
      keyStoreLocation : ${sys:carbon.home}/resources/security/wso2carbon.jks
        # Keystore password
        # THIS IS A MANDATORY FIELD
      keyStorePassword : wso2carbon
        # Session Timeout value in mins
        # THIS IS A MANDATORY FIELD
      clientTimeoutMin: 30
        # Data receiver configurations
        # THIS IS A MANDATORY FIELD
      dataReceivers:
      -
          # Data receiver configuration
        dataReceiver:
            # Data receiver type
            # THIS IS A MANDATORY FIELD
          type: Thrift
            # Data receiver properties
          properties:
            tcpPort: '7611'
            sslPort: '7711'

      -
          # Data receiver configuration
        dataReceiver:
            # Data receiver type
            # THIS IS A MANDATORY FIELD
          type: Binary
            # Data receiver properties
          properties:
            tcpPort: '9611'
            sslPort: '9711'
            tcpReceiverThreadPoolSize: '100'
            sslReceiverThreadPoolSize: '100'
            hostName: 0.0.0.0

      # Configuration of the Data Agents - to publish events through databridge
    data.agent.config:
        # Data agent configurations
        # THIS IS A MANDATORY FIELD
      agents:
      -
          # Data agent configuration
        agentConfiguration:
            # Data agent name
            # THIS IS A MANDATORY FIELD
          name: Thrift
            # Data endpoint class
            # THIS IS A MANDATORY FIELD
          dataEndpointClass: org.wso2.carbon.databridge.agent.endpoint.thrift.ThriftDataEndpoint
            # Data publisher strategy
          publishingStrategy: async
            # Trust store path
          trustStorePath: '${sys:carbon.home}/resources/security/client-truststore.jks'
            # Trust store password
          trustStorePassword: 'wso2carbon'
            # Queue Size
          queueSize: 32768
            # Batch Size
          batchSize: 200
            # Core pool size
          corePoolSize: 1
            # Socket timeout in milliseconds
          socketTimeoutMS: 30000
            # Maximum pool size
          maxPoolSize: 1
            # Keep alive time in pool
          keepAliveTimeInPool: 20
            # Reconnection interval
          reconnectionInterval: 30
            # Max transport pool size
          maxTransportPoolSize: 250
            # Max idle connections
          maxIdleConnections: 250
            # Eviction time interval
          evictionTimePeriod: 5500
            # Min idle time in pool
          minIdleTimeInPool: 5000
            # Secure max transport pool size
          secureMaxTransportPoolSize: 250
            # Secure max idle connections
          secureMaxIdleConnections: 250
            # secure eviction time period
          secureEvictionTimePeriod: 5500
            # Secure min idle time in pool
          secureMinIdleTimeInPool: 5000
            # SSL enabled protocols
          sslEnabledProtocols: TLSv1.1,TLSv1.2
            # Ciphers
          ciphers: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
      -
          # Data agent configuration
        agentConfiguration:
            # Data agent name
            # THIS IS A MANDATORY FIELD
          name: Binary
            # Data endpoint class
            # THIS IS A MANDATORY FIELD
          dataEndpointClass: org.wso2.carbon.databridge.agent.endpoint.binary.BinaryDataEndpoint
            # Data publisher strategy
          publishingStrategy: async
            # Trust store path
          trustStorePath: '${sys:carbon.home}/resources/security/client-truststore.jks'
            # Trust store password
          trustStorePassword: 'wso2carbon'
            # Queue Size
          queueSize: 32768
            # Batch Size
          batchSize: 200
            # Core pool size
          corePoolSize: 1
            # Socket timeout in milliseconds
          socketTimeoutMS: 30000
            # Maximum pool size
          maxPoolSize: 1
            # Keep alive time in pool
          keepAliveTimeInPool: 20
            # Reconnection interval
          reconnectionInterval: 30
            # Max transport pool size
          maxTransportPoolSize: 250
            # Max idle connections
          maxIdleConnections: 250
            # Eviction time interval
          evictionTimePeriod: 5500
            # Min idle time in pool
          minIdleTimeInPool: 5000
            # Secure max transport pool size
          secureMaxTransportPoolSize: 250
            # Secure max idle connections
          secureMaxIdleConnections: 250
            # secure eviction time period
          secureEvictionTimePeriod: 5500
            # Secure min idle time in pool
          secureMinIdleTimeInPool: 5000
            # SSL enabled protocols
          sslEnabledProtocols: TLSv1.1,TLSv1.2
            # Ciphers
          ciphers: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256

    # This is the main configuration for metrics
    wso2.metrics:
      # Enable Metrics
      enabled: false
      reporting:
        console:
          - # The name for the Console Reporter
            name: Console

            # Enable Console Reporter
            enabled: false

            # Polling Period in seconds.
            # This is the period for polling metrics from the metric registry and printing in the console
            pollingPeriod: 5

    wso2.metrics.jdbc:
      # Data Source Configurations for JDBC Reporters
      dataSource:
        # Default Data Source Configuration
        - &JDBC01
          # JNDI name of the data source to be used by the JDBC Reporter.
          # This data source should be defined in a *-datasources.xml file in conf/datasources directory.
          dataSourceName: java:comp/env/jdbc/WSO2MetricsDB
          # Schedule regular deletion of metrics data older than a set number of days.
          # It is recommended that you enable this job to ensure your metrics tables do not get extremely large.
          # Deleting data older than seven days should be sufficient.
          scheduledCleanup:
            # Enable scheduled cleanup to delete Metrics data in the database.
            enabled: true

            # The scheduled job will cleanup all data older than the specified days
            daysToKeep: 3

            # This is the period for each cleanup operation in seconds.
            scheduledCleanupPeriod: 86400

      # The JDBC Reporter is in the Metrics JDBC Core feature
      reporting:
        # The JDBC Reporter configurations will be ignored if the Metrics JDBC Core feature is not available in runtime
        jdbc:
          - # The name for the JDBC Reporter
            name: JDBC

            # Enable JDBC Reporter
            enabled: true

            # Source of Metrics, which will be used to identify each metric in database -->
            # Commented to use the hostname by default
            # source: Carbon

            # Alias referring to the Data Source configuration
            dataSource: *JDBC01

            # Polling Period in seconds.
            # This is the period for polling metrics from the metric registry and updating the database with the values
            pollingPeriod: 60

      # Deployment configuration parameters
    wso2.artifact.deployment:
        # Scheduler update interval
      updateInterval: 5

      # Periodic Persistence Configuration
    state.persistence:
      enabled: false
      intervalInMin: 1
      revisionsToKeep: 2
      persistenceStore: org.wso2.carbon.streaming.integrator.core.persistence.FileSystemPersistenceStore
      config:
        location: siddhi-app-persistence

      # Siddhi Error Store Configuration
    error.store:
      enabled: false

      # Size of the buffer which is used in publishing erroneous events to the error store. Must be a power of 2.
      bufferSize: 1024

      # Whether to drop erroneous events when the buffer is full.
      dropWhenBufferFull: true

      # Class that has the implementation of the error store.
      errorStore: org.wso2.carbon.streaming.integrator.core.siddhi.error.handler.DBErrorStore

      config:
        datasource: WSO2_CARBON_DB
        table: SIDDHI_ERROR_STORE_TABLE

      # Secure Vault Configuration
    wso2.securevault:
      secretRepository:
        type: org.wso2.carbon.secvault.repository.DefaultSecretRepository
        parameters:
          privateKeyAlias: wso2carbon
          keystoreLocation: ${sys:carbon.home}/resources/security/securevault.jks
          secretPropertiesFile: ${sys:carbon.home}/conf/${sys:wso2.runtime}/secrets.properties
      masterKeyReader:
        type: org.wso2.carbon.secvault.reader.DefaultMasterKeyReader
        parameters:
          masterKeyReaderFile: ${sys:carbon.home}/conf/${sys:wso2.runtime}/master-keys.yaml

      # Datasource Configurations
    wso2.datasources:
      dataSources:
        -
          name: WSO2_CLUSTER_DB
          description: "The datasource used by cluster coordinators in HA deployment"
          definition:
            type: RDBMS
            configuration:
              connectionTestQuery: "SELECT 1"
              driverClassName: org.h2.Driver
              idleTimeout: 60000
              isAutoCommit: false
              jdbcUrl: "jdbc:h2:${sys:carbon.home}/wso2/${sys:wso2.runtime}/database/WSO2_CLUSTER_DB;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000;AUTO_SERVER=TRUE"
              maxPoolSize: 10
              password: wso2carbon
              username: wso2carbon
              validationTimeout: 30000

        - name: WSO2_PERMISSIONS_DB
          description: The datasource used for permission feature
          jndiConfig:
            name: jdbc/PERMISSION_DB
            useJndiReference: true
          definition:
            type: RDBMS
            configuration:
              jdbcUrl: 'jdbc:h2:${sys:carbon.home}/wso2/${sys:wso2.runtime}/database/PERMISSION_DB;IFEXISTS=TRUE;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000;MVCC=TRUE'
              username: wso2carbon
              password: wso2carbon
              driverClassName: org.h2.Driver
              maxPoolSize: 10
              idleTimeout: 60000
              connectionTestQuery: SELECT 1
              validationTimeout: 30000
              isAutoCommit: false
        # carbon metrics data source
        - name: WSO2_METRICS_DB
          description: The datasource used for dashboard feature
          jndiConfig:
            name: jdbc/WSO2MetricsDB
          definition:
            type: RDBMS
            configuration:
              jdbcUrl: 'jdbc:h2:${sys:carbon.home}/wso2/${sys:wso2.runtime}/database/metrics;AUTO_SERVER=TRUE;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000;'
              username: wso2carbon
              password: wso2carbon
              driverClassName: org.h2.Driver
              maxPoolSize: 30
              idleTimeout: 60000
              connectionTestQuery: SELECT 1
              validationTimeout: 30000
              isAutoCommit: false

      # Cluster Configuration
    cluster.config:
      enabled: false
      groupId:  si
      coordinationStrategyClass: org.wso2.carbon.cluster.coordinator.rdbms.RDBMSCoordinationStrategy
      strategyConfig:
        datasource: WSO2_CLUSTER_DB
        heartbeatInterval: 3000
        heartbeatMaxRetry: 3
        eventPollingInterval: 3000

    # Authentication configuration
    auth.configs:
      type: 'local'        # Type of the IdP client used
      userManager:
        adminRole: admin   # Admin role which is granted all permissions
        userStore:         # User store
          users:
          -
            user:
              username: admin
              password: YWRtaW4=
              roles: 1
          roles:
          -
            role:
              id: 1
              displayName: admin

    # Async API service catalogue configuration
    service.catalog.configs:
      enabled: true
      hostname: wso2am-pattern-1-am-service
      port: 9443
      username: admin@gogo.com
      password: admin

      # Sample of deployment.config for Two node HA
    #deployment.config:
    #  type: ha
    #  passiveNodeDetailsWaitTimeOutMillis: 300000
    #  passiveNodeDetailsRetrySleepTimeMillis: 500
    #  eventSyncServer:
    #    host: localhost
    #    port: 9893
    #    advertisedHost: localhost
    #    advertisedPort: 9893
    #    bossThreads: 10
    #    workerThreads: 10
    #  eventSyncClientPool:
    #    maxActive: 10
    #    maxTotal: 10
    #    maxIdle: 10
    #    maxWait: 60000
    #    minEvictableIdleTimeMillis: 120000

      # Sample of deployment.config for Distributed deployment
    #deployment.config:
    #  type: distributed
    #  isReceiverNode: false
    #  httpsInterface:
    #    host: 192.168.1.3
    #    port: 9443
    #    username: admin
    #    password: admin
    #  leaderRetryInterval: 10000
    #  resourceManagers:
    #    - host: 192.168.1.1
    #      port: 9543
    #      username: admin
    #      password: admin
    #    - host: 192.168.1.2
    #      port: 9543
    #      username: admin
    #      password: admin
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"deployment.yaml":"################################################################################\n#   Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved\n#\n#   Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n################################################################################\n\n  # Carbon Configuration Parameters\nwso2.carbon:\n    # value to uniquely identify a server\n  id: wso2-si\n    # server name\n  name: WSO2 Streaming Integrator\n    # server type\n  type: wso2-si\n    # ports used by this server\n  ports:\n      # port offset\n    offset: 0\n\nwso2.transport.http:\n  transportProperties:\n    -\n      name: \"server.bootstrap.socket.timeout\"\n      value: 60\n    -\n      name: \"client.bootstrap.socket.timeout\"\n      value: 60\n    -\n      name: \"latency.metrics.enabled\"\n      value: true\n\n  listenerConfigurations:\n    -\n      id: \"default\"\n      host: \"0.0.0.0\"\n      port: 9090\n    -\n      id: \"msf4j-https\"\n      host: \"0.0.0.0\"\n      port: 9443\n      scheme: https\n      keyStoreFile: \"${carbon.home}/resources/security/wso2carbon.jks\"\n      keyStorePassword: wso2carbon\n      certPass: wso2carbon\n\n  senderConfigurations:\n    -\n      id: \"http-sender\"\n\nsiddhi.stores.query.api:\n  transportProperties:\n    -\n      name: \"server.bootstrap.socket.timeout\"\n      value: 60\n    -\n      name: \"client.bootstrap.socket.timeout\"\n      value: 60\n    -\n      name: \"latency.metrics.enabled\"\n      value: true\n\n  listenerConfigurations:\n    -\n      id: \"default\"\n      host: \"0.0.0.0\"\n      port: 7070\n    -\n      id: \"msf4j-https\"\n      host: \"0.0.0.0\"\n      port: 7444\n      scheme: https\n      keyStoreFile: \"${carbon.home}/resources/security/wso2carbon.jks\"\n      keyStorePassword: wso2carbon\n      certPass: wso2carbon\n\n  # Configuration used for the databridge communication\ndatabridge.config:\n    # No of worker threads to consume events\n    # THIS IS A MANDATORY FIELD\n  workerThreads: 10\n    # Maximum amount of messages that can be queued internally in MB\n    # THIS IS A MANDATORY FIELD\n  maxEventBufferCapacity: 10000000\n    # Queue size; the maximum number of events that can be stored in the queue\n    # THIS IS A MANDATORY FIELD\n  eventBufferSize: 2000\n    # Keystore file path\n    # THIS IS A MANDATORY FIELD\n  keyStoreLocation : ${sys:carbon.home}/resources/security/wso2carbon.jks\n    # Keystore password\n    # THIS IS A MANDATORY FIELD\n  keyStorePassword : wso2carbon\n    # Session Timeout value in mins\n    # THIS IS A MANDATORY FIELD\n  clientTimeoutMin: 30\n    # Data receiver configurations\n    # THIS IS A MANDATORY FIELD\n  dataReceivers:\n  -\n      # Data receiver configuration\n    dataReceiver:\n        # Data receiver type\n        # THIS IS A MANDATORY FIELD\n      type: Thrift\n        # Data receiver properties\n      properties:\n        tcpPort: '7611'\n        sslPort: '7711'\n\n  -\n      # Data receiver configuration\n    dataReceiver:\n        # Data receiver type\n        # THIS IS A MANDATORY FIELD\n      type: Binary\n        # Data receiver properties\n      properties:\n        tcpPort: '9611'\n        sslPort: '9711'\n        tcpReceiverThreadPoolSize: '100'\n        sslReceiverThreadPoolSize: '100'\n        hostName: 0.0.0.0\n\n  # Configuration of the Data Agents - to publish events through databridge\ndata.agent.config:\n    # Data agent configurations\n    # THIS IS A MANDATORY FIELD\n  agents:\n  -\n      # Data agent configuration\n    agentConfiguration:\n        # Data agent name\n        # THIS IS A MANDATORY FIELD\n      name: Thrift\n        # Data endpoint class\n        # THIS IS A MANDATORY FIELD\n      dataEndpointClass: org.wso2.carbon.databridge.agent.endpoint.thrift.ThriftDataEndpoint\n        # Data publisher strategy\n      publishingStrategy: async\n        # Trust store path\n      trustStorePath: '${sys:carbon.home}/resources/security/client-truststore.jks'\n        # Trust store password\n      trustStorePassword: 'wso2carbon'\n        # Queue Size\n      queueSize: 32768\n        # Batch Size\n      batchSize: 200\n        # Core pool size\n      corePoolSize: 1\n        # Socket timeout in milliseconds\n      socketTimeoutMS: 30000\n        # Maximum pool size\n      maxPoolSize: 1\n        # Keep alive time in pool\n      keepAliveTimeInPool: 20\n        # Reconnection interval\n      reconnectionInterval: 30\n        # Max transport pool size\n      maxTransportPoolSize: 250\n        # Max idle connections\n      maxIdleConnections: 250\n        # Eviction time interval\n      evictionTimePeriod: 5500\n        # Min idle time in pool\n      minIdleTimeInPool: 5000\n        # Secure max transport pool size\n      secureMaxTransportPoolSize: 250\n        # Secure max idle connections\n      secureMaxIdleConnections: 250\n        # secure eviction time period\n      secureEvictionTimePeriod: 5500\n        # Secure min idle time in pool\n      secureMinIdleTimeInPool: 5000\n        # SSL enabled protocols\n      sslEnabledProtocols: TLSv1.1,TLSv1.2\n        # Ciphers\n      ciphers: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256\n  -\n      # Data agent configuration\n    agentConfiguration:\n        # Data agent name\n        # THIS IS A MANDATORY FIELD\n      name: Binary\n        # Data endpoint class\n        # THIS IS A MANDATORY FIELD\n      dataEndpointClass: org.wso2.carbon.databridge.agent.endpoint.binary.BinaryDataEndpoint\n        # Data publisher strategy\n      publishingStrategy: async\n        # Trust store path\n      trustStorePath: '${sys:carbon.home}/resources/security/client-truststore.jks'\n        # Trust store password\n      trustStorePassword: 'wso2carbon'\n        # Queue Size\n      queueSize: 32768\n        # Batch Size\n      batchSize: 200\n        # Core pool size\n      corePoolSize: 1\n        # Socket timeout in milliseconds\n      socketTimeoutMS: 30000\n        # Maximum pool size\n      maxPoolSize: 1\n        # Keep alive time in pool\n      keepAliveTimeInPool: 20\n        # Reconnection interval\n      reconnectionInterval: 30\n        # Max transport pool size\n      maxTransportPoolSize: 250\n        # Max idle connections\n      maxIdleConnections: 250\n        # Eviction time interval\n      evictionTimePeriod: 5500\n        # Min idle time in pool\n      minIdleTimeInPool: 5000\n        # Secure max transport pool size\n      secureMaxTransportPoolSize: 250\n        # Secure max idle connections\n      secureMaxIdleConnections: 250\n        # secure eviction time period\n      secureEvictionTimePeriod: 5500\n        # Secure min idle time in pool\n      secureMinIdleTimeInPool: 5000\n        # SSL enabled protocols\n      sslEnabledProtocols: TLSv1.1,TLSv1.2\n        # Ciphers\n      ciphers: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256\n\n# This is the main configuration for metrics\nwso2.metrics:\n  # Enable Metrics\n  enabled: false\n  reporting:\n    console:\n      - # The name for the Console Reporter\n        name: Console\n\n        # Enable Console Reporter\n        enabled: false\n\n        # Polling Period in seconds.\n        # This is the period for polling metrics from the metric registry and printing in the console\n        pollingPeriod: 5\n\nwso2.metrics.jdbc:\n  # Data Source Configurations for JDBC Reporters\n  dataSource:\n    # Default Data Source Configuration\n    - \u0026JDBC01\n      # JNDI name of the data source to be used by the JDBC Reporter.\n      # This data source should be defined in a *-datasources.xml file in conf/datasources directory.\n      dataSourceName: java:comp/env/jdbc/WSO2MetricsDB\n      # Schedule regular deletion of metrics data older than a set number of days.\n      # It is recommended that you enable this job to ensure your metrics tables do not get extremely large.\n      # Deleting data older than seven days should be sufficient.\n      scheduledCleanup:\n        # Enable scheduled cleanup to delete Metrics data in the database.\n        enabled: true\n\n        # The scheduled job will cleanup all data older than the specified days\n        daysToKeep: 3\n\n        # This is the period for each cleanup operation in seconds.\n        scheduledCleanupPeriod: 86400\n\n  # The JDBC Reporter is in the Metrics JDBC Core feature\n  reporting:\n    # The JDBC Reporter configurations will be ignored if the Metrics JDBC Core feature is not available in runtime\n    jdbc:\n      - # The name for the JDBC Reporter\n        name: JDBC\n\n        # Enable JDBC Reporter\n        enabled: true\n\n        # Source of Metrics, which will be used to identify each metric in database --\u003e\n        # Commented to use the hostname by default\n        # source: Carbon\n\n        # Alias referring to the Data Source configuration\n        dataSource: *JDBC01\n\n        # Polling Period in seconds.\n        # This is the period for polling metrics from the metric registry and updating the database with the values\n        pollingPeriod: 60\n\n  # Deployment configuration parameters\nwso2.artifact.deployment:\n    # Scheduler update interval\n  updateInterval: 5\n\n  # Periodic Persistence Configuration\nstate.persistence:\n  enabled: false\n  intervalInMin: 1\n  revisionsToKeep: 2\n  persistenceStore: org.wso2.carbon.streaming.integrator.core.persistence.FileSystemPersistenceStore\n  config:\n    location: siddhi-app-persistence\n\n  # Siddhi Error Store Configuration\nerror.store:\n  enabled: false\n\n  # Size of the buffer which is used in publishing erroneous events to the error store. Must be a power of 2.\n  bufferSize: 1024\n\n  # Whether to drop erroneous events when the buffer is full.\n  dropWhenBufferFull: true\n\n  # Class that has the implementation of the error store.\n  errorStore: org.wso2.carbon.streaming.integrator.core.siddhi.error.handler.DBErrorStore\n\n  config:\n    datasource: WSO2_CARBON_DB\n    table: SIDDHI_ERROR_STORE_TABLE\n\n  # Secure Vault Configuration\nwso2.securevault:\n  secretRepository:\n    type: org.wso2.carbon.secvault.repository.DefaultSecretRepository\n    parameters:\n      privateKeyAlias: wso2carbon\n      keystoreLocation: ${sys:carbon.home}/resources/security/securevault.jks\n      secretPropertiesFile: ${sys:carbon.home}/conf/${sys:wso2.runtime}/secrets.properties\n  masterKeyReader:\n    type: org.wso2.carbon.secvault.reader.DefaultMasterKeyReader\n    parameters:\n      masterKeyReaderFile: ${sys:carbon.home}/conf/${sys:wso2.runtime}/master-keys.yaml\n\n  # Datasource Configurations\nwso2.datasources:\n  dataSources:\n    -\n      name: WSO2_CLUSTER_DB\n      description: \"The datasource used by cluster coordinators in HA deployment\"\n      definition:\n        type: RDBMS\n        configuration:\n          connectionTestQuery: \"SELECT 1\"\n          driverClassName: org.h2.Driver\n          idleTimeout: 60000\n          isAutoCommit: false\n          jdbcUrl: \"jdbc:h2:${sys:carbon.home}/wso2/${sys:wso2.runtime}/database/WSO2_CLUSTER_DB;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000;AUTO_SERVER=TRUE\"\n          maxPoolSize: 10\n          password: wso2carbon\n          username: wso2carbon\n          validationTimeout: 30000\n\n    - name: WSO2_PERMISSIONS_DB\n      description: The datasource used for permission feature\n      jndiConfig:\n        name: jdbc/PERMISSION_DB\n        useJndiReference: true\n      definition:\n        type: RDBMS\n        configuration:\n          jdbcUrl: 'jdbc:h2:${sys:carbon.home}/wso2/${sys:wso2.runtime}/database/PERMISSION_DB;IFEXISTS=TRUE;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000;MVCC=TRUE'\n          username: wso2carbon\n          password: wso2carbon\n          driverClassName: org.h2.Driver\n          maxPoolSize: 10\n          idleTimeout: 60000\n          connectionTestQuery: SELECT 1\n          validationTimeout: 30000\n          isAutoCommit: false\n    # carbon metrics data source\n    - name: WSO2_METRICS_DB\n      description: The datasource used for dashboard feature\n      jndiConfig:\n        name: jdbc/WSO2MetricsDB\n      definition:\n        type: RDBMS\n        configuration:\n          jdbcUrl: 'jdbc:h2:${sys:carbon.home}/wso2/${sys:wso2.runtime}/database/metrics;AUTO_SERVER=TRUE;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000;'\n          username: wso2carbon\n          password: wso2carbon\n          driverClassName: org.h2.Driver\n          maxPoolSize: 30\n          idleTimeout: 60000\n          connectionTestQuery: SELECT 1\n          validationTimeout: 30000\n          isAutoCommit: false\n\n  # Cluster Configuration\ncluster.config:\n  enabled: false\n  groupId:  si\n  coordinationStrategyClass: org.wso2.carbon.cluster.coordinator.rdbms.RDBMSCoordinationStrategy\n  strategyConfig:\n    datasource: WSO2_CLUSTER_DB\n    heartbeatInterval: 3000\n    heartbeatMaxRetry: 3\n    eventPollingInterval: 3000\n\n# Authentication configuration\nauth.configs:\n  type: 'local'        # Type of the IdP client used\n  userManager:\n    adminRole: admin   # Admin role which is granted all permissions\n    userStore:         # User store\n      users:\n      -\n        user:\n          username: admin\n          password: YWRtaW4=\n          roles: 1\n      roles:\n      -\n        role:\n          id: 1\n          displayName: admin\n\n# Async API service catalogue configuration\nservice.catalog.configs:\n  enabled: true\n  hostname: wso2am-pattern-1-am-service\n  port: 9443\n  username: admin@gogo.com\n  password: admin\n\n  # Sample of deployment.config for Two node HA\n#deployment.config:\n#  type: ha\n#  passiveNodeDetailsWaitTimeOutMillis: 300000\n#  passiveNodeDetailsRetrySleepTimeMillis: 500\n#  eventSyncServer:\n#    host: localhost\n#    port: 9893\n#    advertisedHost: localhost\n#    advertisedPort: 9893\n#    bossThreads: 10\n#    workerThreads: 10\n#  eventSyncClientPool:\n#    maxActive: 10\n#    maxTotal: 10\n#    maxIdle: 10\n#    maxWait: 60000\n#    minEvictableIdleTimeMillis: 120000\n\n  # Sample of deployment.config for Distributed deployment\n#deployment.config:\n#  type: distributed\n#  isReceiverNode: false\n#  httpsInterface:\n#    host: 192.168.1.3\n#    port: 9443\n#    username: admin\n#    password: admin\n#  leaderRetryInterval: 10000\n#  resourceManagers:\n#    - host: 192.168.1.1\n#      port: 9543\n#      username: admin\n#      password: admin\n#    - host: 192.168.1.2\n#      port: 9543\n#      username: admin\n#      password: admin\n"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"wso2si-cm","namespace":"apim-demo"}}
  creationTimestamp: "2021-06-01T13:44:04Z"
  name: wso2si-cm
  namespace: apim-demo
  resourceVersion: "693795"
  uid: d4954534-1a23-4cfa-a0cd-fda974e1bba3
