apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "7"
    meta.helm.sh/release-name: apim4
    meta.helm.sh/release-namespace: apim-demo
  creationTimestamp: "2021-05-31T21:54:21Z"
  generation: 8
  labels:
    app.kubernetes.io/instance: apim4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: am-pattern-1
    app.kubernetes.io/version: 4.0.0
    helm.sh/chart: am-pattern-1-4.0.0-1
  name: wso2am-pattern-1-mi-1-deployment
  namespace: apim-demo
  resourceVersion: "65750057"
  uid: 03659132-a27d-49d2-b99e-f1afb3075a19
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: wso2am-pattern-1-mi
      node: wso2am-pattern-1-mi-1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        deployment: wso2am-pattern-1-mi
        node: wso2am-pattern-1-mi-1
    spec:
      containers:
      - image: dushaniw/mi4.0.0-demo
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - nc -z localhost 8290
          failureThreshold: 3
          initialDelaySeconds: 35
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: wso2micro-integrator
        ports:
        - containerPort: 8290
          protocol: TCP
        - containerPort: 9201
          protocol: TCP
        - containerPort: 9164
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 9201
            scheme: HTTP
          initialDelaySeconds: 35
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          runAsUser: 802
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /home/wso2carbon/wso2-config-volume/conf
          name: wso2mi-conf
        - mountPath: /home/wso2carbon/wso2-config-volume/lib
          name: mysql-connector-jar
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - echo -e "Checking for the availability of API Manager deployment"; while
          ! nc -z wso2am-pattern-1-am-service 9443; do sleep 1; printf "-"; done;
          echo -e "  >> API Manager has started";
        image: busybox:1.32
        imagePullPolicy: IfNotPresent
        name: init-am
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - command:
        - sh
        - -c
        - echo -e "Checking for the availability of MySQL Server deployment"; while
          ! nc -z "wso2am-mysql-db-service" 3306; do sleep 1; printf "-"; done; echo
          -e "  >> MySQL Server has started";
        image: busybox:1.32
        imagePullPolicy: IfNotPresent
        name: init-mysql-db
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - command:
        - /bin/sh
        - -c
        - |
          set -e
          connector_version=8.0.17
          wget https://repo1.maven.org/maven2/mysql/mysql-connector-java/${connector_version}/mysql-connector-java-${connector_version}.jar -P /mysql-connector-jar/
        image: busybox:1.32
        imagePullPolicy: IfNotPresent
        name: init-mysql-connector-download
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /mysql-connector-jar
          name: mysql-connector-jar
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: wso2am-pattern-1-svc-account
      serviceAccountName: wso2am-pattern-1-svc-account
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: wso2am-pattern-1-mi-1-conf
        name: wso2mi-conf
      - emptyDir: {}
        name: mysql-connector-jar
