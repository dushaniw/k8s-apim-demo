apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  name: wso2am-pattern-1-am-1-deployment
  namespace: apim-demo
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: wso2am-pattern-1-am
      node: wso2am-pattern-1-am-1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        deployment: wso2am-pattern-1-am
        node: wso2am-pattern-1-am-1
    spec:
      containers:
      - env:
        - name: NODE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: JVM_MEM_OPTS
          value: -Xms1024m -Xmx1024m
        image: dushaniw/apim4.0.0-demo
        imagePullPolicy: Always
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - ${WSO2_SERVER_HOME}/bin/api-manager.sh stop
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - nc -z localhost 9443
          failureThreshold: 3
          initialDelaySeconds: 180
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: wso2am
        ports:
        - containerPort: 8280
          protocol: TCP
        - containerPort: 8243
          protocol: TCP
        - containerPort: 9763
          protocol: TCP
        - containerPort: 9443
          protocol: TCP
        - containerPort: 9711
          protocol: TCP
        - containerPort: 9611
          protocol: TCP
        - containerPort: 5672
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - nc -z localhost 9443
          failureThreshold: 3
          initialDelaySeconds: 180
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "3"
            memory: 3Gi
          requests:
            cpu: "2"
            memory: 2Gi
        securityContext:
          runAsUser: 802
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /home/wso2carbon/wso2-config-volume/repository/conf
          name: wso2am-conf
        - mountPath: /home/wso2carbon/wso2-artifact-volume/repository/components/dropins
          name: mysql-connector-jar
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - echo -e "Checking for the availability of MySQL Server deployment"; while
          ! nc -z "wso2am-mysql-db-service" 3306; do sleep 1; printf "-"; done; echo
          -e "  >> MySQL Server has started";
        image: busybox:1.32
        imagePullPolicy: IfNotPresent
        name: init-mysql-db
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - command:
        - /bin/sh
        - -c
        - |
          set -e
          connector_version=8.0.17
          wget https://repo1.maven.org/maven2/mysql/mysql-connector-java/${connector_version}/mysql-connector-java-${connector_version}.jar -P /mysql-connector-jar/
        image: busybox:1.32
        imagePullPolicy: IfNotPresent
        name: init-mysql-connector-download
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /mysql-connector-jar
          name: mysql-connector-jar
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: wso2am-pattern-1-svc-account
      serviceAccountName: wso2am-pattern-1-svc-account
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: wso2am-pattern-1-am-1-conf
        name: wso2am-conf
      - emptyDir: {}
        name: mysql-connector-jar